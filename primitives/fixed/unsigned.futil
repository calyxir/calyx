/**
* Unsigned fixed point primitives.
*/
extern "unsigned.sv" {

  primitive fixed_p_std_const<"share"=1>[
    width, int_width, fract_width, value1, value2
  ]() -> (out: width);

  primitive fixed_p_std_add<"share"=1>[
    width, int_width, fract_width
  ](left: width, right: width) ->(out: width);

  primitive fixed_p_std_sub<"share"=1>[
    width, int_width, fract_width
  ](left: width, right: width)->(out: width);

  primitive fixed_p_std_gt<"share"=1>[
    width, int_width, fract_width
  ](left: width, right: width) -> (out: 1);

  primitive fixed_p_std_add_dbit<"share"=1>[
    width1,
    width2 ,
    int_width1,
    fract_width1,
    int_width2,
    fract_width2,
    out_width
  ](left: width1, right: width2) -> (out: out_width);

  /// ========================= Unsynthesizable Primitives ====================

  primitive fixed_p_std_mult<"share"=1>[
    width, int_width, fract_width
  ](left: width, right: width) -> (out: width);

  primitive fixed_p_std_div<"share"=1>[
    width, int_width, fract_width
  ](left: width, right: width) -> (out: width);


}
