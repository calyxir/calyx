/**
 * Signed fixed point numbers
 */
extern "signed.sv" {
  primitive std_fp_smult_pipe[
    WIDTH, INT_WIDTH, FRAC_WIDTH
  ](
    clk: 1, go: 1, left: WIDTH, right: WIDTH
  ) -> (
    out: WIDTH, done: 1
  );

  primitive std_fp_sadd<"share"=1>[
    WIDTH, INT_WIDTH, FRAC_WIDTH
  ](left: WIDTH, right: WIDTH) -> (out: WIDTH);

  primitive std_fp_ssub<"share"=1>[
    WIDTH, INT_WIDTH, FRAC_WIDTH
  ](left: WIDTH, right: WIDTH) -> (out: WIDTH);

  primitive std_fp_sadd_dwidth<"share"=1>[
    WIDTH1,
    WIDTH2 ,
    INT_WIDTH1,
    FRAC_WIDTH1,
    INT_WIDTH2,
    FRAC_WIDTH2,
    OUT_WIDTH
  ](left: WIDTH1, right: WIDTH2) -> (out: OUT_WIDTH);

  primitive std_fp_sgt<"share"=1>[
    WIDTH, INT_WIDTH, FRAC_WIDTH
  ](left: WIDTH, right: WIDTH) -> (out: 1);


  /// =================== Unsynthesizable Primitives =========================
  primitive std_fp_smult<"share"=1>[
    WIDTH, INT_WIDTH, FRAC_WIDTH
  ](left: WIDTH, right: WIDTH) -> (out: WIDTH);

  primitive std_fp_sdiv<"share"=1>[
    WIDTH, INT_WIDTH, FRAC_WIDTH
  ](left: WIDTH, right: WIDTH) -> (out: WIDTH);
}
