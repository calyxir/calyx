extern "/Users/calebkim/learning/calyx/primitives/pipelined.sv" {
  static<4> primitive pipelined_mult(@clk clk: 1, @reset reset: 1, left: 32, right: 32) -> (out: 32);
  static<4> primitive pipelined_fp_smult[WIDTH, INT_WIDTH, FRAC_WIDTH](@clk clk: 1, @reset reset: 1, left: WIDTH, right: WIDTH) -> (out: WIDTH);
}
extern "/Users/calebkim/learning/calyx/primitives/binary_operators.sv" {
  comb primitive std_fp_add<"share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_fp_sub<"share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  primitive std_fp_mult_pipe<"state_share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@clk clk: 1, @reset reset: 1, @write_together @static(3) @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (@stable out: WIDTH, @done done: 1);
  primitive std_fp_div_pipe<"state_share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@clk clk: 1, @reset reset: 1, @write_together @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (@stable out_remainder: WIDTH, @stable out_quotient: WIDTH, @done done: 1);
  comb primitive std_fp_gt<"share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_fp_sadd<"share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_fp_ssub<"share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  primitive std_fp_smult_pipe<"state_share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@clk clk: 1, @reset reset: 1, @write_together @static(3) @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (@stable out: WIDTH, @done done: 1);
  primitive std_fp_sdiv_pipe<"state_share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@clk clk: 1, @reset reset: 1, @write_together @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (@stable out_remainder: WIDTH, @stable out_quotient: WIDTH, @done done: 1);
  comb primitive std_fp_sgt<"share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_fp_slt<"share"=1>[WIDTH, INT_WIDTH, FRAC_WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  primitive std_mult_pipe<"state_share"=1>[WIDTH](@clk clk: 1, @reset reset: 1, @write_together @static(3) @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (@stable out: WIDTH, @done done: 1);
  primitive std_div_pipe<"state_share"=1>[WIDTH](@clk clk: 1, @reset reset: 1, @write_together @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (@stable out_quotient: WIDTH, @stable out_remainder: WIDTH, @done done: 1);
  comb primitive std_sadd<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_ssub<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  primitive std_smult_pipe<"state_share"=1>[WIDTH](@clk clk: 1, @reset reset: 1, @write_together @static(3) @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (@stable out: WIDTH, @done done: 1);
  primitive std_sdiv_pipe[WIDTH](@clk clk: 1, @reset reset: 1, @write_together @go go: 1, @write_together @data left: WIDTH, @write_together @data right: WIDTH) -> (out_quotient: WIDTH, out_remainder: WIDTH, @done done: 1);
  comb primitive std_sgt<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_slt<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_seq<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_sneq<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_sge<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_sle<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_slsh<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_srsh<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
}
extern "/Users/calebkim/learning/calyx/primitives/core.sv" {
  comb primitive std_slice<"share"=1>[IN_WIDTH, OUT_WIDTH](@data in: IN_WIDTH) -> (out: OUT_WIDTH);
  comb primitive std_pad<"share"=1>[IN_WIDTH, OUT_WIDTH](@data in: IN_WIDTH) -> (out: OUT_WIDTH);
  comb primitive std_cat<"share"=1>[LEFT_WIDTH, RIGHT_WIDTH, OUT_WIDTH](@data left: LEFT_WIDTH, @data right: RIGHT_WIDTH) -> (out: OUT_WIDTH);
  comb primitive std_not<"share"=1>[WIDTH](@data in: WIDTH) -> (out: WIDTH);
  comb primitive std_and<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_or<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_xor<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_sub<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_gt<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_lt<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_eq<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_neq<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_ge<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_le<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: 1);
  comb primitive std_lsh<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_rsh<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH);
  comb primitive std_mux<"share"=1>[WIDTH](@data cond: 1, @data tru: WIDTH, @data fal: WIDTH) -> (out: WIDTH);
  primitive std_mem_d1[WIDTH, SIZE, IDX_SIZE](@read_together addr0: IDX_SIZE, @write_together @data write_data: WIDTH, @write_together @static @go write_en: 1, @clk clk: 1, @reset reset: 1) -> (@read_together read_data: WIDTH, @done done: 1);
  primitive std_mem_d2[WIDTH, D0_SIZE, D1_SIZE, D0_IDX_SIZE, D1_IDX_SIZE](@read_together @write_together(2) addr0: D0_IDX_SIZE, @read_together @write_together(2) addr1: D1_IDX_SIZE, @write_together @data write_data: WIDTH, @write_together @static @go write_en: 1, @clk clk: 1, @reset reset: 1) -> (@read_together read_data: WIDTH, @done done: 1);
  primitive std_mem_d3[WIDTH, D0_SIZE, D1_SIZE, D2_SIZE, D0_IDX_SIZE, D1_IDX_SIZE, D2_IDX_SIZE](@read_together @write_together(2) addr0: D0_IDX_SIZE, @read_together @write_together(2) addr1: D1_IDX_SIZE, @read_together @write_together(2) addr2: D2_IDX_SIZE, @write_together @data write_data: WIDTH, @write_together @static @go write_en: 1, @clk clk: 1, @reset reset: 1) -> (@read_together read_data: WIDTH, @done done: 1);
  primitive std_mem_d4[WIDTH, D0_SIZE, D1_SIZE, D2_SIZE, D3_SIZE, D0_IDX_SIZE, D1_IDX_SIZE, D2_IDX_SIZE, D3_IDX_SIZE](@read_together @write_together(2) addr0: D0_IDX_SIZE, @read_together @write_together(2) addr1: D1_IDX_SIZE, @read_together @write_together(2) addr2: D2_IDX_SIZE, @read_together @write_together(2) addr3: D3_IDX_SIZE, @write_together @data write_data: WIDTH, @write_together @static @go write_en: 1, @clk clk: 1) -> (@read_together read_data: WIDTH, @done done: 1);
}
primitive undef<"share"=1>[WIDTH]() -> (out: WIDTH) {
  assign out = 'x;
}
comb primitive std_const<"share"=1>[WIDTH, VALUE]() -> (out: WIDTH) {
  assign out = VALUE;
}
comb primitive std_wire<"share"=1>[WIDTH](@data in: WIDTH) -> (out: WIDTH) {
  assign out = in;
}
comb primitive std_add<"share"=1>[WIDTH](@data left: WIDTH, @data right: WIDTH) -> (out: WIDTH) {
  assign out = left + right;
}
primitive std_reg<"state_share"=1>[WIDTH](@write_together @data in: WIDTH, @write_together @static @go write_en: 1, @clk clk: 1, @reset reset: 1) -> (@stable out: WIDTH, @done done: 1) {
  always_ff @(posedge clk) begin
    if (reset) begin
       out <= 0;
       done <= 0;
    end else if (write_en) begin
      out <= in;
      done <= 1'd1;
    end else done <= 1'd0;
  end
}
static<1> component mac_pe(top: 32, left: 32, mul_ready: 1, @go go: 1, @clk clk: 1, @reset reset: 1) -> (out: 32, @done done: 1) {
  cells {
    @data acc = std_reg(32);
    @data adder = std_fp_sadd(32, 16, 16);
    @data mul = pipelined_fp_smult(32, 16, 16);
    @generated fsm = std_reg(1);
    @generated ud = undef(1);
    @generated adder0 = std_add(1);
    @generated signal_reg = std_reg(1);
    @generated early_reset_static_par_go = std_wire(1);
    @generated early_reset_static_par_done = std_wire(1);
    @generated wrapper_early_reset_static_par_go = std_wire(1);
    @generated wrapper_early_reset_static_par_done = std_wire(1);
  }
  wires {
    acc.write_en = early_reset_static_par_go.out ? mul_ready;
    acc.clk = clk;
    acc.reset = reset;
    acc.in = early_reset_static_par_go.out ? adder.out;
    adder.left = early_reset_static_par_go.out ? acc.out;
    adder.right = early_reset_static_par_go.out ? mul.out;
    done = wrapper_early_reset_static_par_done.out ? 1'd1;
    out = acc.out;
    fsm.write_en = early_reset_static_par_go.out ? 1'd1;
    fsm.clk = clk;
    fsm.reset = reset;
    fsm.in = fsm.out == 1'd0 & early_reset_static_par_go.out ? 1'd0;
    fsm.in = fsm.out != 1'd0 & early_reset_static_par_go.out ? adder0.out;
    wrapper_early_reset_static_par_go.in = go;
    wrapper_early_reset_static_par_done.in = fsm.out == 1'd0 & signal_reg.out ? 1'd1;
    adder0.left = early_reset_static_par_go.out ? fsm.out;
    adder0.right = early_reset_static_par_go.out ? 1'd1;
    early_reset_static_par_done.in = ud.out;
    signal_reg.write_en = fsm.out == 1'd0 & signal_reg.out | fsm.out == 1'd0 & !signal_reg.out & wrapper_early_reset_static_par_go.out ? 1'd1;
    signal_reg.clk = clk;
    signal_reg.reset = reset;
    signal_reg.in = fsm.out == 1'd0 & !signal_reg.out & wrapper_early_reset_static_par_go.out ? 1'd1;
    signal_reg.in = fsm.out == 1'd0 & signal_reg.out ? 1'd0;
    mul.clk = clk;
    mul.left = early_reset_static_par_go.out ? top;
    mul.reset = reset;
    mul.right = early_reset_static_par_go.out ? left;
    early_reset_static_par_go.in = wrapper_early_reset_static_par_go.out ? 1'd1;
  }
  control {}
}
component systolic_array_comp(depth: 32, t0_read_data: 32, t1_read_data: 32, t2_read_data: 32, l0_read_data: 32, l1_read_data: 32, l2_read_data: 32, @go go: 1, @clk clk: 1, @reset reset: 1) -> (t0_addr0: 2, t1_addr0: 2, t2_addr0: 2, l0_addr0: 2, l1_addr0: 2, l2_addr0: 2, out_mem_0_addr0: 32, out_mem_0_write_data: 32, out_mem_0_write_en: 1, out_mem_1_addr0: 32, out_mem_1_write_data: 32, out_mem_1_write_en: 1, out_mem_2_addr0: 32, out_mem_2_write_data: 32, out_mem_2_write_en: 1, @done done: 1) {
  cells {
    @data min_depth_4 = std_reg(32);
    @data iter_limit = std_reg(32);
    @data depth_plus_4 = std_add(32);
    @data min_depth_4_plus_4 = std_add(32);
    @data depth_plus_8 = std_add(32);
    @data min_depth_4_plus_5 = std_add(32);
    @data min_depth_4_plus_2 = std_add(32);
    @data depth_plus_5 = std_add(32);
    @data depth_plus_7 = std_add(32);
    @data depth_plus_0 = std_add(32);
    @data depth_plus_9 = std_add(32);
    @data depth_plus_6 = std_add(32);
    @data depth_plus_1 = std_add(32);
    @data min_depth_4_plus_1 = std_add(32);
    @data depth_plus_3 = std_add(32);
    @data min_depth_4_plus_3 = std_add(32);
    @data depth_plus_2 = std_add(32);
    @control pe_0_0 = mac_pe();
    @data top_0_0 = std_reg(32);
    @data left_0_0 = std_reg(32);
    @control pe_0_1 = mac_pe();
    @data top_0_1 = std_reg(32);
    @data left_0_1 = std_reg(32);
    @control pe_0_2 = mac_pe();
    @data top_0_2 = std_reg(32);
    @data left_0_2 = std_reg(32);
    @control pe_1_0 = mac_pe();
    @data top_1_0 = std_reg(32);
    @data left_1_0 = std_reg(32);
    @control pe_1_1 = mac_pe();
    @data top_1_1 = std_reg(32);
    @data left_1_1 = std_reg(32);
    @control pe_1_2 = mac_pe();
    @data top_1_2 = std_reg(32);
    @data left_1_2 = std_reg(32);
    @control pe_2_0 = mac_pe();
    @data top_2_0 = std_reg(32);
    @data left_2_0 = std_reg(32);
    @control pe_2_1 = mac_pe();
    @data top_2_1 = std_reg(32);
    @data left_2_1 = std_reg(32);
    @control pe_2_2 = mac_pe();
    @data top_2_2 = std_reg(32);
    @data left_2_2 = std_reg(32);
    @data t0_idx = std_reg(2);
    @data t0_add = std_add(2);
    @data t1_idx = std_reg(2);
    @data t1_add = std_add(2);
    @data t2_idx = std_reg(2);
    @data t2_add = std_add(2);
    @data l0_idx = std_reg(2);
    @data l0_add = std_add(2);
    @data l1_idx = std_reg(2);
    @data l1_add = std_add(2);
    @data l2_idx = std_reg(2);
    @data l2_add = std_add(2);
    @data idx = std_reg(32);
    @data idx_add = std_add(32);
    @data lt_iter_limit = std_lt(32);
    @data cond_reg = std_reg(1);
    @data idx_between_4_depth_plus_4_reg = std_reg(1);
    @data index_lt_depth_plus_4 = std_lt(32);
    @data index_ge_4 = std_ge(32);
    @data idx_between_4_depth_plus_4_comb = std_and(1);
    @data idx_between_4_min_depth_4_plus_4_reg = std_reg(1);
    @data index_lt_min_depth_4_plus_4 = std_lt(32);
    @data idx_between_4_min_depth_4_plus_4_comb = std_and(1);
    @data idx_between_8_depth_plus_8_reg = std_reg(1);
    @data index_lt_depth_plus_8 = std_lt(32);
    @data index_ge_8 = std_ge(32);
    @data idx_between_8_depth_plus_8_comb = std_and(1);
    @data idx_between_5_min_depth_4_plus_5_reg = std_reg(1);
    @data index_lt_min_depth_4_plus_5 = std_lt(32);
    @data index_ge_5 = std_ge(32);
    @data idx_between_5_min_depth_4_plus_5_comb = std_and(1);
    @data idx_between_2_min_depth_4_plus_2_reg = std_reg(1);
    @data index_lt_min_depth_4_plus_2 = std_lt(32);
    @data index_ge_2 = std_ge(32);
    @data idx_between_2_min_depth_4_plus_2_comb = std_and(1);
    @data idx_between_5_depth_plus_5_reg = std_reg(1);
    @data index_lt_depth_plus_5 = std_lt(32);
    @data idx_between_5_depth_plus_5_comb = std_and(1);
    @data idx_between_7_depth_plus_7_reg = std_reg(1);
    @data index_lt_depth_plus_7 = std_lt(32);
    @data index_ge_7 = std_ge(32);
    @data idx_between_7_depth_plus_7_comb = std_and(1);
    @data idx_between_0_depth_plus_0_reg = std_reg(1);
    @data index_lt_depth_plus_0 = std_lt(32);
    @data idx_between_9_depth_plus_9_reg = std_reg(1);
    @data index_lt_depth_plus_9 = std_lt(32);
    @data index_ge_9 = std_ge(32);
    @data idx_between_9_depth_plus_9_comb = std_and(1);
    @data idx_between_depth_plus_6_None_reg = std_reg(1);
    @data idx_between_1_depth_plus_1_reg = std_reg(1);
    @data index_lt_depth_plus_1 = std_lt(32);
    @data index_ge_1 = std_ge(32);
    @data idx_between_1_depth_plus_1_comb = std_and(1);
    @data idx_between_1_min_depth_4_plus_1_reg = std_reg(1);
    @data index_lt_min_depth_4_plus_1 = std_lt(32);
    @data idx_between_1_min_depth_4_plus_1_comb = std_and(1);
    @data idx_between_3_depth_plus_3_reg = std_reg(1);
    @data index_lt_depth_plus_3 = std_lt(32);
    @data index_ge_3 = std_ge(32);
    @data idx_between_3_depth_plus_3_comb = std_and(1);
    @data idx_between_3_min_depth_4_plus_3_reg = std_reg(1);
    @data index_lt_min_depth_4_plus_3 = std_lt(32);
    @data idx_between_3_min_depth_4_plus_3_comb = std_and(1);
    @data idx_between_depth_plus_7_None_reg = std_reg(1);
    @data idx_between_2_depth_plus_2_reg = std_reg(1);
    @data index_lt_depth_plus_2 = std_lt(32);
    @data idx_between_2_depth_plus_2_comb = std_and(1);
    @data idx_between_6_depth_plus_6_reg = std_reg(1);
    @data index_lt_depth_plus_6 = std_lt(32);
    @data index_ge_6 = std_ge(32);
    @data idx_between_6_depth_plus_6_comb = std_and(1);
    @data idx_between_depth_plus_5_None_reg = std_reg(1);
    @control relu_r0_cur_val = std_wire(32);
    @data relu_r0_cur_idx = std_reg(32);
    @control relu_r0_val_gt = std_fp_sgt(32, 16, 16);
    @control relu_r0_go_next = std_wire(32);
    @data relu_r0_incr = std_add(32);
    @data relu_r0_val_mult = std_fp_smult_pipe(32, 16, 16);
    @control relu_r1_cur_val = std_wire(32);
    @data relu_r1_cur_idx = std_reg(32);
    @control relu_r1_val_gt = std_fp_sgt(32, 16, 16);
    @control relu_r1_go_next = std_wire(32);
    @data relu_r1_incr = std_add(32);
    @data relu_r1_val_mult = std_fp_smult_pipe(32, 16, 16);
    @control relu_r2_cur_val = std_wire(32);
    @data relu_r2_cur_idx = std_reg(32);
    @control relu_r2_val_gt = std_fp_sgt(32, 16, 16);
    @control relu_r2_go_next = std_wire(32);
    @data relu_r2_incr = std_add(32);
    @data relu_r2_val_mult = std_fp_smult_pipe(32, 16, 16);
    @generated cond = std_reg(1);
    @generated cond_wire = std_wire(1);
    @generated cond0 = std_reg(1);
    @generated cond_wire0 = std_wire(1);
    @generated cond1 = std_reg(1);
    @generated cond_wire1 = std_wire(1);
    @generated cond2 = std_reg(1);
    @generated cond_wire2 = std_wire(1);
    @generated cond3 = std_reg(1);
    @generated cond_wire3 = std_wire(1);
    @generated cond4 = std_reg(1);
    @generated cond_wire4 = std_wire(1);
    @generated cond5 = std_reg(1);
    @generated cond_wire5 = std_wire(1);
    @generated cond6 = std_reg(1);
    @generated cond_wire6 = std_wire(1);
    @generated cond7 = std_reg(1);
    @generated cond_wire7 = std_wire(1);
    @generated cond8 = std_reg(1);
    @generated cond_wire8 = std_wire(1);
    @generated cond9 = std_reg(1);
    @generated cond_wire9 = std_wire(1);
    @generated cond10 = std_reg(1);
    @generated cond_wire10 = std_wire(1);
    @generated cond11 = std_reg(1);
    @generated cond_wire11 = std_wire(1);
    @generated cond12 = std_reg(1);
    @generated cond_wire12 = std_wire(1);
    @generated cond13 = std_reg(1);
    @generated cond_wire13 = std_wire(1);
    @generated cond14 = std_reg(1);
    @generated cond_wire14 = std_wire(1);
    @generated cond15 = std_reg(1);
    @generated cond_wire15 = std_wire(1);
    @generated cond16 = std_reg(1);
    @generated cond_wire16 = std_wire(1);
    @generated cond17 = std_reg(1);
    @generated cond_wire17 = std_wire(1);
    @generated cond18 = std_reg(1);
    @generated cond_wire18 = std_wire(1);
    @generated cond19 = std_reg(1);
    @generated cond_wire19 = std_wire(1);
    @generated cond20 = std_reg(1);
    @generated cond_wire20 = std_wire(1);
    @generated cond21 = std_reg(1);
    @generated cond_wire21 = std_wire(1);
    @generated cond22 = std_reg(1);
    @generated cond_wire22 = std_wire(1);
    @generated cond23 = std_reg(1);
    @generated cond_wire23 = std_wire(1);
    @generated cond24 = std_reg(1);
    @generated cond_wire24 = std_wire(1);
    @generated cond25 = std_reg(1);
    @generated cond_wire25 = std_wire(1);
    @generated cond26 = std_reg(1);
    @generated cond_wire26 = std_wire(1);
    @generated cond27 = std_reg(1);
    @generated cond_wire27 = std_wire(1);
    @generated cond28 = std_reg(1);
    @generated cond_wire28 = std_wire(1);
    @generated cond29 = std_reg(1);
    @generated cond_wire29 = std_wire(1);
    @generated cond30 = std_reg(1);
    @generated cond_wire30 = std_wire(1);
    @generated cond31 = std_reg(1);
    @generated cond_wire31 = std_wire(1);
    @generated cond32 = std_reg(1);
    @generated cond_wire32 = std_wire(1);
    @generated fsm = std_reg(1);
    @generated ud = undef(1);
    @generated adder = std_add(1);
    @generated ud0 = undef(1);
    @generated adder0 = std_add(1);
    @generated signal_reg = std_reg(1);
    @generated fsm0 = std_reg(2);
    @generated early_reset_static_par_go = std_wire(1);
    @generated early_reset_static_par_done = std_wire(1);
    @generated early_reset_static_par0_go = std_wire(1);
    @generated early_reset_static_par0_done = std_wire(1);
    @generated wrapper_early_reset_static_par_go = std_wire(1);
    @generated wrapper_early_reset_static_par_done = std_wire(1);
    @generated while_wrapper_early_reset_static_par0_go = std_wire(1);
    @generated while_wrapper_early_reset_static_par0_done = std_wire(1);
    @generated tdcc_go = std_wire(1);
    @generated tdcc_done = std_wire(1);
  }
  wires {
    min_depth_4_plus_5.left = early_reset_static_par0_go.out ? min_depth_4.out;
    min_depth_4_plus_5.right = early_reset_static_par0_go.out ? 32'd5;
    l1_add.left = cond_wire11.out & early_reset_static_par0_go.out ? 2'd1;
    l1_add.right = cond_wire11.out & early_reset_static_par0_go.out ? l1_idx.out;
    cond_wire3.in = !1'b1 & early_reset_static_par0_go.out ? cond3.out;
    cond_wire3.in = early_reset_static_par0_go.out ? idx_between_1_depth_plus_1_reg.out;
    cond_wire30.in = early_reset_static_par0_go.out ? idx_between_depth_plus_5_None_reg.out;
    cond_wire30.in = !1'b1 & early_reset_static_par0_go.out ? cond30.out;
    adder.left = early_reset_static_par_go.out ? fsm.out;
    adder.right = early_reset_static_par_go.out ? 1'd1;
    top_1_0.write_en = cond_wire1.out & early_reset_static_par0_go.out ? 1'd1;
    top_1_0.clk = clk;
    top_1_0.reset = reset;
    top_1_0.in = cond_wire1.out & early_reset_static_par0_go.out ? top_0_0.out;
    pe_1_2.mul_ready = cond_wire20.out & early_reset_static_par0_go.out ? 1'd1;
    pe_1_2.mul_ready = cond_wire18.out & early_reset_static_par0_go.out ? 1'd0;
    pe_1_2.clk = clk;
    pe_1_2.top = (fsm.out == 1'd0 & cond_wire18.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire20.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_1_2.out;
    pe_1_2.left = (fsm.out == 1'd0 & cond_wire18.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire20.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_1_2.out;
    pe_1_2.go = (fsm.out == 1'd0 & cond_wire18.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire20.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_1_2.reset = reset;
    index_ge_8.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_8.right = early_reset_static_par0_go.out ? 32'd8;
    index_lt_min_depth_4_plus_2.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_min_depth_4_plus_2.right = early_reset_static_par0_go.out ? min_depth_4_plus_2.out;
    index_lt_depth_plus_9.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_9.right = early_reset_static_par0_go.out ? depth_plus_9.out;
    index_lt_min_depth_4_plus_3.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_min_depth_4_plus_3.right = early_reset_static_par0_go.out ? min_depth_4_plus_3.out;
    index_lt_depth_plus_6.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_6.right = early_reset_static_par0_go.out ? depth_plus_6.out;
    idx_between_depth_plus_5_None_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_depth_plus_5_None_reg.clk = clk;
    idx_between_depth_plus_5_None_reg.reset = reset;
    idx_between_depth_plus_5_None_reg.in = early_reset_static_par0_go.out ? 1'd1;
    idx_between_depth_plus_5_None_reg.in = early_reset_static_par_go.out ? 1'd0;
    relu_r1_cur_idx.write_en = relu_r1_go_next.out & cond_wire31.out & early_reset_static_par0_go.out ? 1'd1;
    relu_r1_cur_idx.clk = clk;
    relu_r1_cur_idx.reset = reset;
    relu_r1_cur_idx.in = relu_r1_go_next.out & cond_wire31.out & early_reset_static_par0_go.out ? relu_r1_incr.out;
    relu_r2_go_next.in = (relu_r2_val_mult.done | relu_r2_val_gt.out) & cond_wire32.out & early_reset_static_par0_go.out ? 32'd1;
    t2_addr0 = cond_wire7.out & early_reset_static_par0_go.out ? t2_idx.out;
    done = tdcc_done.out ? 1'd1;
    l0_addr0 = cond_wire.out & early_reset_static_par0_go.out ? l0_idx.out;
    out_mem_1_addr0 = cond_wire31.out & early_reset_static_par0_go.out ? relu_r1_cur_idx.out;
    out_mem_0_write_data = !relu_r0_val_gt.out & cond_wire30.out & early_reset_static_par0_go.out ? relu_r0_val_mult.out;
    out_mem_0_write_data = relu_r0_val_gt.out & cond_wire30.out & early_reset_static_par0_go.out ? relu_r0_cur_val.out;
    l1_addr0 = cond_wire11.out & early_reset_static_par0_go.out ? l1_idx.out;
    out_mem_2_write_data = !relu_r2_val_gt.out & cond_wire32.out & early_reset_static_par0_go.out ? relu_r2_val_mult.out;
    out_mem_2_write_data = relu_r2_val_gt.out & cond_wire32.out & early_reset_static_par0_go.out ? relu_r2_cur_val.out;
    out_mem_1_write_data = relu_r1_val_gt.out & cond_wire31.out & early_reset_static_par0_go.out ? relu_r1_cur_val.out;
    out_mem_1_write_data = !relu_r1_val_gt.out & cond_wire31.out & early_reset_static_par0_go.out ? relu_r1_val_mult.out;
    out_mem_1_write_en = relu_r1_go_next.out & cond_wire31.out & early_reset_static_par0_go.out ? 1'd1;
    t0_addr0 = cond_wire.out & early_reset_static_par0_go.out ? t0_idx.out;
    t1_addr0 = cond_wire3.out & early_reset_static_par0_go.out ? t1_idx.out;
    out_mem_0_write_en = relu_r0_go_next.out & cond_wire30.out & early_reset_static_par0_go.out ? 1'd1;
    out_mem_2_write_en = relu_r2_go_next.out & cond_wire32.out & early_reset_static_par0_go.out ? 1'd1;
    l2_addr0 = cond_wire21.out & early_reset_static_par0_go.out ? l2_idx.out;
    out_mem_0_addr0 = cond_wire30.out & early_reset_static_par0_go.out ? relu_r0_cur_idx.out;
    out_mem_2_addr0 = cond_wire32.out & early_reset_static_par0_go.out ? relu_r2_cur_idx.out;
    cond_wire0.in = early_reset_static_par0_go.out ? idx_between_1_min_depth_4_plus_1_reg.out;
    cond_wire0.in = !1'b1 & early_reset_static_par0_go.out ? cond0.out;
    cond_wire4.in = !1'b1 & early_reset_static_par0_go.out ? cond4.out;
    cond_wire4.in = early_reset_static_par0_go.out ? idx_between_2_min_depth_4_plus_2_reg.out;
    cond6.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond6.clk = clk;
    cond6.reset = reset;
    cond6.in = early_reset_static_par0_go.out ? idx_between_6_depth_plus_6_reg.out;
    cond_wire13.in = !1'b1 & early_reset_static_par0_go.out ? cond13.out;
    cond_wire13.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    cond_wire16.in = !1'b1 & early_reset_static_par0_go.out ? cond16.out;
    cond_wire16.in = early_reset_static_par0_go.out ? idx_between_3_depth_plus_3_reg.out;
    cond30.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond30.clk = clk;
    cond30.reset = reset;
    cond30.in = early_reset_static_par0_go.out ? idx_between_depth_plus_5_None_reg.out;
    cond_wire32.in = early_reset_static_par0_go.out ? idx_between_depth_plus_7_None_reg.out;
    cond_wire32.in = !1'b1 & early_reset_static_par0_go.out ? cond32.out;
    fsm.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    fsm.clk = clk;
    fsm.reset = reset;
    fsm.in = fsm.out != 1'd0 & early_reset_static_par_go.out ? adder.out;
    fsm.in = fsm.out == 1'd0 & early_reset_static_par_go.out | fsm.out == 1'd0 & early_reset_static_par0_go.out ? 1'd0;
    fsm.in = fsm.out != 1'd0 & early_reset_static_par0_go.out ? adder0.out;
    early_reset_static_par0_go.in = while_wrapper_early_reset_static_par0_go.out ? 1'd1;
    depth_plus_4.left = early_reset_static_par0_go.out ? depth;
    depth_plus_4.left = early_reset_static_par_go.out ? 32'd10;
    depth_plus_4.right = early_reset_static_par_go.out ? depth;
    depth_plus_4.right = early_reset_static_par0_go.out ? 32'd4;
    l0_idx.write_en = early_reset_static_par_go.out | cond_wire.out & early_reset_static_par0_go.out ? 1'd1;
    l0_idx.clk = clk;
    l0_idx.reset = reset;
    l0_idx.in = early_reset_static_par_go.out ? 2'd0;
    l0_idx.in = cond_wire.out & early_reset_static_par0_go.out ? l0_add.out;
    idx_between_1_min_depth_4_plus_1_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_1_min_depth_4_plus_1_reg.clk = clk;
    idx_between_1_min_depth_4_plus_1_reg.reset = reset;
    idx_between_1_min_depth_4_plus_1_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_1_min_depth_4_plus_1_reg.in = early_reset_static_par0_go.out ? idx_between_1_min_depth_4_plus_1_comb.out;
    idx_between_3_min_depth_4_plus_3_comb.left = early_reset_static_par0_go.out ? index_ge_3.out;
    idx_between_3_min_depth_4_plus_3_comb.right = early_reset_static_par0_go.out ? index_lt_min_depth_4_plus_3.out;
    relu_r2_val_gt.left = cond_wire32.out & early_reset_static_par0_go.out ? relu_r2_cur_val.out;
    relu_r2_val_gt.right = cond_wire32.out & early_reset_static_par0_go.out ? 32'd0;
    cond11.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond11.clk = clk;
    cond11.reset = reset;
    cond11.in = early_reset_static_par0_go.out ? idx_between_1_depth_plus_1_reg.out;
    cond15.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond15.clk = clk;
    cond15.reset = reset;
    cond15.in = early_reset_static_par0_go.out ? idx_between_3_min_depth_4_plus_3_reg.out;
    cond_wire27.in = !1'b1 & early_reset_static_par0_go.out ? cond27.out;
    cond_wire27.in = early_reset_static_par0_go.out ? idx_between_8_depth_plus_8_reg.out;
    pe_0_1.mul_ready = cond_wire6.out & early_reset_static_par0_go.out ? 1'd1;
    pe_0_1.mul_ready = cond_wire4.out & early_reset_static_par0_go.out ? 1'd0;
    pe_0_1.clk = clk;
    pe_0_1.top = (fsm.out == 1'd0 & cond_wire4.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire6.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_0_1.out;
    pe_0_1.left = (fsm.out == 1'd0 & cond_wire4.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire6.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_0_1.out;
    pe_0_1.go = (fsm.out == 1'd0 & cond_wire4.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire6.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_0_1.reset = reset;
    left_1_2.write_en = cond_wire16.out & early_reset_static_par0_go.out ? 1'd1;
    left_1_2.clk = clk;
    left_1_2.reset = reset;
    left_1_2.in = cond_wire16.out & early_reset_static_par0_go.out ? left_1_1.out;
    left_2_2.write_en = cond_wire26.out & early_reset_static_par0_go.out ? 1'd1;
    left_2_2.clk = clk;
    left_2_2.reset = reset;
    left_2_2.in = cond_wire26.out & early_reset_static_par0_go.out ? left_2_1.out;
    index_lt_depth_plus_4.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_4.right = early_reset_static_par0_go.out ? depth_plus_4.out;
    idx_between_5_depth_plus_5_comb.left = early_reset_static_par0_go.out ? index_ge_5.out;
    idx_between_5_depth_plus_5_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_5.out;
    index_ge_3.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_3.right = early_reset_static_par0_go.out ? 32'd3;
    relu_r2_val_mult.clk = clk;
    relu_r2_val_mult.left = cond_wire32.out & early_reset_static_par0_go.out ? 32'd655;
    relu_r2_val_mult.go = !relu_r2_go_next.out & cond_wire32.out & early_reset_static_par0_go.out ? 1'd1;
    relu_r2_val_mult.reset = reset;
    relu_r2_val_mult.right = cond_wire32.out & early_reset_static_par0_go.out ? relu_r2_cur_val.out;
    cond.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond.clk = clk;
    cond.reset = reset;
    cond.in = early_reset_static_par0_go.out ? idx_between_0_depth_plus_0_reg.out;
    cond_wire26.in = early_reset_static_par0_go.out ? idx_between_4_depth_plus_4_reg.out;
    cond_wire26.in = !1'b1 & early_reset_static_par0_go.out ? cond26.out;
    depth_plus_5.left = early_reset_static_par0_go.out ? depth;
    depth_plus_5.right = early_reset_static_par0_go.out ? 32'd5;
    pe_1_0.mul_ready = cond_wire14.out & early_reset_static_par0_go.out ? 1'd1;
    pe_1_0.mul_ready = cond_wire12.out & early_reset_static_par0_go.out ? 1'd0;
    pe_1_0.clk = clk;
    pe_1_0.top = (fsm.out == 1'd0 & cond_wire12.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire14.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_1_0.out;
    pe_1_0.left = (fsm.out == 1'd0 & cond_wire12.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire14.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_1_0.out;
    pe_1_0.go = (fsm.out == 1'd0 & cond_wire12.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire14.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_1_0.reset = reset;
    left_1_0.write_en = cond_wire11.out & early_reset_static_par0_go.out ? 1'd1;
    left_1_0.clk = clk;
    left_1_0.reset = reset;
    left_1_0.in = cond_wire11.out & early_reset_static_par0_go.out ? l1_read_data;
    left_1_1.write_en = cond_wire13.out & early_reset_static_par0_go.out ? 1'd1;
    left_1_1.clk = clk;
    left_1_1.reset = reset;
    left_1_1.in = cond_wire13.out & early_reset_static_par0_go.out ? left_1_0.out;
    top_1_2.write_en = cond_wire9.out & early_reset_static_par0_go.out ? 1'd1;
    top_1_2.clk = clk;
    top_1_2.reset = reset;
    top_1_2.in = cond_wire9.out & early_reset_static_par0_go.out ? top_0_2.out;
    left_2_0.write_en = cond_wire21.out & early_reset_static_par0_go.out ? 1'd1;
    left_2_0.clk = clk;
    left_2_0.reset = reset;
    left_2_0.in = cond_wire21.out & early_reset_static_par0_go.out ? l2_read_data;
    t1_idx.write_en = early_reset_static_par_go.out | cond_wire3.out & early_reset_static_par0_go.out ? 1'd1;
    t1_idx.clk = clk;
    t1_idx.reset = reset;
    t1_idx.in = early_reset_static_par_go.out ? 2'd0;
    t1_idx.in = cond_wire3.out & early_reset_static_par0_go.out ? t1_add.out;
    relu_r0_cur_idx.write_en = relu_r0_go_next.out & cond_wire30.out & early_reset_static_par0_go.out ? 1'd1;
    relu_r0_cur_idx.clk = clk;
    relu_r0_cur_idx.reset = reset;
    relu_r0_cur_idx.in = relu_r0_go_next.out & cond_wire30.out & early_reset_static_par0_go.out ? relu_r0_incr.out;
    cond18.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond18.clk = clk;
    cond18.reset = reset;
    cond18.in = early_reset_static_par0_go.out ? idx_between_4_min_depth_4_plus_4_reg.out;
    cond_wire24.in = early_reset_static_par0_go.out ? idx_between_7_depth_plus_7_reg.out;
    cond_wire24.in = !1'b1 & early_reset_static_par0_go.out ? cond24.out;
    cond_wire31.in = early_reset_static_par0_go.out ? idx_between_depth_plus_6_None_reg.out;
    cond_wire31.in = !1'b1 & early_reset_static_par0_go.out ? cond31.out;
    min_depth_4_plus_2.left = early_reset_static_par0_go.out ? min_depth_4.out;
    min_depth_4_plus_2.right = early_reset_static_par0_go.out ? 32'd2;
    depth_plus_1.left = early_reset_static_par0_go.out ? depth;
    depth_plus_1.right = early_reset_static_par0_go.out ? 32'd1;
    left_0_0.write_en = cond_wire.out & early_reset_static_par0_go.out ? 1'd1;
    left_0_0.clk = clk;
    left_0_0.reset = reset;
    left_0_0.in = cond_wire.out & early_reset_static_par0_go.out ? l0_read_data;
    index_lt_depth_plus_8.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_8.right = early_reset_static_par0_go.out ? depth_plus_8.out;
    idx_between_depth_plus_7_None_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_depth_plus_7_None_reg.clk = clk;
    idx_between_depth_plus_7_None_reg.reset = reset;
    idx_between_depth_plus_7_None_reg.in = early_reset_static_par0_go.out ? 1'd1;
    idx_between_depth_plus_7_None_reg.in = early_reset_static_par_go.out ? 1'd0;
    cond_wire18.in = !1'b1 & early_reset_static_par0_go.out ? cond18.out;
    cond_wire18.in = early_reset_static_par0_go.out ? idx_between_4_min_depth_4_plus_4_reg.out;
    cond19.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond19.clk = clk;
    cond19.reset = reset;
    cond19.in = early_reset_static_par0_go.out ? idx_between_4_depth_plus_4_reg.out;
    cond_wire29.in = !1'b1 & early_reset_static_par0_go.out ? cond29.out;
    cond_wire29.in = early_reset_static_par0_go.out ? idx_between_9_depth_plus_9_reg.out;
    wrapper_early_reset_static_par_go.in = !wrapper_early_reset_static_par_done.out & fsm0.out == 2'd0 & tdcc_go.out ? 1'd1;
    depth_plus_7.left = early_reset_static_par0_go.out ? depth;
    depth_plus_7.right = early_reset_static_par0_go.out ? 32'd7;
    pe_0_2.mul_ready = cond_wire10.out & early_reset_static_par0_go.out ? 1'd1;
    pe_0_2.mul_ready = cond_wire8.out & early_reset_static_par0_go.out ? 1'd0;
    pe_0_2.clk = clk;
    pe_0_2.top = (fsm.out == 1'd0 & cond_wire8.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire10.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_0_2.out;
    pe_0_2.left = (fsm.out == 1'd0 & cond_wire8.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire10.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_0_2.out;
    pe_0_2.go = (fsm.out == 1'd0 & cond_wire8.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire10.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_0_2.reset = reset;
    t0_idx.write_en = early_reset_static_par_go.out | cond_wire.out & early_reset_static_par0_go.out ? 1'd1;
    t0_idx.clk = clk;
    t0_idx.reset = reset;
    t0_idx.in = early_reset_static_par_go.out ? 2'd0;
    t0_idx.in = cond_wire.out & early_reset_static_par0_go.out ? t0_add.out;
    l1_idx.write_en = early_reset_static_par_go.out | cond_wire11.out & early_reset_static_par0_go.out ? 1'd1;
    l1_idx.clk = clk;
    l1_idx.reset = reset;
    l1_idx.in = cond_wire11.out & early_reset_static_par0_go.out ? l1_add.out;
    l1_idx.in = early_reset_static_par_go.out ? 2'd0;
    idx_add.left = early_reset_static_par0_go.out ? idx.out;
    idx_add.right = early_reset_static_par0_go.out ? 32'd1;
    idx_between_2_min_depth_4_plus_2_comb.left = early_reset_static_par0_go.out ? index_ge_2.out;
    idx_between_2_min_depth_4_plus_2_comb.right = early_reset_static_par0_go.out ? index_lt_min_depth_4_plus_2.out;
    index_ge_7.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_7.right = early_reset_static_par0_go.out ? 32'd7;
    cond3.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond3.clk = clk;
    cond3.reset = reset;
    cond3.in = early_reset_static_par0_go.out ? idx_between_1_depth_plus_1_reg.out;
    cond13.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond13.clk = clk;
    cond13.reset = reset;
    cond13.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    cond29.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond29.clk = clk;
    cond29.reset = reset;
    cond29.in = early_reset_static_par0_go.out ? idx_between_9_depth_plus_9_reg.out;
    wrapper_early_reset_static_par_done.in = fsm.out == 1'd0 & signal_reg.out ? 1'd1;
    early_reset_static_par0_done.in = ud0.out;
    tdcc_go.in = go;
    pe_2_1.mul_ready = cond_wire27.out & early_reset_static_par0_go.out ? 1'd1;
    pe_2_1.mul_ready = cond_wire25.out & early_reset_static_par0_go.out ? 1'd0;
    pe_2_1.clk = clk;
    pe_2_1.top = (fsm.out == 1'd0 & cond_wire25.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire27.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_2_1.out;
    pe_2_1.left = (fsm.out == 1'd0 & cond_wire25.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire27.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_2_1.out;
    pe_2_1.go = (fsm.out == 1'd0 & cond_wire25.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire27.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_2_1.reset = reset;
    lt_iter_limit.left = early_reset_static_par_go.out ? depth;
    lt_iter_limit.left = early_reset_static_par0_go.out ? idx_add.out;
    lt_iter_limit.right = early_reset_static_par_go.out ? 32'd4;
    lt_iter_limit.right = early_reset_static_par0_go.out ? iter_limit.out;
    idx_between_7_depth_plus_7_comb.left = early_reset_static_par0_go.out ? index_ge_7.out;
    idx_between_7_depth_plus_7_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_7.out;
    idx_between_depth_plus_6_None_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_depth_plus_6_None_reg.clk = clk;
    idx_between_depth_plus_6_None_reg.reset = reset;
    idx_between_depth_plus_6_None_reg.in = early_reset_static_par0_go.out ? 1'd1;
    idx_between_depth_plus_6_None_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_6_depth_plus_6_comb.left = early_reset_static_par0_go.out ? index_ge_6.out;
    idx_between_6_depth_plus_6_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_6.out;
    relu_r1_cur_val.in = relu_r1_cur_idx.out == 32'd2 & cond_wire31.out & early_reset_static_par0_go.out ? pe_1_2.out;
    relu_r1_cur_val.in = relu_r1_cur_idx.out == 32'd0 & cond_wire31.out & early_reset_static_par0_go.out ? pe_1_0.out;
    relu_r1_cur_val.in = relu_r1_cur_idx.out == 32'd1 & cond_wire31.out & early_reset_static_par0_go.out ? pe_1_1.out;
    relu_r1_go_next.in = (relu_r1_val_mult.done | relu_r1_val_gt.out) & cond_wire31.out & early_reset_static_par0_go.out ? 32'd1;
    relu_r1_incr.left = cond_wire31.out & early_reset_static_par0_go.out ? relu_r1_cur_idx.out;
    relu_r1_incr.right = cond_wire31.out & early_reset_static_par0_go.out ? 32'd1;
    cond17.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond17.clk = clk;
    cond17.reset = reset;
    cond17.in = early_reset_static_par0_go.out ? idx_between_7_depth_plus_7_reg.out;
    cond_wire22.in = early_reset_static_par0_go.out ? idx_between_3_min_depth_4_plus_3_reg.out;
    cond_wire22.in = !1'b1 & early_reset_static_par0_go.out ? cond22.out;
    cond23.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond23.clk = clk;
    cond23.reset = reset;
    cond23.in = early_reset_static_par0_go.out ? idx_between_3_depth_plus_3_reg.out;
    cond25.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond25.clk = clk;
    cond25.reset = reset;
    cond25.in = early_reset_static_par0_go.out ? idx_between_4_min_depth_4_plus_4_reg.out;
    fsm0.write_en = fsm0.out == 2'd2 | fsm0.out == 2'd0 & wrapper_early_reset_static_par_done.out & tdcc_go.out | fsm0.out == 2'd1 & while_wrapper_early_reset_static_par0_done.out & tdcc_go.out ? 1'd1;
    fsm0.clk = clk;
    fsm0.reset = reset;
    fsm0.in = fsm0.out == 2'd0 & wrapper_early_reset_static_par_done.out & tdcc_go.out ? 2'd1;
    fsm0.in = fsm0.out == 2'd2 ? 2'd0;
    fsm0.in = fsm0.out == 2'd1 & while_wrapper_early_reset_static_par0_done.out & tdcc_go.out ? 2'd2;
    min_depth_4_plus_4.left = early_reset_static_par0_go.out ? min_depth_4.out;
    min_depth_4_plus_4.right = early_reset_static_par0_go.out ? 32'd4;
    depth_plus_8.left = early_reset_static_par0_go.out ? depth;
    depth_plus_8.right = early_reset_static_par0_go.out ? 32'd8;
    depth_plus_0.left = early_reset_static_par0_go.out ? depth;
    depth_plus_0.right = early_reset_static_par0_go.out ? 32'd0;
    top_2_0.write_en = cond_wire13.out & early_reset_static_par0_go.out ? 1'd1;
    top_2_0.clk = clk;
    top_2_0.reset = reset;
    top_2_0.in = cond_wire13.out & early_reset_static_par0_go.out ? top_1_0.out;
    idx.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx.clk = clk;
    idx.reset = reset;
    idx.in = early_reset_static_par_go.out ? 32'd0;
    idx.in = early_reset_static_par0_go.out ? idx_add.out;
    idx_between_4_depth_plus_4_comb.left = early_reset_static_par0_go.out ? index_ge_4.out;
    idx_between_4_depth_plus_4_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_4.out;
    index_lt_min_depth_4_plus_5.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_min_depth_4_plus_5.right = early_reset_static_par0_go.out ? min_depth_4_plus_5.out;
    idx_between_7_depth_plus_7_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_7_depth_plus_7_reg.clk = clk;
    idx_between_7_depth_plus_7_reg.reset = reset;
    idx_between_7_depth_plus_7_reg.in = early_reset_static_par0_go.out ? idx_between_7_depth_plus_7_comb.out;
    idx_between_7_depth_plus_7_reg.in = early_reset_static_par_go.out ? 1'd0;
    index_lt_depth_plus_0.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_0.right = early_reset_static_par0_go.out ? depth_plus_0.out;
    idx_between_9_depth_plus_9_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_9_depth_plus_9_reg.clk = clk;
    idx_between_9_depth_plus_9_reg.reset = reset;
    idx_between_9_depth_plus_9_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_9_depth_plus_9_reg.in = early_reset_static_par0_go.out ? idx_between_9_depth_plus_9_comb.out;
    idx_between_1_depth_plus_1_comb.left = early_reset_static_par0_go.out ? index_ge_1.out;
    idx_between_1_depth_plus_1_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_1.out;
    index_lt_depth_plus_3.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_3.right = early_reset_static_par0_go.out ? depth_plus_3.out;
    relu_r0_incr.left = cond_wire30.out & early_reset_static_par0_go.out ? relu_r0_cur_idx.out;
    relu_r0_incr.right = cond_wire30.out & early_reset_static_par0_go.out ? 32'd1;
    relu_r0_val_mult.clk = clk;
    relu_r0_val_mult.left = cond_wire30.out & early_reset_static_par0_go.out ? 32'd655;
    relu_r0_val_mult.go = !relu_r0_go_next.out & cond_wire30.out & early_reset_static_par0_go.out ? 1'd1;
    relu_r0_val_mult.reset = reset;
    relu_r0_val_mult.right = cond_wire30.out & early_reset_static_par0_go.out ? relu_r0_cur_val.out;
    cond7.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond7.clk = clk;
    cond7.reset = reset;
    cond7.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    cond_wire8.in = early_reset_static_par0_go.out ? idx_between_3_min_depth_4_plus_3_reg.out;
    cond_wire8.in = !1'b1 & early_reset_static_par0_go.out ? cond8.out;
    cond9.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond9.clk = clk;
    cond9.reset = reset;
    cond9.in = early_reset_static_par0_go.out ? idx_between_3_depth_plus_3_reg.out;
    cond14.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond14.clk = clk;
    cond14.reset = reset;
    cond14.in = early_reset_static_par0_go.out ? idx_between_6_depth_plus_6_reg.out;
    cond_wire20.in = !1'b1 & early_reset_static_par0_go.out ? cond20.out;
    cond_wire20.in = early_reset_static_par0_go.out ? idx_between_8_depth_plus_8_reg.out;
    cond27.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond27.clk = clk;
    cond27.reset = reset;
    cond27.in = early_reset_static_par0_go.out ? idx_between_8_depth_plus_8_reg.out;
    cond32.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond32.clk = clk;
    cond32.reset = reset;
    cond32.in = early_reset_static_par0_go.out ? idx_between_depth_plus_7_None_reg.out;
    min_depth_4.write_en = early_reset_static_par_go.out ? 1'd1;
    min_depth_4.clk = clk;
    min_depth_4.reset = reset;
    min_depth_4.in = lt_iter_limit.out & early_reset_static_par_go.out ? depth;
    min_depth_4.in = !lt_iter_limit.out & early_reset_static_par_go.out ? 32'd4;
    top_0_1.write_en = cond_wire3.out & early_reset_static_par0_go.out ? 1'd1;
    top_0_1.clk = clk;
    top_0_1.reset = reset;
    top_0_1.in = cond_wire3.out & early_reset_static_par0_go.out ? t1_read_data;
    left_0_2.write_en = cond_wire5.out & early_reset_static_par0_go.out ? 1'd1;
    left_0_2.clk = clk;
    left_0_2.reset = reset;
    left_0_2.in = cond_wire5.out & early_reset_static_par0_go.out ? left_0_1.out;
    index_ge_4.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_4.right = early_reset_static_par0_go.out ? 32'd4;
    idx_between_5_min_depth_4_plus_5_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_5_min_depth_4_plus_5_reg.clk = clk;
    idx_between_5_min_depth_4_plus_5_reg.reset = reset;
    idx_between_5_min_depth_4_plus_5_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_5_min_depth_4_plus_5_reg.in = early_reset_static_par0_go.out ? idx_between_5_min_depth_4_plus_5_comb.out;
    index_ge_1.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_1.right = early_reset_static_par0_go.out ? 32'd1;
    idx_between_3_min_depth_4_plus_3_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_3_min_depth_4_plus_3_reg.clk = clk;
    idx_between_3_min_depth_4_plus_3_reg.reset = reset;
    idx_between_3_min_depth_4_plus_3_reg.in = early_reset_static_par0_go.out ? idx_between_3_min_depth_4_plus_3_comb.out;
    idx_between_3_min_depth_4_plus_3_reg.in = early_reset_static_par_go.out ? 1'd0;
    cond4.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond4.clk = clk;
    cond4.reset = reset;
    cond4.in = early_reset_static_par0_go.out ? idx_between_2_min_depth_4_plus_2_reg.out;
    cond5.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond5.clk = clk;
    cond5.reset = reset;
    cond5.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    cond_wire6.in = !1'b1 & early_reset_static_par0_go.out ? cond6.out;
    cond_wire6.in = early_reset_static_par0_go.out ? idx_between_6_depth_plus_6_reg.out;
    cond20.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond20.clk = clk;
    cond20.reset = reset;
    cond20.in = early_reset_static_par0_go.out ? idx_between_8_depth_plus_8_reg.out;
    adder0.left = early_reset_static_par0_go.out ? fsm.out;
    adder0.right = early_reset_static_par0_go.out ? 1'd1;
    early_reset_static_par_done.in = ud.out;
    depth_plus_3.left = early_reset_static_par0_go.out ? depth;
    depth_plus_3.right = early_reset_static_par0_go.out ? 32'd3;
    top_0_2.write_en = cond_wire7.out & early_reset_static_par0_go.out ? 1'd1;
    top_0_2.clk = clk;
    top_0_2.reset = reset;
    top_0_2.in = cond_wire7.out & early_reset_static_par0_go.out ? t2_read_data;
    top_1_1.write_en = cond_wire5.out & early_reset_static_par0_go.out ? 1'd1;
    top_1_1.clk = clk;
    top_1_1.reset = reset;
    top_1_1.in = cond_wire5.out & early_reset_static_par0_go.out ? top_0_1.out;
    t0_add.left = cond_wire.out & early_reset_static_par0_go.out ? 2'd1;
    t0_add.right = cond_wire.out & early_reset_static_par0_go.out ? t0_idx.out;
    l0_add.left = cond_wire.out & early_reset_static_par0_go.out ? 2'd1;
    l0_add.right = cond_wire.out & early_reset_static_par0_go.out ? l0_idx.out;
    index_ge_9.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_9.right = early_reset_static_par0_go.out ? 32'd9;
    idx_between_1_min_depth_4_plus_1_comb.left = early_reset_static_par0_go.out ? index_ge_1.out;
    idx_between_1_min_depth_4_plus_1_comb.right = early_reset_static_par0_go.out ? index_lt_min_depth_4_plus_1.out;
    relu_r0_go_next.in = (relu_r0_val_mult.done | relu_r0_val_gt.out) & cond_wire30.out & early_reset_static_par0_go.out ? 32'd1;
    cond_wire2.in = !1'b1 & early_reset_static_par0_go.out ? cond2.out;
    cond_wire2.in = early_reset_static_par0_go.out ? idx_between_5_depth_plus_5_reg.out;
    cond_wire9.in = !1'b1 & early_reset_static_par0_go.out ? cond9.out;
    cond_wire9.in = early_reset_static_par0_go.out ? idx_between_3_depth_plus_3_reg.out;
    cond10.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond10.clk = clk;
    cond10.reset = reset;
    cond10.in = early_reset_static_par0_go.out ? idx_between_7_depth_plus_7_reg.out;
    cond_wire11.in = !1'b1 & early_reset_static_par0_go.out ? cond11.out;
    cond_wire11.in = early_reset_static_par0_go.out ? idx_between_1_depth_plus_1_reg.out;
    cond21.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond21.clk = clk;
    cond21.reset = reset;
    cond21.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    cond24.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond24.clk = clk;
    cond24.reset = reset;
    cond24.in = early_reset_static_par0_go.out ? idx_between_7_depth_plus_7_reg.out;
    cond31.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond31.clk = clk;
    cond31.reset = reset;
    cond31.in = early_reset_static_par0_go.out ? idx_between_depth_plus_6_None_reg.out;
    signal_reg.write_en = fsm.out == 1'd0 & signal_reg.out | fsm.out == 1'd0 & !signal_reg.out & wrapper_early_reset_static_par_go.out ? 1'd1;
    signal_reg.clk = clk;
    signal_reg.reset = reset;
    signal_reg.in = fsm.out == 1'd0 & !signal_reg.out & wrapper_early_reset_static_par_go.out ? 1'd1;
    signal_reg.in = fsm.out == 1'd0 & signal_reg.out ? 1'd0;
    depth_plus_9.left = early_reset_static_par0_go.out ? depth;
    depth_plus_9.right = early_reset_static_par0_go.out ? 32'd9;
    depth_plus_6.left = early_reset_static_par0_go.out ? depth;
    depth_plus_6.right = early_reset_static_par0_go.out ? 32'd6;
    pe_2_0.mul_ready = cond_wire24.out & early_reset_static_par0_go.out ? 1'd1;
    pe_2_0.mul_ready = cond_wire22.out & early_reset_static_par0_go.out ? 1'd0;
    pe_2_0.clk = clk;
    pe_2_0.top = (fsm.out == 1'd0 & cond_wire22.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire24.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_2_0.out;
    pe_2_0.left = (fsm.out == 1'd0 & cond_wire22.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire24.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_2_0.out;
    pe_2_0.go = (fsm.out == 1'd0 & cond_wire22.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire24.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_2_0.reset = reset;
    left_2_1.write_en = cond_wire23.out & early_reset_static_par0_go.out ? 1'd1;
    left_2_1.clk = clk;
    left_2_1.reset = reset;
    left_2_1.in = cond_wire23.out & early_reset_static_par0_go.out ? left_2_0.out;
    top_2_2.write_en = cond_wire19.out & early_reset_static_par0_go.out ? 1'd1;
    top_2_2.clk = clk;
    top_2_2.reset = reset;
    top_2_2.in = cond_wire19.out & early_reset_static_par0_go.out ? top_1_2.out;
    t1_add.left = cond_wire3.out & early_reset_static_par0_go.out ? 2'd1;
    t1_add.right = cond_wire3.out & early_reset_static_par0_go.out ? t1_idx.out;
    idx_between_4_min_depth_4_plus_4_comb.left = early_reset_static_par0_go.out ? index_ge_4.out;
    idx_between_4_min_depth_4_plus_4_comb.right = early_reset_static_par0_go.out ? index_lt_min_depth_4_plus_4.out;
    idx_between_5_min_depth_4_plus_5_comb.left = early_reset_static_par0_go.out ? index_ge_5.out;
    idx_between_5_min_depth_4_plus_5_comb.right = early_reset_static_par0_go.out ? index_lt_min_depth_4_plus_5.out;
    index_ge_2.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_2.right = early_reset_static_par0_go.out ? 32'd2;
    index_lt_depth_plus_7.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_7.right = early_reset_static_par0_go.out ? depth_plus_7.out;
    idx_between_0_depth_plus_0_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_0_depth_plus_0_reg.clk = clk;
    idx_between_0_depth_plus_0_reg.reset = reset;
    idx_between_0_depth_plus_0_reg.in = early_reset_static_par_go.out ? 1'd1;
    idx_between_0_depth_plus_0_reg.in = early_reset_static_par0_go.out ? index_lt_depth_plus_0.out;
    idx_between_6_depth_plus_6_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_6_depth_plus_6_reg.clk = clk;
    idx_between_6_depth_plus_6_reg.reset = reset;
    idx_between_6_depth_plus_6_reg.in = early_reset_static_par0_go.out ? idx_between_6_depth_plus_6_comb.out;
    idx_between_6_depth_plus_6_reg.in = early_reset_static_par_go.out ? 1'd0;
    cond_wire.in = !1'b1 & early_reset_static_par0_go.out ? cond.out;
    cond_wire.in = early_reset_static_par0_go.out ? idx_between_0_depth_plus_0_reg.out;
    cond_wire15.in = !1'b1 & early_reset_static_par0_go.out ? cond15.out;
    cond_wire15.in = early_reset_static_par0_go.out ? idx_between_3_min_depth_4_plus_3_reg.out;
    cond16.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond16.clk = clk;
    cond16.reset = reset;
    cond16.in = early_reset_static_par0_go.out ? idx_between_3_depth_plus_3_reg.out;
    depth_plus_2.left = early_reset_static_par0_go.out ? depth;
    depth_plus_2.right = early_reset_static_par0_go.out ? 32'd2;
    pe_0_0.mul_ready = cond_wire2.out & early_reset_static_par0_go.out ? 1'd1;
    pe_0_0.mul_ready = cond_wire0.out & early_reset_static_par0_go.out ? 1'd0;
    pe_0_0.clk = clk;
    pe_0_0.top = (fsm.out == 1'd0 & cond_wire0.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire2.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_0_0.out;
    pe_0_0.left = (fsm.out == 1'd0 & cond_wire0.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire2.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_0_0.out;
    pe_0_0.go = (fsm.out == 1'd0 & cond_wire0.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire2.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_0_0.reset = reset;
    t2_add.left = cond_wire7.out & early_reset_static_par0_go.out ? 2'd1;
    t2_add.right = cond_wire7.out & early_reset_static_par0_go.out ? t2_idx.out;
    idx_between_4_depth_plus_4_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_4_depth_plus_4_reg.clk = clk;
    idx_between_4_depth_plus_4_reg.reset = reset;
    idx_between_4_depth_plus_4_reg.in = early_reset_static_par0_go.out ? idx_between_4_depth_plus_4_comb.out;
    idx_between_4_depth_plus_4_reg.in = early_reset_static_par_go.out ? 1'd0;
    index_lt_min_depth_4_plus_4.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_min_depth_4_plus_4.right = early_reset_static_par0_go.out ? min_depth_4_plus_4.out;
    idx_between_8_depth_plus_8_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_8_depth_plus_8_reg.clk = clk;
    idx_between_8_depth_plus_8_reg.reset = reset;
    idx_between_8_depth_plus_8_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_8_depth_plus_8_reg.in = early_reset_static_par0_go.out ? idx_between_8_depth_plus_8_comb.out;
    index_ge_5.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_5.right = early_reset_static_par0_go.out ? 32'd5;
    idx_between_2_min_depth_4_plus_2_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_2_min_depth_4_plus_2_reg.clk = clk;
    idx_between_2_min_depth_4_plus_2_reg.reset = reset;
    idx_between_2_min_depth_4_plus_2_reg.in = early_reset_static_par0_go.out ? idx_between_2_min_depth_4_plus_2_comb.out;
    idx_between_2_min_depth_4_plus_2_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_3_depth_plus_3_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_3_depth_plus_3_reg.clk = clk;
    idx_between_3_depth_plus_3_reg.reset = reset;
    idx_between_3_depth_plus_3_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_3_depth_plus_3_reg.in = early_reset_static_par0_go.out ? idx_between_3_depth_plus_3_comb.out;
    idx_between_2_depth_plus_2_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_2_depth_plus_2_reg.clk = clk;
    idx_between_2_depth_plus_2_reg.reset = reset;
    idx_between_2_depth_plus_2_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_2_depth_plus_2_reg.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_comb.out;
    idx_between_2_depth_plus_2_comb.left = early_reset_static_par0_go.out ? index_ge_2.out;
    idx_between_2_depth_plus_2_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_2.out;
    relu_r1_val_mult.clk = clk;
    relu_r1_val_mult.left = cond_wire31.out & early_reset_static_par0_go.out ? 32'd655;
    relu_r1_val_mult.go = !relu_r1_go_next.out & cond_wire31.out & early_reset_static_par0_go.out ? 1'd1;
    relu_r1_val_mult.reset = reset;
    relu_r1_val_mult.right = cond_wire31.out & early_reset_static_par0_go.out ? relu_r1_cur_val.out;
    cond0.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond0.clk = clk;
    cond0.reset = reset;
    cond0.in = early_reset_static_par0_go.out ? idx_between_1_min_depth_4_plus_1_reg.out;
    cond_wire7.in = !1'b1 & early_reset_static_par0_go.out ? cond7.out;
    cond_wire7.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    cond_wire10.in = early_reset_static_par0_go.out ? idx_between_7_depth_plus_7_reg.out;
    cond_wire10.in = !1'b1 & early_reset_static_par0_go.out ? cond10.out;
    cond_wire12.in = early_reset_static_par0_go.out ? idx_between_2_min_depth_4_plus_2_reg.out;
    cond_wire12.in = !1'b1 & early_reset_static_par0_go.out ? cond12.out;
    cond_wire17.in = !1'b1 & early_reset_static_par0_go.out ? cond17.out;
    cond_wire17.in = early_reset_static_par0_go.out ? idx_between_7_depth_plus_7_reg.out;
    cond_wire19.in = !1'b1 & early_reset_static_par0_go.out ? cond19.out;
    cond_wire19.in = early_reset_static_par0_go.out ? idx_between_4_depth_plus_4_reg.out;
    cond_wire23.in = !1'b1 & early_reset_static_par0_go.out ? cond23.out;
    cond_wire23.in = early_reset_static_par0_go.out ? idx_between_3_depth_plus_3_reg.out;
    cond_wire25.in = !1'b1 & early_reset_static_par0_go.out ? cond25.out;
    cond_wire25.in = early_reset_static_par0_go.out ? idx_between_4_min_depth_4_plus_4_reg.out;
    tdcc_done.in = fsm0.out == 2'd2 ? 1'd1;
    top_2_1.write_en = cond_wire16.out & early_reset_static_par0_go.out ? 1'd1;
    top_2_1.clk = clk;
    top_2_1.reset = reset;
    top_2_1.in = cond_wire16.out & early_reset_static_par0_go.out ? top_1_1.out;
    t2_idx.write_en = early_reset_static_par_go.out | cond_wire7.out & early_reset_static_par0_go.out ? 1'd1;
    t2_idx.clk = clk;
    t2_idx.reset = reset;
    t2_idx.in = early_reset_static_par_go.out ? 2'd0;
    t2_idx.in = cond_wire7.out & early_reset_static_par0_go.out ? t2_add.out;
    l2_idx.write_en = early_reset_static_par_go.out | cond_wire21.out & early_reset_static_par0_go.out ? 1'd1;
    l2_idx.clk = clk;
    l2_idx.reset = reset;
    l2_idx.in = early_reset_static_par_go.out ? 2'd0;
    l2_idx.in = cond_wire21.out & early_reset_static_par0_go.out ? l2_add.out;
    index_lt_depth_plus_5.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_5.right = early_reset_static_par0_go.out ? depth_plus_5.out;
    idx_between_1_depth_plus_1_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_1_depth_plus_1_reg.clk = clk;
    idx_between_1_depth_plus_1_reg.reset = reset;
    idx_between_1_depth_plus_1_reg.in = early_reset_static_par0_go.out ? idx_between_1_depth_plus_1_comb.out;
    idx_between_1_depth_plus_1_reg.in = early_reset_static_par_go.out ? 1'd0;
    index_ge_6.left = early_reset_static_par0_go.out ? idx_add.out;
    index_ge_6.right = early_reset_static_par0_go.out ? 32'd6;
    relu_r0_cur_val.in = relu_r0_cur_idx.out == 32'd1 & cond_wire30.out & early_reset_static_par0_go.out ? pe_0_1.out;
    relu_r0_cur_val.in = relu_r0_cur_idx.out == 32'd2 & cond_wire30.out & early_reset_static_par0_go.out ? pe_0_2.out;
    relu_r0_cur_val.in = relu_r0_cur_idx.out == 32'd0 & cond_wire30.out & early_reset_static_par0_go.out ? pe_0_0.out;
    relu_r2_cur_val.in = relu_r2_cur_idx.out == 32'd1 & cond_wire32.out & early_reset_static_par0_go.out ? pe_2_1.out;
    relu_r2_cur_val.in = relu_r2_cur_idx.out == 32'd0 & cond_wire32.out & early_reset_static_par0_go.out ? pe_2_0.out;
    relu_r2_cur_val.in = relu_r2_cur_idx.out == 32'd2 & cond_wire32.out & early_reset_static_par0_go.out ? pe_2_2.out;
    cond1.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond1.clk = clk;
    cond1.reset = reset;
    cond1.in = early_reset_static_par0_go.out ? idx_between_1_depth_plus_1_reg.out;
    cond2.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond2.clk = clk;
    cond2.reset = reset;
    cond2.in = early_reset_static_par0_go.out ? idx_between_5_depth_plus_5_reg.out;
    cond_wire5.in = !1'b1 & early_reset_static_par0_go.out ? cond5.out;
    cond_wire5.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    cond22.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond22.clk = clk;
    cond22.reset = reset;
    cond22.in = early_reset_static_par0_go.out ? idx_between_3_min_depth_4_plus_3_reg.out;
    cond26.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond26.clk = clk;
    cond26.reset = reset;
    cond26.in = early_reset_static_par0_go.out ? idx_between_4_depth_plus_4_reg.out;
    early_reset_static_par_go.in = wrapper_early_reset_static_par_go.out ? 1'd1;
    iter_limit.write_en = early_reset_static_par_go.out ? 1'd1;
    iter_limit.clk = clk;
    iter_limit.reset = reset;
    iter_limit.in = early_reset_static_par_go.out ? depth_plus_4.out;
    min_depth_4_plus_1.left = early_reset_static_par0_go.out ? min_depth_4.out;
    min_depth_4_plus_1.right = early_reset_static_par0_go.out ? 32'd1;
    min_depth_4_plus_3.left = early_reset_static_par0_go.out ? min_depth_4.out;
    min_depth_4_plus_3.right = early_reset_static_par0_go.out ? 32'd3;
    top_0_0.write_en = cond_wire.out & early_reset_static_par0_go.out ? 1'd1;
    top_0_0.clk = clk;
    top_0_0.reset = reset;
    top_0_0.in = cond_wire.out & early_reset_static_par0_go.out ? t0_read_data;
    pe_1_1.mul_ready = cond_wire17.out & early_reset_static_par0_go.out ? 1'd1;
    pe_1_1.mul_ready = cond_wire15.out & early_reset_static_par0_go.out ? 1'd0;
    pe_1_1.clk = clk;
    pe_1_1.top = (fsm.out == 1'd0 & cond_wire15.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire17.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_1_1.out;
    pe_1_1.left = (fsm.out == 1'd0 & cond_wire15.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire17.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_1_1.out;
    pe_1_1.go = (fsm.out == 1'd0 & cond_wire15.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire17.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_1_1.reset = reset;
    idx_between_4_min_depth_4_plus_4_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_4_min_depth_4_plus_4_reg.clk = clk;
    idx_between_4_min_depth_4_plus_4_reg.reset = reset;
    idx_between_4_min_depth_4_plus_4_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_4_min_depth_4_plus_4_reg.in = early_reset_static_par0_go.out ? idx_between_4_min_depth_4_plus_4_comb.out;
    idx_between_8_depth_plus_8_comb.left = early_reset_static_par0_go.out ? index_ge_8.out;
    idx_between_8_depth_plus_8_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_8.out;
    index_lt_min_depth_4_plus_1.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_min_depth_4_plus_1.right = early_reset_static_par0_go.out ? min_depth_4_plus_1.out;
    index_lt_depth_plus_2.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_2.right = early_reset_static_par0_go.out ? depth_plus_2.out;
    relu_r0_val_gt.left = cond_wire30.out & early_reset_static_par0_go.out ? relu_r0_cur_val.out;
    relu_r0_val_gt.right = cond_wire30.out & early_reset_static_par0_go.out ? 32'd0;
    relu_r1_val_gt.left = cond_wire31.out & early_reset_static_par0_go.out ? relu_r1_cur_val.out;
    relu_r1_val_gt.right = cond_wire31.out & early_reset_static_par0_go.out ? 32'd0;
    relu_r2_cur_idx.write_en = relu_r2_go_next.out & cond_wire32.out & early_reset_static_par0_go.out ? 1'd1;
    relu_r2_cur_idx.clk = clk;
    relu_r2_cur_idx.reset = reset;
    relu_r2_cur_idx.in = relu_r2_go_next.out & cond_wire32.out & early_reset_static_par0_go.out ? relu_r2_incr.out;
    relu_r2_incr.left = cond_wire32.out & early_reset_static_par0_go.out ? relu_r2_cur_idx.out;
    relu_r2_incr.right = cond_wire32.out & early_reset_static_par0_go.out ? 32'd1;
    cond_wire1.in = early_reset_static_par0_go.out ? idx_between_1_depth_plus_1_reg.out;
    cond_wire1.in = !1'b1 & early_reset_static_par0_go.out ? cond1.out;
    cond8.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond8.clk = clk;
    cond8.reset = reset;
    cond8.in = early_reset_static_par0_go.out ? idx_between_3_min_depth_4_plus_3_reg.out;
    cond12.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond12.clk = clk;
    cond12.reset = reset;
    cond12.in = early_reset_static_par0_go.out ? idx_between_2_min_depth_4_plus_2_reg.out;
    cond28.write_en = early_reset_static_par0_go.out ? 1'd1;
    cond28.clk = clk;
    cond28.reset = reset;
    cond28.in = early_reset_static_par0_go.out ? idx_between_5_min_depth_4_plus_5_reg.out;
    cond_wire28.in = early_reset_static_par0_go.out ? idx_between_5_min_depth_4_plus_5_reg.out;
    cond_wire28.in = !1'b1 & early_reset_static_par0_go.out ? cond28.out;
    left_0_1.write_en = cond_wire1.out & early_reset_static_par0_go.out ? 1'd1;
    left_0_1.clk = clk;
    left_0_1.reset = reset;
    left_0_1.in = cond_wire1.out & early_reset_static_par0_go.out ? left_0_0.out;
    pe_2_2.mul_ready = cond_wire29.out & early_reset_static_par0_go.out ? 1'd1;
    pe_2_2.mul_ready = cond_wire28.out & early_reset_static_par0_go.out ? 1'd0;
    pe_2_2.clk = clk;
    pe_2_2.top = (fsm.out == 1'd0 & cond_wire28.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire29.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? top_2_2.out;
    pe_2_2.left = (fsm.out == 1'd0 & cond_wire28.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire29.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? left_2_2.out;
    pe_2_2.go = (fsm.out == 1'd0 & cond_wire28.out & fsm.out == 1'd0 | fsm.out == 1'd0 & cond_wire29.out & fsm.out == 1'd0) & early_reset_static_par0_go.out ? 1'd1;
    pe_2_2.reset = reset;
    l2_add.left = cond_wire21.out & early_reset_static_par0_go.out ? 2'd1;
    l2_add.right = cond_wire21.out & early_reset_static_par0_go.out ? l2_idx.out;
    cond_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    cond_reg.clk = clk;
    cond_reg.reset = reset;
    cond_reg.in = early_reset_static_par_go.out ? 1'd1;
    cond_reg.in = early_reset_static_par0_go.out ? lt_iter_limit.out;
    idx_between_5_depth_plus_5_reg.write_en = early_reset_static_par_go.out | early_reset_static_par0_go.out ? 1'd1;
    idx_between_5_depth_plus_5_reg.clk = clk;
    idx_between_5_depth_plus_5_reg.reset = reset;
    idx_between_5_depth_plus_5_reg.in = early_reset_static_par0_go.out ? idx_between_5_depth_plus_5_comb.out;
    idx_between_5_depth_plus_5_reg.in = early_reset_static_par_go.out ? 1'd0;
    idx_between_9_depth_plus_9_comb.left = early_reset_static_par0_go.out ? index_ge_9.out;
    idx_between_9_depth_plus_9_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_9.out;
    index_lt_depth_plus_1.left = early_reset_static_par0_go.out ? idx_add.out;
    index_lt_depth_plus_1.right = early_reset_static_par0_go.out ? depth_plus_1.out;
    idx_between_3_depth_plus_3_comb.left = early_reset_static_par0_go.out ? index_ge_3.out;
    idx_between_3_depth_plus_3_comb.right = early_reset_static_par0_go.out ? index_lt_depth_plus_3.out;
    cond_wire14.in = !1'b1 & early_reset_static_par0_go.out ? cond14.out;
    cond_wire14.in = early_reset_static_par0_go.out ? idx_between_6_depth_plus_6_reg.out;
    cond_wire21.in = !1'b1 & early_reset_static_par0_go.out ? cond21.out;
    cond_wire21.in = early_reset_static_par0_go.out ? idx_between_2_depth_plus_2_reg.out;
    while_wrapper_early_reset_static_par0_go.in = !while_wrapper_early_reset_static_par0_done.out & fsm0.out == 2'd1 & tdcc_go.out ? 1'd1;
    while_wrapper_early_reset_static_par0_done.in = !cond_reg.out & fsm.out == 1'd0 ? 1'd1;
  }
  control {}
}
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    @data systolic_array = systolic_array_comp();
    @external @data t0 = std_mem_d1(32, 3, 2);
    @external @data t1 = std_mem_d1(32, 3, 2);
    @external @data t2 = std_mem_d1(32, 3, 2);
    @external @data l0 = std_mem_d1(32, 3, 2);
    @external @data l1 = std_mem_d1(32, 3, 2);
    @external @data l2 = std_mem_d1(32, 3, 2);
    @external @data out_mem_0 = std_mem_d1(32, 3, 32);
    @external @data out_mem_1 = std_mem_d1(32, 3, 32);
    @external @data out_mem_2 = std_mem_d1(32, 3, 32);
    @generated invoke0_go = std_wire(1);
    @generated invoke0_done = std_wire(1);
  }
  wires {
    l1.clk = clk;
    l1.addr0 = invoke0_go.out ? systolic_array.l1_addr0;
    l1.reset = reset;
    l2.clk = clk;
    l2.addr0 = invoke0_go.out ? systolic_array.l2_addr0;
    l2.reset = reset;
    done = invoke0_done.out ? 1'd1;
    t2.clk = clk;
    t2.addr0 = invoke0_go.out ? systolic_array.t2_addr0;
    t2.reset = reset;
    l0.clk = clk;
    l0.addr0 = invoke0_go.out ? systolic_array.l0_addr0;
    l0.reset = reset;
    t1.clk = clk;
    t1.addr0 = invoke0_go.out ? systolic_array.t1_addr0;
    t1.reset = reset;
    invoke0_go.in = go;
    invoke0_done.in = systolic_array.done;
    t0.clk = clk;
    t0.addr0 = invoke0_go.out ? systolic_array.t0_addr0;
    t0.reset = reset;
    systolic_array.l1_read_data = invoke0_go.out ? l1.read_data;
    systolic_array.l2_read_data = invoke0_go.out ? l2.read_data;
    systolic_array.depth = invoke0_go.out ? 32'd3;
    systolic_array.clk = clk;
    systolic_array.l0_read_data = invoke0_go.out ? l0.read_data;
    systolic_array.go = invoke0_go.out ? 1'd1;
    systolic_array.reset = reset;
    systolic_array.t1_read_data = invoke0_go.out ? t1.read_data;
    systolic_array.t0_read_data = invoke0_go.out ? t0.read_data;
    systolic_array.t2_read_data = invoke0_go.out ? t2.read_data;
    out_mem_1.write_en = invoke0_go.out ? systolic_array.out_mem_1_write_en;
    out_mem_1.clk = clk;
    out_mem_1.addr0 = invoke0_go.out ? systolic_array.out_mem_1_addr0;
    out_mem_1.reset = reset;
    out_mem_1.write_data = invoke0_go.out ? systolic_array.out_mem_1_write_data;
    out_mem_0.write_en = invoke0_go.out ? systolic_array.out_mem_0_write_en;
    out_mem_0.clk = clk;
    out_mem_0.addr0 = invoke0_go.out ? systolic_array.out_mem_0_addr0;
    out_mem_0.reset = reset;
    out_mem_0.write_data = invoke0_go.out ? systolic_array.out_mem_0_write_data;
    out_mem_2.write_en = invoke0_go.out ? systolic_array.out_mem_2_write_en;
    out_mem_2.clk = clk;
    out_mem_2.addr0 = invoke0_go.out ? systolic_array.out_mem_2_addr0;
    out_mem_2.reset = reset;
    out_mem_2.write_data = invoke0_go.out ? systolic_array.out_mem_2_write_data;
  }
  control {}
}
metadata #{
0: pe_0_0 filling: [1,min_depth_4_plus_1) accumulating: [5 depth_plus_5)
1: pe_0_1 filling: [2,min_depth_4_plus_2) accumulating: [6 depth_plus_6)
2: pe_0_2 filling: [3,min_depth_4_plus_3) accumulating: [7 depth_plus_7)
3: pe_1_0 filling: [2,min_depth_4_plus_2) accumulating: [6 depth_plus_6)
4: pe_1_1 filling: [3,min_depth_4_plus_3) accumulating: [7 depth_plus_7)
5: pe_1_2 filling: [4,min_depth_4_plus_4) accumulating: [8 depth_plus_8)
6: pe_2_0 filling: [3,min_depth_4_plus_3) accumulating: [7 depth_plus_7)
7: pe_2_1 filling: [4,min_depth_4_plus_4) accumulating: [8 depth_plus_8)
8: pe_2_2 filling: [5,min_depth_4_plus_5) accumulating: [9 depth_plus_9)
}#
