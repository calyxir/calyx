import "primitives/core.futil";
import "primitives/memories/seq.futil";
import "primitives/binary_operators.futil";
component main() -> () {
  cells {
    add0 = std_fp_add(4,2,2);
    fp_const0 = std_const(4,6);
    fp_const1 = std_const(4,4);
    x_0 = std_reg(4);
    y_0 = std_reg(4);
  }
  wires {
    group let0<"promotable"=1> {
      x_0.in = fp_const0.out;
      x_0.write_en = 1'd1;
      let0[done] = x_0.done;
    }
    group let1<"promotable"=1> {
      y_0.in = add0.out;
      y_0.write_en = 1'd1;
      let1[done] = y_0.done;
      add0.left = x_0.out;
      add0.right = fp_const1.out;
    }
  }
  control {
    seq {
      @pos(0) let0;
      @pos(1) let1;
    }
  }
}
metadata #{
  0: let x: ufix<4, 2> = 1.5;
  1: let y: ufix<4, 2> = x + (1.0 as ufix<4, 2>);
}#

