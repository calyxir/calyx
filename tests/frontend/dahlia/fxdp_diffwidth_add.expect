import "primitives/std.lib";
component main() -> () {
  cells {
    a_0 = std_reg(16);
    add0 = fixed_p_std_add_dbit(16,16,8,8,5,11,19);
    b_0 = std_reg(16);
    fpconst0 = fixed_p_std_const(16,8,8,16,5);
    fpconst1 = fixed_p_std_const(16,5,11,8,375);
    result1_0 = std_reg(19);
  }
  wires {
    group let0<"static"=1> {
      a_0.in = fpconst0.out;
      a_0.write_en = 1'd1;
      let0[done] = a_0.done;
    }
    group let1<"static"=1> {
      b_0.in = fpconst1.out;
      b_0.write_en = 1'd1;
      let1[done] = b_0.done;
    }
    group upd0<"static"=1> {
      result1_0.write_en = 1'd1;
      add0.left = a_0.out;
      add0.right = b_0.out;
      result1_0.in = 1'd1 ? add0.out;
      upd0[done] = result1_0.done ? 1'd1;
    }
  }
  control {
    seq {
      par {
        let0;
        let1;
      }
      upd0;
    }
  }
}

