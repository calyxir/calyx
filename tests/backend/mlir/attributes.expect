module attributes {calyx.entrypoint = "main" } {
calyx.component @main(%in: i32 {foo=32}, %go: i1 {promotable=10, go=1}, %clk: i1 {clk=1}, %reset: i1 {reset=1}) -> (%out: i32 {promotable=0}, %done: i1 {done=1}) {
  %r.in, %r.write_en, %r.clk, %r.reset, %r.out, %r.done = calyx.register @r {precious=1} : i32, i1, i1, i1, i32, i1
  %le.left, %le.right, %le.out = calyx.std_le @le {bar=32} : i32, i32, i1
  calyx.wires {
    calyx.group @upd {
      calyx.group_done %r.done : i1
    } {stable=1}
    calyx.comb_group @cond {
    } {promotable=0}
  }

  calyx.control {
    calyx.while %le.out with @cond {
      calyx.enable @upd {promotable=2}
    } {bound=32}
  }
}

}
