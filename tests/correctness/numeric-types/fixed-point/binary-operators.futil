import "primitives/std.lib";
component main() -> () {
  cells {
    @external(1) slhs = std_mem_d1(4, 1, 1);
    @external(1) srhs = std_mem_d1(4, 1, 1);
    @external(1) signed_add = std_mem_d1(4, 1, 1);
    @external(1) signed_sub = std_mem_d1(4, 1, 1);

    @external(1) lhs = std_mem_d1(32, 1, 1);
    @external(1) rhs = std_mem_d1(32, 1, 1);
    @external(1) unsigned_add = std_mem_d1(32, 1, 1);
    @external(1) unsigned_sub = std_mem_d1(32, 1, 1);

    sadd = fixed_p_std_sadd(4,2,2);
    ssub = fixed_p_std_ssub(4,2,2);
    add = fixed_p_std_add(32,1,31);
    sub = fixed_p_std_sub(32,1,31);
  }
  wires {
    group do_signed_add<"static"=1> {
      signed_add.write_en = 1'd1;
      signed_add.addr0 = 1'd0;
      slhs.addr0 = 1'd0;
      srhs.addr0 = 1'd0;
      sadd.left = slhs.read_data;
      sadd.right = srhs.read_data;
      signed_add.write_data = sadd.out;
      do_signed_add[done] = signed_add.done ? 1'd1;
    }
    group do_signed_sub<"static"=1> {
      signed_sub.write_en = 1'd1;
      signed_sub.addr0 = 1'd0;
      slhs.addr0 = 1'd0;
      srhs.addr0 = 1'd0;
      ssub.left = slhs.read_data;
      ssub.right = srhs.read_data;
      signed_sub.write_data = ssub.out;
      do_signed_sub[done] = signed_sub.done ? 1'd1;
    }
    group do_unsigned_add<"static"=1> {
      unsigned_add.write_en = 1'd1;
      unsigned_add.addr0 = 1'd0;
      lhs.addr0 = 1'd0;
      rhs.addr0 = 1'd0;
      add.left = lhs.read_data;
      add.right = rhs.read_data;
      unsigned_add.write_data = add.out;
      do_unsigned_add[done] = unsigned_add.done ? 1'd1;
    }
    group do_unsigned_sub<"static"=1> {
      unsigned_sub.write_en = 1'd1;
      unsigned_sub.addr0 = 1'd0;
      lhs.addr0 = 1'd0;
      rhs.addr0 = 1'd0;
      sub.left = lhs.read_data;
      sub.right = rhs.read_data;
      unsigned_sub.write_data = sub.out;
      do_unsigned_sub[done] = unsigned_sub.done ? 1'd1;
    }
  }
  control {
    seq {
      do_signed_add;
      do_signed_sub;
      do_unsigned_add;
      do_unsigned_sub;
    }
  }
}
