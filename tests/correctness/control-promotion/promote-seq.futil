import "primitives/core.futil";
import "primitives/pipelined.futil";

component main () -> () {
  cells {
    r = std_reg(32);
    a = std_add(32);
    acc = std_reg(32);
    @external sum = std_mem_d1(32,1,1);
  }
  wires {
    static group incr_r<1> {
      a.left = 32'd1;
      a.right = r.out;
      r.in = a.out;
      r.write_en = 1'd1;
    }

    static group accm<1> {
      a.left = acc.out;
      a.right = r.out;
      acc.in = a.out;
      acc.write_en = 1'd1;
    }

    group reg_to_mem {
      sum.write_data = acc.out;
      sum.write_en = 1'd1;
      sum.addr0 = 1'd0;
      reg_to_mem[done] = sum.done;
    }
  }
  control {
    seq {
      incr_r;
      accm;
      reg_to_mem;
    }
  }
}