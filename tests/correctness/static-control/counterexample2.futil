import "primitives/core.futil";
import "primitives/pipelined.futil";
component main () -> () {
  cells {
    p = std_reg(5);
    w = std_wire(5);
    A_exec_wire = std_wire(1);
    incr = std_add(5);
    l = std_lt(5);
    @external mem = std_mem_d1(5, 1, 1);
  }
  wires {
    static group A <1>{
      incr.left = p.out;
      incr.right = 5'd1;
      p.in = incr.out;
      p.write_en = 1'd1;
      // let w.out be the input to l.left
      w.in = incr.out;
      A_exec_wire.in = 1'd1;
    }
    static group B <1>{
      incr.left = p.out;
      incr.right = mem.read_data;
      mem.write_data = incr.out;
      mem.write_en = 1'd1;
      mem.addr0 = 1'd0;
    }
    w.in = !A_exec_wire.out ? p.out;
    l.left = w.out;
    l.right = 5'd6;
  }
  control {
    while l.out {
      static seq {
        A; B;
      }
    }
  }
} 



