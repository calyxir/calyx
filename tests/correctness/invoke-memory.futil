import "primitives/std.lib";
component copy(dest_done: 1, src_read_data: 32) ->
              (dest_write_data: 32, dest_write_en: 1, dest_addr0: 2, src_addr0: 2) {
  cells {
  }
  wires {
    group copy_index_zero<"static"=1> {
      src_addr0 = 2'd0;
      dest_addr0 = 2'd0;
      dest_write_en = 1'd1;
      dest_write_data = src_read_data;
      copy_index_zero[done] = dest_done;
    }
    group copy_index_one<"static"=1> {
      src_addr0 = 2'd1;
      dest_addr0 = 2'd1;
      dest_write_en = 1'd1;
      dest_write_data = src_read_data;
      copy_index_one[done] = dest_done;
    }
  }
  control {
    seq {
      copy_index_zero;
      copy_index_one;
    }
  }
}

component main() -> () {
  cells {
    @external(1) d = std_mem_d1(32,2,2);
    @external(1) s = std_mem_d1(32,2,2);
    copy0 = copy();
  }
  wires {
  }
  control {
    seq {
      invoke copy0(dest_done=d.done, src_read_data=s.read_data)
                  (dest_write_data=d.write_data, dest_write_en=d.write_en, dest_addr0=d.addr0, src_addr0=s.addr0);
    }
  }
}
