import "primitives/std.lib";
component main(go: 1, clk: 1) -> (done: 1) {
  cells {
    add0 = prim std_add(4);
    add1 = prim std_add(4);
    add2 = prim std_add(4);
    add3 = prim std_add(4);
    add4 = prim std_add(4);
    bin_read0_0 = prim std_reg(4);
    cond_computed0 = prim std_reg(1);
    cond_stored0 = prim std_reg(1);
    cond_stored1 = prim std_reg(1);
    const0 = prim std_const(4, 0);
    const1 = prim std_const(4, 0);
    const10 = prim std_const(4, 1);
    const11 = prim std_const(4, 1);
    const2 = prim std_const(4, 0);
    const3 = prim std_const(4, 0);
    const4 = prim std_const(4, 10);
    const5 = prim std_const(4, 2);
    const6 = prim std_const(4, 0);
    const7 = prim std_const(4, 1);
    const8 = prim std_const(4, 1);
    const9 = prim std_const(4, 1);
    done_reg0 = prim std_reg(1);
    eq0 = prim std_eq(4);
    fsm0 = prim std_reg(32);
    fsm1 = prim std_reg(32);
    fsm2 = prim std_reg(32);
    fsm3 = prim std_reg(32);
    fsm4 = prim std_reg(32);
    i_0 = prim std_reg(4);
    incr0 = prim std_add(32);
    incr1 = prim std_add(32);
    incr2 = prim std_add(32);
    lt0 = prim std_lt(4);
    mod_pipe0 = prim std_mod_pipe(4);
    x_0 = prim std_reg(4);
    y_0 = prim std_reg(4);
    z_0 = prim std_reg(4);
  }
  
  wires {
    x_0.in = (fsm0.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? add0.out;
    add0.right = (fsm0.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const7.out;
    add0.left = (fsm0.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? x_0.out;
    x_0.in = (fsm0.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? add1.out;
    add1.right = (fsm0.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const8.out;
    add1.left = (fsm0.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? x_0.out;
    y_0.in = (fsm1.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? add2.out;
    add2.right = (fsm1.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const9.out;
    add2.left = (fsm1.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? y_0.out;
    z_0.in = (fsm1.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? add3.out;
    add3.right = (fsm1.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const10.out;
    add3.left = (fsm1.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? z_0.out;
    eq0.left = (fsm2.out == 32'd0 & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? bin_read0_0.out;
    eq0.right = (fsm2.out == 32'd0 & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const6.out;
    cond_stored0.in = (fsm2.out == 32'd0 & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? eq0.out;
    cond_stored0.write_en = (fsm2.out == 32'd0 & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 1'd1;
    mod_pipe0.right = (fsm3.out == 32'd0 & !(bin_read0_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const5.out;
    mod_pipe0.left = (fsm3.out == 32'd0 & !(bin_read0_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? i_0.out;
    bin_read0_0.write_en = (fsm3.out == 32'd0 & !(bin_read0_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? mod_pipe0.done;
    bin_read0_0.in = (fsm3.out == 32'd0 & !(bin_read0_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? mod_pipe0.out;
    fsm3.in = (fsm3.out == 32'd0 & bin_read0_0.done & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 32'd1;
    fsm3.in = (fsm3.out == 32'd1 & fsm2.out == 32'd3 & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 32'd2;
    incr2.left = (fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? fsm2.out;
    incr2.right = (fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 32'd1;
    i_0.in = (fsm3.out == 32'd2 & !(i_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? add4.out;
    add4.right = (fsm3.out == 32'd2 & !(i_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const11.out;
    add4.left = (fsm3.out == 32'd2 & !(i_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? i_0.out;
    fsm3.in = (fsm3.out == 32'd2 & i_0.done & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 32'd3;
    i_0.in = (fsm4.out == 32'd0 & !(i_0.done) & go) ? const0.out;
    fsm4.in = (fsm4.out == 32'd0 & i_0.done & go) ? 32'd1;
    x_0.in = (fsm4.out == 32'd1 & !(x_0.done) & go) ? const1.out;
    fsm4.in = (fsm4.out == 32'd1 & x_0.done & go) ? 32'd2;
    y_0.in = (fsm4.out == 32'd2 & !(y_0.done) & go) ? const2.out;
    fsm4.in = (fsm4.out == 32'd2 & y_0.done & go) ? 32'd3;
    z_0.in = (fsm4.out == 32'd3 & !(z_0.done) & go) ? const3.out;
    fsm4.in = (fsm4.out == 32'd3 & z_0.done & go) ? 32'd4;
    fsm4.in = (fsm4.out == 32'd4 & done_reg0.out & go) ? 32'd5;
    fsm0.in = (fsm0.out != 32'd2 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? incr0.out;
    fsm1.in = (fsm1.out != 32'd2 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? incr1.out;
    fsm2.in = (fsm2.out != 32'd3 & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? incr2.out;
    incr1.right = (fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? fsm1.out;
    incr1.left = (fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 32'd1;
    incr0.right = (fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? fsm0.out;
    incr0.left = (fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 32'd1;
    lt0.right = (!(cond_computed0.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? const4.out;
    lt0.left = (!(cond_computed0.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? i_0.out;
    cond_stored1.in = (!(cond_computed0.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? lt0.out;
    cond_computed0.in = (!(cond_computed0.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 1'd1;
    cond_stored1.write_en = (!(cond_computed0.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 1'd1;
    mod_pipe0.go = (!(mod_pipe0.done) & fsm3.out == 32'd0 & !(bin_read0_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 1'd1;
    done_reg0.in = (cond_computed0.out & !(cond_stored1.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) ? 1'd1;
    fsm3.write_en = ((fsm3.out == 32'd0 & bin_read0_0.done & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | (fsm3.out == 32'd1 & fsm2.out == 32'd3 & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | (fsm3.out == 32'd2 & i_0.done & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | fsm3.out == 32'd3) ? 1'd1;
    i_0.write_en = ((fsm4.out == 32'd0 & !(i_0.done) & go) | (fsm3.out == 32'd2 & !(i_0.done) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go)) ? 1'd1;
    fsm4.write_en = ((fsm4.out == 32'd0 & i_0.done & go) | (fsm4.out == 32'd1 & x_0.done & go) | (fsm4.out == 32'd2 & y_0.done & go) | (fsm4.out == 32'd3 & z_0.done & go) | (fsm4.out == 32'd4 & done_reg0.out & go) | fsm4.out == 32'd5) ? 1'd1;
    x_0.write_en = ((fsm4.out == 32'd1 & !(x_0.done) & go) | (fsm0.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | (fsm0.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go)) ? 1'd1;
    y_0.write_en = ((fsm4.out == 32'd2 & !(y_0.done) & go) | (fsm1.out == 32'd0 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go)) ? 1'd1;
    z_0.write_en = ((fsm4.out == 32'd3 & !(z_0.done) & go) | (fsm1.out == 32'd1 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go)) ? 1'd1;
    fsm0.write_en = ((fsm0.out != 32'd2 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & cond_stored0.out & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | fsm0.out == 32'd2) ? 1'd1;
    fsm1.write_en = ((fsm1.out != 32'd2 & fsm2.out > 32'd0 & fsm2.out < 32'd3 & !(cond_stored0.out) & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | fsm1.out == 32'd2) ? 1'd1;
    fsm2.write_en = ((fsm2.out != 32'd3 & fsm3.out == 32'd1 & !(fsm2.out == 32'd3) & cond_stored1.out & cond_computed0.out & !(fsm3.out == 32'd3) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | fsm2.out == 32'd3) ? 1'd1;
    cond_computed0.write_en = ((!(cond_computed0.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | (cond_stored1.out & cond_computed0.out & fsm3.out == 32'd3 & fsm4.out == 32'd4 & !(done_reg0.out) & go) | (cond_computed0.out & !(cond_stored1.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go)) ? 1'd1;
    done_reg0.write_en = ((cond_computed0.out & !(cond_stored1.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go) | done_reg0.out) ? 1'd1;
    cond_computed0.in = ((cond_stored1.out & cond_computed0.out & fsm3.out == 32'd3 & fsm4.out == 32'd4 & !(done_reg0.out) & go) | (cond_computed0.out & !(cond_stored1.out) & fsm4.out == 32'd4 & !(done_reg0.out) & go)) ? 1'd0;
    fsm0.in = fsm0.out == 32'd2 ? 32'd0;
    fsm1.in = fsm1.out == 32'd2 ? 32'd0;
    fsm2.in = fsm2.out == 32'd3 ? 32'd0;
    fsm3.in = fsm3.out == 32'd3 ? 32'd0;
    done = fsm4.out == 32'd5 ? 1'd1;
    fsm4.in = fsm4.out == 32'd5 ? 32'd0;
    done_reg0.in = done_reg0.out ? 1'd0;
  }
  
  control {
    
  }
}