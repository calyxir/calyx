import "primitives/std.lib";
component main(go: 1, clk: 1) -> (done: 1) {
  cells {
    r = prim std_reg(32);
    add = prim std_add(32);
    fsm = prim std_reg(2);
  }
  wires {
    add.left = !r.done & go & (fsm.out == 2'd0 | fsm.out == 2'd1) ? 32'd1;
    add.right = go & !r.done & (fsm.out == 2'd0 | fsm.out == 2'd1) ? r.out;
    r.in = go & !r.done & (fsm.out == 2'd0 | fsm.out == 2'd1) ? add.out;
    r.write_en = go & !r.done & (fsm.out == 2'd0 | fsm.out == 2'd1) ? 1'd1;
    fsm.in = fsm.out == 2'd0 & r.done & go ? 2'd1;
    fsm.write_en = fsm.out == 2'd0 & r.done & go ? 1'd1;
    fsm.in = fsm.out == 2'd1 & r.done & go ? 2'd2;
    fsm.write_en = fsm.out == 2'd1 & r.done & go ? 1'd1;
    fsm.in = fsm.out == 2'd2 ? 2'd0;
    fsm.write_en = fsm.out == 2'd2 ? 1'd1;
    done = fsm.out == 2'd2 ? 1'd1;
    done = fsm.out == 2'd2 ? 1'd1;
    r.clk = clk;
    fsm.clk = clk;
  }

  control {}
}
