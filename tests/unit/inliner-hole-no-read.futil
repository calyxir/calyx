import "primitives/std.lib";
component main() -> () {
  cells {
    const0 = prim std_const(32, 1);
    const1 = prim std_const(32, 2);
    fsm0 = prim std_reg(32);
    incr0 = prim std_add(32);
    x0 = prim std_reg(32);
    y0 = prim std_reg(32);
  }
  
  wires {
    group let0<"static"=1> {
      x0.in = const0.out;
      x0.write_en = 1'd1;
      let0[done] = x0.done;
    }
    group let1<"static"=1> {
      y0.in = const1.out;
      y0.write_en = 1'd1;
      let1[done] = y0.done;
    }
    group static_seq0<"static"=2> {
      let0[go] = fsm0.out == 32'd0 ? 1'd1;
      let1[go] = fsm0.out == 32'd1 ? 1'd1;
      incr0.left = 32'd1;
      incr0.right = fsm0.out;
      fsm0.in = fsm0.out != 32'd2 ? incr0.out;
      fsm0.write_en = fsm0.out != 32'd2 ? 1'd1;
      static_seq0[done] = fsm0.out == 32'd2 ? 1'd1;
    }
    fsm0.write_en = fsm0.out == 32'd2 ? 1'd1;
    fsm0.in = fsm0.out == 32'd2 ? 32'd0;
  }
  
  control {
    static_seq0;
  }
}