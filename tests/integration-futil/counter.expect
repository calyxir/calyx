import "primitives/std.lib";
component main() -> () {
  cells {
    add0 = prim std_add(32);
    const0 = prim std_const(32,0);
    const1 = prim std_const(32,10);
    const2 = prim std_const(32,1);
    i0 = prim std_reg(32);
    lt0 = prim std_lt(32);
  }
  wires {
    group cond0<"static"=0> {
      cond0[done] = 1'd1;
      lt0.left = i0.out;
      lt0.right = const1.out;
    }
    group let0<"static"=1> {
      i0.in = const0.out;
      i0.write_en = 1'd1;
      let0[done] = i0.done;
    }
    group upd0<"static"=1> {
      i0.write_en = 1'd1;
      add0.left = i0.out;
      add0.right = const2.out;
      i0.in = 1'd1 ? add0.out;
      upd0[done] = i0.done ? 1'd1;
    }
  }
  control {
    seq {
      let0;
      while lt0.out with cond0 {
        upd0;
      }
    }
  }
}
