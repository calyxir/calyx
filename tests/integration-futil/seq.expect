import "primitives/std.lib";
component main() -> () {
  cells {
    a_0 = prim std_reg(32);
    const0 = prim std_const(32,1);
    const1 = prim std_const(32,2);
    const2 = prim std_const(32,3);
    const3 = prim std_const(32,4);
    x_0 = prim std_reg(32);
    y_0 = prim std_reg(32);
    z_0 = prim std_reg(32);
  }
  wires {
    group let0<"static"=1> {
      x_0.in = const0.out;
      x_0.write_en = 1'd1;
      let0[done] = x_0.done;
    }
    group let1<"static"=1> {
      y_0.in = const1.out;
      y_0.write_en = 1'd1;
      let1[done] = y_0.done;
    }
    group let2<"static"=1> {
      z_0.in = const2.out;
      z_0.write_en = 1'd1;
      let2[done] = z_0.done;
    }
    group let3<"static"=1> {
      a_0.in = const3.out;
      a_0.write_en = 1'd1;
      let3[done] = a_0.done;
    }
  }
  control {
    seq {
      let0;
      let1;
      let2;
      let3;
    }
  }
}
