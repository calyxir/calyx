import "primitives/core.futil";
import "primitives/memories/comb.futil";
component example<"state_share"=1>(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    lt = std_lt(4);
  }
  wires {
    static<4> group A {
    }
    static<1> group B {
    }
    static<3> group C {
    }
    static<2> group D {
    }
    static<3> group E {
    }
    static<2> group F {
    }
    static<4> group G {
    }
    static<3> group H {
    }
    static<3> group J {
    }
    static<1> group X {
    }
    static<2> group Y {
    }
    static<5> group Z {
    }
    comb group less_than {
      lt.left = 4'd3;
      lt.right = 4'd2;
    }
  }
  control {
    @NODE_ID(0) static<15> par {
      @NODE_ID static<15> seq  {
        @NODE_ID(2) A;
        @NODE_ID(3) B;
        @BEGIN_ID(4) @END_ID(13) static<7> if  lt.out {
          @NODE_ID(5) static<7> par {
            @NODE_ID(6) static<7> seq  {
              @NODE_ID(7) G;
              @NODE_ID(8) H;
            }
            @NODE_ID(9) static<3> seq  {
              @NODE_ID(10) X;
              @NODE_ID(11) Y;
            }
          }
        } else {
          @NODE_ID(12) Z;
        }
        @NODE_ID(14) J;
      }
      @NODE_ID(15) static<10> seq  {
        @NODE_ID(16) C;
        @NODE_ID(17) D;
        @NODE_ID(18) E;
        @NODE_ID(19) F;
      }
    }
  }
}
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    e = example();
  }
  wires {}
  control {
    invoke e()();
  }
}
---STDERR---
This maps ids of par blocks to "node timing maps", which map node ids to the first interval (i,j) that the node (i.e., enable/invoke/if conditional) is active for, 
 relative to the start of the given par block
============ Map for Component "example" ============
========Par Node ID: 0========
====MUST EXECUTE====
2 -- (0, 4)
3 -- (4, 5)
4 -- (5, 6)
14 -- (12, 15)
16 -- (0, 3)
17 -- (3, 5)
18 -- (5, 8)
19 -- (8, 10)
====MAY EXECUTE====
7 -- (5, 9)
8 -- (9, 12)
10 -- (5, 6)
11 -- (6, 8)
12 -- (5, 10)
========Par Node ID: 5========
====MUST EXECUTE====
7 -- (0, 4)
8 -- (4, 7)
10 -- (0, 1)
11 -- (1, 3)
====MAY EXECUTE====

