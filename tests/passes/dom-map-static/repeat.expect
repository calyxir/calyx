import "primitives/core.futil";
import "primitives/memories/comb.futil";
component example<"state_share"=1>(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    lt = std_lt(4);
  }
  wires {
    static<4> group A {
    }
    static<1> group B {
    }
    static<3> group C {
    }
    static<5> group D {
    }
  }
  control {
    @NODE_ID(0) static<17> par {
      @NODE_ID static<17> seq  {
        @NODE_ID(2) A;
        @NODE_ID(3) static repeat 10 {
          @NODE_ID(4) B;
        }
        @NODE_ID(5) C;
      }
      @NODE_ID(6) static repeat 3 {
        @NODE_ID(7) D;
      }
    }
  }
}
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    e = example();
  }
  wires {}
  control {
    invoke e()();
  }
}
---STDERR---
This maps ids of par blocks to "node timing maps", which map node ids to the first interval (i,j) that the node (i.e., enable/invoke/if conditional) is active for, 
 relative to the start of the given par block
============ Map for Component "example" ============
========Par Node ID: 0========
====MUST EXECUTE====
2 -- (0, 4)
4 -- (4, 5)
5 -- (14, 17)
7 -- (0, 5)
====MAY EXECUTE====

