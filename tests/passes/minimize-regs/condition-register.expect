import "primitives/std.lib";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    x = std_reg(1);
  }
  wires {
    group wr_x {
      x.in = 1'd1;
      x.write_en = 1'd1;
      wr_x[done] = x.done;
    }
    group cond {
      x.in = 1'd1;
      x.write_en = 1'd1;
      cond[done] = x.done;
    }
    group some_math {
      x.in = 1'd0;
      x.write_en = 1'd1;
      some_math[done] = x.done;
    }
    group wr_z {
      x.in = 1'd1;
      x.write_en = 1'd1;
      wr_z[done] = x.done;
    }
    group cond1 {
      x.in = 1'd1;
      x.write_en = 1'd1;
      cond1[done] = x.done;
    }
    group some_math1 {
      x.in = 1'd0;
      x.write_en = 1'd1;
      some_math[done] = x.done;
    }
  }

  control {
    seq {
      wr_x;
      if x.out with cond {
        some_math;
      }
      wr_z;
      while x.out with cond1 {
        some_math1;
      }
    }
  }
}
