import "primitives/core.futil";
component add(left: 32, right: 32, @go go: 1, @clk clk: 1, @reset reset: 1) -> (out: 32, @done done: 1) {
  cells {
    adder = std_add(32);
    outpt = std_reg(32);
  }
  wires {
    group do_add {
      adder.left = left;
      adder.right = right;
      outpt.in = adder.out;
      outpt.write_en = 1'd1;
      do_add[done] = outpt.done;
    }
  }

  control {
    @NODE_ID(0) seq {
      @NODE_ID do_add;
    }
  }
}
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    x = std_reg(32);
    @external add_x = std_add(32);
    my_add = add();
  }
  wires {
    group wr_x {
      x.in = 32'd1;
      x.write_en = 1'd1;
      wr_x[done] = x.done;
    }
    group rd_x {
      add_x.left = x.out;
      add_x.right = x.out;
      rd_x[done] = x.done;
    }
    group wr_y {
      x.in = 32'd10;
      x.write_en = 1'd1;
      wr_y[done] = x.done;
    }
  }

  control {
    @NODE_ID(0) seq {
      @NODE_ID wr_x;
      @NODE_ID(2) rd_x;
      @NODE_ID(3) wr_y;
      @NODE_ID(4) invoke my_add(
        left = x.out,
        right = x.out
      )();
    }
  }
}
