// -p cell-share -p remove-ids
import "primitives/core.futil";
import "primitives/memories/comb.futil";
component main() -> () {
  cells {
    lt = std_lt(32);
    a = std_reg(32);
    b = std_reg(32);
    c = std_reg(16);
    d = std_reg(16);
    x = std_reg(4);
    sl = std_slice(16, 4);
  }
  wires {
    static<1> group wr_a {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static<1> group wr_b {
      b.write_en = 1'd1;
      b.in = 32'd2;
    }
    static<1> group wr_x {
      x.write_en = 1'd1;
      x.in = 4'd2;
    }
    static<1> group wr_c {
      c.write_en = 1'd1;
      c.in = 16'd4;
    }
    static<1> group wr_d {
      d.write_en = 1'd1;
      d.in = 16'd4;
    }
    static<1> group read_c {
      sl.in = c.out;
      x.write_en = 1'd1;
      x.in = sl.out;
    }
  }
  control {
    seq{
      // a and b should be shared, never will be live at same time
      static par {
        static if lt.out{
          wr_a;
        }
        else{
          wr_b;
        }
        static seq {
          wr_x;
          wr_b;
        }
      }
      // c and d shouldn't shared
      static par{
        static seq{
          wr_c;
          wr_x;
          read_c;
        }
        static seq{
          wr_x;
          wr_d;
          wr_x;
        }
      }
    }
  }
}
