// -p well-formed -p simplify-with-control -p cell-share -p dead-cell-removal -p remove-ids
import "primitives/core.futil";
import "primitives/memories/comb.futil";
component main() -> () {
  cells {
    b = std_reg(32);
    before = std_reg(4);
    x = std_reg(4);
    @external read_x = std_add(4);
  }
  wires {
    group wr_before<"promotable"=1> {
      before.in = 4'd1;
      before.write_en = 1'd1;
      wr_before[done] = before.done;
    }
    group wr_x<"promotable"=1> {
      x.in = 4'd1;
      x.write_en = 1'd1;
      wr_x[done] = x.done;
    }
    group wr_b<"promotable"=1> {
      b.in = 32'd1;
      b.write_en = 1'd1;
      wr_b[done] = b.done;
    }
    group rd_x<"promotable"=1> {
      read_x.right = x.out;
      read_x.left = x.out;
      rd_x[done] = x.done; // XXX: This is functionally incorrect
    }
  }
  control {
    seq {
      wr_before;
      par {
        wr_x;
        wr_b;
      }
      rd_x;
    }
  }
}
