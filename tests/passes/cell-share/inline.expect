import "primitives/core.futil";
import "primitives/memories/comb.futil";
component my_reg<"state_share"=1>(@data in: 32, @go go: 1, @clk clk: 1, @reset reset: 1) -> (@stable out: 32, @done done: 1) {
  cells {
    @data r = std_reg(32);
  }
  wires {
    group invoke0<"promotable"=1> {
      r.write_en = 1'd1;
      invoke0[done] = r.done;
      r.in = in;
    }
    out = r.out;
  }
  control {
    invoke0;
  }
}
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    @external @data mem = comb_mem_d1(32, 2, 1);
    @generated r = std_reg(32);
  }
  wires {
    static<1> group invoke00 {
      r.write_en = 1'd1;
      r.in = 32'd0;
    }
    static<1> group invoke10 {
      mem.write_en = 1'd1;
      mem.addr0 = 1'd0;
      mem.write_data = r.out;
    }
    static<1> group invoke20 {
      r.write_en = 1'd1;
      r.in = 32'd1;
    }
    static<1> group invoke30 {
      mem.write_en = 1'd1;
      mem.addr0 = 1'd1;
      mem.write_data = r.out;
    }
  }
  control {
    static<4> seq  {
      invoke00;
      invoke10;
      invoke20;
      invoke30;
    }
  }
}
