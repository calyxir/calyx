//-p infer-share

// no_share is testing when register c may be written into (it's go port is connected
// to lt.out), in which case it does *not* count as a guaranteed write.

import "primitives/core.futil";
import "primitives/memories/comb.futil";
import "primitives/binary_operators.futil";

component no_share(in: 32) -> (out: 32) {
  cells {
    b = std_reg(32);
    c = std_reg(32);
    d = std_reg(32);
    lt = std_lt(32);
  }
  wires {
    group wrCD{
      lt.left = 32'd2;
      lt.right = 32'd4;
      c.write_en = lt.out;
      c.in = 32'd20;
      d.write_en = !lt.out ? 1'd1;
      d.in = 32'd15;
      wrCD[done] = c.done | d.done ? 1'd1;
    }
    group readC{
      b.in = c.out;
      b.write_en = 1'd1;
      readC[done] = b.done;
    }
    out = b.out;
  }
  control {
    seq{
      wrCD;
      readC;
    }
  }
}

component main() -> () {
  cells {
  }
  wires {
  }
  control {
  }
}
