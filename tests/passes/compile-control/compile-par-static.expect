import "primitives/std.lib";
component main(go: 1, clk: 1) -> (done: 1) {
  cells {
    a = prim std_reg(2);
    b = prim std_reg(2);
    c = prim std_reg(2);
    fsm = prim std_reg(32);
    incr = prim std_add(32);
  }
  wires {
    group A<"static"=1> {
      a.in = 2'd0;
      a.write_en = 1'd1;
      A[done] = a.done;
    }
    group B<"static"=1> {
      b.in = 2'd1;
      b.write_en = 1'd1;
      B[done] = b.done;
    }
    group C<"static"=1> {
      c.in = 2'd2;
      c.write_en = 1'd1;
      C[done] = c.done;
    }
    group static_par<"static"=1> {
      incr.left = 32'd1;
      incr.right = fsm.out;
      fsm.in = fsm.out != 32'd1 ? incr.out;
      fsm.write_en = fsm.out != 32'd1 ? 1'd1;
      static_par[done] = fsm.out == 32'd1 ? 1'd1;
      A[go] = fsm.out <= 32'd1 ? 1'd1;
      B[go] = fsm.out <= 32'd1 ? 1'd1;
      C[go] = fsm.out <= 32'd1 ? 1'd1;
    }
    fsm.in = fsm.out == 32'd1 ? 32'd0;
    fsm.write_en = fsm.out == 32'd1 ? 1'd1;
  }

  control {
    static_par;
  }
}
