This maps ids of par blocks to " cell timing maps ", which map cells to intervals (i,j), that signify the clock cycles the group is active for, 
 relative to the start of the given par block
============ Map for Component "main" ============
========Par Node ID: 1 ========
====Child/Thread ID: 2 ====
Id { id: "b" } -- [(1, 3), (12, 14), (23, 25), (38, 40), (49, 51), (60, 62)]
Id { id: "a" } -- [(1, 3), (12, 14), (23, 25), (38, 40), (49, 51), (60, 62)]
Id { id: "d" } -- [(34, 37), (71, 74)]
Id { id: "c" } -- [(4, 7), (8, 11), (15, 18), (19, 22), (26, 29), (30, 33), (41, 44), (45, 48), (52, 55), (56, 59), (63, 66), (67, 70)]

========Par Node ID: 6 ========
====Child/Thread ID: 7 ====
Id { id: "a" } -- [(1, 3)]
====Child/Thread ID: 8 ====
Id { id: "b" } -- [(1, 3)]


import "primitives/core.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    lt = std_lt(32);
    a = std_reg(32);
    b = std_reg(32);
    c = std_reg(32);
    d = std_reg(32);
    e = std_reg(32);
    f = std_reg(32);
    g = std_reg(32);
  }
  wires {
    static group A<3> {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static group B<3> {
      b.write_en = 1'd1;
      b.in = 32'd2;
    }
    static group C<4> {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static group D<4> {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static group E<4> {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static group F<4> {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static group G<4> {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
  }

  control {
    @NODE_ID(0) seq {
      @NODE_ID static par <74> {
        @NODE_ID(2) static repeat 2 
{
          @NODE_ID(3) static seq <37> {
            @NODE_ID(4) static repeat 3 
{
              @NODE_ID(5) static seq <11> {
                @NODE_ID(6) static par <3> {
                  @NODE_ID(7) A;
                  @NODE_ID(8) B;
                }
                @NODE_ID(9) static repeat 2 
{
                  @NODE_ID(10) C;
                }
              }
            }
            @NODE_ID(11) D;
          }
        }
      }
      @NODE_ID(12) static seq <12> {
        @NODE_ID(13) E;
        @NODE_ID(14) F;
        @NODE_ID(15) G;
      }
    }
  }
}
