import "primitives/core.futil";
import "primitives/memories/comb.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    lt = std_lt(32);
    a = std_reg(32);
    b = std_reg(32);
    c = std_reg(32);
    d = std_reg(32);
    e = std_reg(32);
    f = std_reg(32);
    g = std_reg(32);
  }
  wires {
    static<3> group A {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static<3> group B {
      b.write_en = 1'd1;
      b.in = 32'd2;
    }
    static<4> group C {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static<4> group D {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static<4> group E {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static<4> group F {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
    static<4> group G {
      a.write_en = 1'd1;
      a.in = 32'd2;
    }
  }
  control {
    @NODE_ID(0) seq {
      @NODE_ID static<74> par {
        @NODE_ID(2) static repeat 2 {
          @NODE_ID(3) static<37> seq  {
            @NODE_ID(4) static repeat 3 {
              @NODE_ID(5) static<11> seq  {
                @NODE_ID(6) static<3> par {
                  @NODE_ID(7) A;
                  @NODE_ID(8) B;
                }
                @NODE_ID(9) static repeat 2 {
                  @NODE_ID(10) C;
                }
              }
            }
            @NODE_ID(11) D;
          }
        }
      }
      @NODE_ID(12) static<12> seq  {
        @NODE_ID(13) E;
        @NODE_ID(14) F;
        @NODE_ID(15) G;
      }
    }
  }
}
---STDERR---
This maps ids of par blocks to " cell timing maps ", which map cells to intervals (i,j), that signify the clock cycles the group is active for, 
 relative to the start of the given par block
============ Map for Component "main" ============
========Par Node ID: 1 ========
====Child/Thread ID: 2 ====
Id { id: "b" } -- [(0, 3), (11, 14), (22, 25), (37, 40), (48, 51), (59, 62)]
Id { id: "a" } -- [(0, 3), (11, 14), (22, 25), (37, 40), (48, 51), (59, 62)]
Id { id: "d" } -- [(33, 37), (70, 74)]
Id { id: "c" } -- [(3, 7), (7, 11), (14, 18), (18, 22), (25, 29), (29, 33), (40, 44), (44, 48), (51, 55), (55, 59), (62, 66), (66, 70)]

========Par Node ID: 6 ========
====Child/Thread ID: 7 ====
Id { id: "a" } -- [(0, 3)]
====Child/Thread ID: 8 ====
Id { id: "b" } -- [(0, 3)]

