This maps ids of par blocks to " par timing maps ", which map group ids to intervals (i,j), that signify the clock cycles the group is active for, 
 relative to the start of the given par block
======== Map for Component "main" ========
====Par Node ID: 1====
Group Node ID: 7 -- [(1, 3), (12, 14), (23, 25), (38, 40), (49, 51), (60, 62)]
Group Node ID: 8 -- [(1, 3), (12, 14), (23, 25), (38, 40), (49, 51), (60, 62)]
Group Node ID: 10 -- [(4, 7), (8, 11), (15, 18), (19, 22), (26, 29), (30, 33), (41, 44), (45, 48), (52, 55), (56, 59), (63, 66), (67, 70)]
Group Node ID: 11 -- [(34, 37), (71, 74)]
====Par Node ID: 6====
Group Node ID: 7 -- [(1, 3)]
Group Node ID: 8 -- [(1, 3)]
}
import "primitives/core.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    lt = std_lt(32);
  }
  wires {
    group A {
    }
    group B {
    }
    group C {
    }
    group D {
    }
    group E {
    }
    group F {
    }
    group G {
    }
  }

  control {
    @NODE_ID(0) seq {
      @static(74) @NODE_ID par {
        @bound(2) @NODE_ID(2) while lt.out {
          @NODE_ID(3) seq {
            @bound(3) @NODE_ID(4) while lt.out {
              @static(11) @NODE_ID(5) seq {
                @static(3) @NODE_ID(6) par {
                  @static(3) @NODE_ID(7) A;
                  @static(3) @NODE_ID(8) B;
                }
                @bound(2) @NODE_ID(9) while lt.out {
                  @static(4) @NODE_ID(10) C;
                }
              }
            }
            @static(4) @NODE_ID(11) D;
          }
        }
      }
      @static(12) @NODE_ID(12) seq {
        @static(4) @NODE_ID(13) E;
        @static(4) @NODE_ID(14) F;
        @static(4) @NODE_ID(15) G;
      }
    }
  }
}
