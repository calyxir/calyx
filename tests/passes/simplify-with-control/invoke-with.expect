import "primitives/core.futil";
import "primitives/memories/comb.futil";
import "primitives/binary_operators.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    m = std_mult_pipe(32);
    a0 = std_add(32);
    a1 = std_add(32);
    r = std_reg(32);
    @generated comb_reg = std_reg(32);
    @generated comb_reg0 = std_reg(32);
  }
  wires {
    static<1> group do_adds0 {
      a0.left = 32'd1;
      a0.right = 32'd2;
      a1.left = 32'd3;
      a1.right = 32'd4;
      comb_reg.in = a0.out;
      comb_reg.write_en = 1'd1;
      comb_reg0.in = a1.out;
      comb_reg0.write_en = 1'd1;
    }
    comb group do_adds {
      a0.left = 32'd1;
      a0.right = 32'd2;
      a1.left = 32'd3;
      a1.right = 32'd4;
    }
  }
  control {
    seq {
      invoke m(
        left = a0.out,
        right = a1.out
      )() with do_adds;
      invoke m(
        left = r.out,
        right = a1.out
      )() with do_adds;
    }
  }
}
