import "primitives/std.lib";
component main() -> () {
  cells {
    A0_0 = prim std_mem_d2(32,8,8,4,4);
    A_int0_0 = prim std_mem_d2_ext(32,8,8,4,4);
    A_int_read0_0 = prim std_reg(32);
    A_read0_0 = prim std_reg(32);
    B0_0 = prim std_mem_d2(32,8,8,4,4);
    B_int0_0 = prim std_mem_d2_ext(32,8,8,4,4);
    B_int_read0_0 = prim std_reg(32);
    B_read0_0 = prim std_reg(32);
    C0_0 = prim std_mem_d2(32,8,8,4,4);
    C_i_j_0 = prim std_reg(32);
    C_int0_0 = prim std_mem_d2_ext(32,8,8,4,4);
    C_int_read0_0 = prim std_reg(32);
    C_sh_read0_0 = prim std_reg(32);
    add0 = prim std_add(4);
    add1 = prim std_add(4);
    add2 = prim std_add(4);
    add3 = prim std_add(32);
    add4 = prim std_add(4);
    add5 = prim std_add(4);
    add6 = prim std_add(4);
    add7 = prim std_add(4);
    add8 = prim std_add(4);
    alpha__0 = prim std_reg(32);
    alpha_int0 = prim std_mem_d1_ext(32,1,1);
    beta__0 = prim std_reg(32);
    beta_int0 = prim std_mem_d1_ext(32,1,1);
    bin_read0_0 = prim std_reg(32);
    bin_read1_0 = prim std_reg(32);
    bin_read2_0 = prim std_reg(32);
    const0 = prim std_const(1,0);
    const1 = prim std_const(1,0);
    const10 = prim std_const(4,0);
    const11 = prim std_const(4,0);
    const12 = prim std_const(4,1);
    const13 = prim std_const(4,1);
    const14 = prim std_const(4,0);
    const15 = prim std_const(4,7);
    const16 = prim std_const(4,0);
    const17 = prim std_const(4,7);
    const18 = prim std_const(4,1);
    const19 = prim std_const(4,0);
    const2 = prim std_const(4,0);
    const20 = prim std_const(4,7);
    const21 = prim std_const(4,0);
    const22 = prim std_const(4,7);
    const23 = prim std_const(4,1);
    const24 = prim std_const(4,1);
    const25 = prim std_const(4,1);
    const26 = prim std_const(4,0);
    const27 = prim std_const(4,7);
    const28 = prim std_const(4,0);
    const29 = prim std_const(4,7);
    const3 = prim std_const(4,7);
    const30 = prim std_const(4,0);
    const31 = prim std_const(4,0);
    const32 = prim std_const(4,1);
    const33 = prim std_const(4,1);
    const4 = prim std_const(4,0);
    const5 = prim std_const(4,7);
    const6 = prim std_const(4,0);
    const7 = prim std_const(4,0);
    const8 = prim std_const(4,0);
    const9 = prim std_const(4,0);
    i0 = prim std_reg(4);
    i1 = prim std_reg(4);
    i2 = prim std_reg(4);
    j0 = prim std_reg(4);
    j1 = prim std_reg(4);
    j2 = prim std_reg(4);
    j3 = prim std_reg(4);
    k0 = prim std_reg(4);
    le0 = prim std_le(4);
    le1 = prim std_le(4);
    le2 = prim std_le(4);
    le3 = prim std_le(4);
    le4 = prim std_le(4);
    le5 = prim std_le(4);
    le6 = prim std_le(4);
    le7 = prim std_le(4);
    mult_pipe0 = prim std_mult_pipe(32);
    mult_pipe1 = prim std_mult_pipe(32);
    mult_pipe2 = prim std_mult_pipe(32);
    rsh0 = prim std_rsh(4);
    rsh1 = prim std_rsh(4);
    rsh2 = prim std_rsh(4);
    rsh3 = prim std_rsh(4);
    rsh4 = prim std_rsh(4);
    rsh5 = prim std_rsh(4);
    rsh6 = prim std_rsh(4);
    rsh7 = prim std_rsh(4);
    v_0 = prim std_reg(32);
  }
  wires {
    group cond0<"static"=0> {
      cond0[done] = 1'd1;
      le0.left = i0.out;
      le0.right = const3.out;
    }
    group cond1<"static"=0> {
      cond1[done] = 1'd1;
      le1.left = j0.out;
      le1.right = const5.out;
    }
    group cond2<"static"=0> {
      cond2[done] = 1'd1;
      le2.left = i1.out;
      le2.right = const15.out;
    }
    group cond3<"static"=0> {
      cond3[done] = 1'd1;
      le3.left = j1.out;
      le3.right = const17.out;
    }
    group cond4<"static"=0> {
      cond4[done] = 1'd1;
      le4.left = j2.out;
      le4.right = const20.out;
    }
    group cond5<"static"=0> {
      cond5[done] = 1'd1;
      le5.left = k0.out;
      le5.right = const22.out;
    }
    group cond6<"static"=0> {
      cond6[done] = 1'd1;
      le6.left = i2.out;
      le6.right = const27.out;
    }
    group cond7<"static"=0> {
      cond7[done] = 1'd1;
      le7.left = j3.out;
      le7.right = const29.out;
    }
    group let0<"static"=1> {
      i0.in = const2.out;
      i0.write_en = 1'd1;
      let0[done] = i0.done;
    }
    group let1<"static"=1> {
      j0.in = const4.out;
      j0.write_en = 1'd1;
      let1[done] = j0.done;
    }
    group let10<"static"=1> {
      i2.in = const26.out;
      i2.write_en = 1'd1;
      let10[done] = i2.done;
    }
    group let11<"static"=1> {
      j3.in = const28.out;
      j3.write_en = 1'd1;
      let11[done] = j3.done;
    }
    group let2<"static"=1> {
      i1.in = const14.out;
      i1.write_en = 1'd1;
      let2[done] = i1.done;
    }
    group let3<"static"=1> {
      j1.in = const16.out;
      j1.write_en = 1'd1;
      let3[done] = j1.done;
    }
    group let4<"static"=4> {
      bin_read0_0.in = mult_pipe0.out;
      bin_read0_0.write_en = mult_pipe0.done;
      let4[done] = bin_read0_0.done;
      mult_pipe0.left = C_i_j_0.out;
      mult_pipe0.right = beta__0.out;
      mult_pipe0.go = !mult_pipe0.done ? 1'd1;
    }
    group let5<"static"=1> {
      j2.in = const19.out;
      j2.write_en = 1'd1;
      let5[done] = j2.done;
    }
    group let6<"static"=1> {
      k0.in = const21.out;
      k0.write_en = 1'd1;
      let6[done] = k0.done;
    }
    group let7<"static"=4> {
      bin_read1_0.in = mult_pipe1.out;
      bin_read1_0.write_en = mult_pipe1.done;
      let7[done] = bin_read1_0.done;
      mult_pipe1.left = alpha__0.out;
      mult_pipe1.right = A_read0_0.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
    }
    group let8<"static"=4> {
      bin_read2_0.in = mult_pipe2.out;
      bin_read2_0.write_en = mult_pipe2.done;
      let8[done] = bin_read2_0.done;
      mult_pipe2.left = bin_read1_0.out;
      mult_pipe2.right = B_read0_0.out;
      mult_pipe2.go = !mult_pipe2.done ? 1'd1;
    }
    group let9<"static"=1> {
      v_0.in = bin_read2_0.out;
      v_0.write_en = 1'd1;
      let9[done] = v_0.done;
    }
    group upd0<"static"=1> {
      alpha__0.write_en = 1'd1;
      alpha_int0.addr0 = const0.out;
      alpha__0.in = 1'd1 ? alpha_int0.read_data;
      upd0[done] = alpha__0.done ? 1'd1;
    }
    group upd1<"static"=1> {
      beta__0.write_en = 1'd1;
      beta_int0.addr0 = const1.out;
      beta__0.in = 1'd1 ? beta_int0.read_data;
      upd1[done] = beta__0.done ? 1'd1;
    }
    group upd10<"static"=1> {
      C_i_j_0.write_en = 1'd1;
      C0_0.addr1 = j1.out;
      C0_0.addr0 = i1.out;
      C_i_j_0.in = 1'd1 ? C0_0.read_data;
      upd10[done] = C_i_j_0.done ? 1'd1;
    }
    group upd11<"static"=1> {
      C0_0.addr1 = j1.out;
      C0_0.addr0 = i1.out;
      C0_0.write_en = 1'd1;
      C0_0.write_data = 1'd1 ? bin_read0_0.out;
      upd11[done] = C0_0.done ? 1'd1;
    }
    group upd12<"static"=1> {
      j1.write_en = 1'd1;
      add2.left = j1.out;
      add2.right = const18.out;
      j1.in = 1'd1 ? add2.out;
      upd12[done] = j1.done ? 1'd1;
    }
    group upd13<"static"=1> {
      A_read0_0.write_en = 1'd1;
      A0_0.addr1 = k0.out;
      A0_0.addr0 = i1.out;
      A_read0_0.in = 1'd1 ? A0_0.read_data;
      upd13[done] = A_read0_0.done ? 1'd1;
    }
    group upd14<"static"=1> {
      B_read0_0.write_en = 1'd1;
      B0_0.addr1 = j2.out;
      B0_0.addr0 = k0.out;
      B_read0_0.in = 1'd1 ? B0_0.read_data;
      upd14[done] = B_read0_0.done ? 1'd1;
    }
    group upd15<"static"=1> {
      C0_0.addr1 = j2.out;
      C0_0.addr0 = i1.out;
      C0_0.write_en = 1'd1;
      add3.left = C0_0.read_data;
      add3.right = v_0.out;
      C0_0.addr1 = j2.out;
      C0_0.addr0 = i1.out;
      C0_0.write_data = 1'd1 ? add3.out;
      upd15[done] = C0_0.done ? 1'd1;
    }
    group upd16<"static"=1> {
      k0.write_en = 1'd1;
      add4.left = k0.out;
      add4.right = const23.out;
      k0.in = 1'd1 ? add4.out;
      upd16[done] = k0.done ? 1'd1;
    }
    group upd17<"static"=1> {
      j2.write_en = 1'd1;
      add5.left = j2.out;
      add5.right = const24.out;
      j2.in = 1'd1 ? add5.out;
      upd17[done] = j2.done ? 1'd1;
    }
    group upd18<"static"=1> {
      i1.write_en = 1'd1;
      add6.left = i1.out;
      add6.right = const25.out;
      i1.in = 1'd1 ? add6.out;
      upd18[done] = i1.done ? 1'd1;
    }
    group upd19<"static"=1> {
      C_sh_read0_0.write_en = 1'd1;
      C0_0.addr1 = rsh7.out;
      rsh7.left = j3.out;
      rsh7.right = const31.out;
      C0_0.addr0 = rsh6.out;
      rsh6.left = i2.out;
      rsh6.right = const30.out;
      C_sh_read0_0.in = 1'd1 ? C0_0.read_data;
      upd19[done] = C_sh_read0_0.done ? 1'd1;
    }
    group upd2<"static"=1> {
      A_int_read0_0.write_en = 1'd1;
      A_int0_0.addr1 = j0.out;
      A_int0_0.addr0 = i0.out;
      A_int_read0_0.in = 1'd1 ? A_int0_0.read_data;
      upd2[done] = A_int_read0_0.done ? 1'd1;
    }
    group upd20<"static"=1> {
      C_int0_0.addr1 = j3.out;
      C_int0_0.addr0 = i2.out;
      C_int0_0.write_en = 1'd1;
      C_int0_0.write_data = 1'd1 ? C_sh_read0_0.out;
      upd20[done] = C_int0_0.done ? 1'd1;
    }
    group upd21<"static"=1> {
      j3.write_en = 1'd1;
      add7.left = j3.out;
      add7.right = const32.out;
      j3.in = 1'd1 ? add7.out;
      upd21[done] = j3.done ? 1'd1;
    }
    group upd22<"static"=1> {
      i2.write_en = 1'd1;
      add8.left = i2.out;
      add8.right = const33.out;
      i2.in = 1'd1 ? add8.out;
      upd22[done] = i2.done ? 1'd1;
    }
    group upd3<"static"=1> {
      A0_0.addr1 = rsh1.out;
      rsh1.left = j0.out;
      rsh1.right = const7.out;
      A0_0.addr0 = rsh0.out;
      rsh0.left = i0.out;
      rsh0.right = const6.out;
      A0_0.write_en = 1'd1;
      A0_0.write_data = 1'd1 ? A_int_read0_0.out;
      upd3[done] = A0_0.done ? 1'd1;
    }
    group upd4<"static"=1> {
      B_int_read0_0.write_en = 1'd1;
      B_int0_0.addr1 = j0.out;
      B_int0_0.addr0 = i0.out;
      B_int_read0_0.in = 1'd1 ? B_int0_0.read_data;
      upd4[done] = B_int_read0_0.done ? 1'd1;
    }
    group upd5<"static"=1> {
      B0_0.addr1 = rsh3.out;
      rsh3.left = j0.out;
      rsh3.right = const9.out;
      B0_0.addr0 = rsh2.out;
      rsh2.left = i0.out;
      rsh2.right = const8.out;
      B0_0.write_en = 1'd1;
      B0_0.write_data = 1'd1 ? B_int_read0_0.out;
      upd5[done] = B0_0.done ? 1'd1;
    }
    group upd6<"static"=1> {
      C_int_read0_0.write_en = 1'd1;
      C_int0_0.addr1 = j0.out;
      C_int0_0.addr0 = i0.out;
      C_int_read0_0.in = 1'd1 ? C_int0_0.read_data;
      upd6[done] = C_int_read0_0.done ? 1'd1;
    }
    group upd7<"static"=1> {
      C0_0.addr1 = rsh5.out;
      rsh5.left = j0.out;
      rsh5.right = const11.out;
      C0_0.addr0 = rsh4.out;
      rsh4.left = i0.out;
      rsh4.right = const10.out;
      C0_0.write_en = 1'd1;
      C0_0.write_data = 1'd1 ? C_int_read0_0.out;
      upd7[done] = C0_0.done ? 1'd1;
    }
    group upd8<"static"=1> {
      j0.write_en = 1'd1;
      add0.left = j0.out;
      add0.right = const12.out;
      j0.in = 1'd1 ? add0.out;
      upd8[done] = j0.done ? 1'd1;
    }
    group upd9<"static"=1> {
      i0.write_en = 1'd1;
      add1.left = i0.out;
      add1.right = const13.out;
      i0.in = 1'd1 ? add1.out;
      upd9[done] = i0.done ? 1'd1;
    }
  }
  control {
    seq {
      par {
        upd0;
        upd1;
        seq {
          let0;
          while le0.out with cond0 {
            seq {
              let1;
              while le1.out with cond1 {
                seq {
                  upd2;
                  par {
                    upd3;
                    upd4;
                  }
                  par {
                    upd5;
                    upd6;
                  }
                  upd7;
                  upd8;
                }
              }
              upd9;
            }
          }
        }
      }
      let2;
      while le2.out with cond2 {
        seq {
          let3;
          while le3.out with cond3 {
            seq {
              upd10;
              let4;
              upd11;
              upd12;
            }
          }
          let5;
          while le4.out with cond4 {
            seq {
              let6;
              while le5.out with cond5 {
                seq {
                  par {
                    upd13;
                    upd14;
                  }
                  let7;
                  let8;
                  let9;
                  upd15;
                  upd16;
                }
              }
              upd17;
            }
          }
          upd18;
        }
      }
      let10;
      while le6.out with cond6 {
        seq {
          let11;
          while le7.out with cond7 {
            seq {
              upd19;
              upd20;
              upd21;
            }
          }
          upd22;
        }
      }
    }
  }
}
