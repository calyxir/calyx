import "primitives/std.lib";
component main() -> () {
  cells {
    A_i_j_0 = prim std_reg(32);
    A_i_j_1 = prim std_reg(32);
    A_i_j_2 = prim std_reg(32);
    A_i_k_0 = prim std_reg(32);
    A_i_k_1 = prim std_reg(32);
    A_int0_0 = prim std_mem_d2_ext(32,8,8,4,4);
    A_j_j_0 = prim std_reg(32);
    A_k_j_0 = prim std_reg(32);
    A_k_j_1 = prim std_reg(32);
    add0 = prim std_add(4);
    add1 = prim std_add(4);
    add2 = prim std_add(4);
    add3 = prim std_add(4);
    add4 = prim std_add(4);
    bin_read0_0 = prim std_reg(32);
    bin_read1_0 = prim std_reg(32);
    bin_read2_0 = prim std_reg(32);
    const0 = prim std_const(4,0);
    const1 = prim std_const(4,7);
    const10 = prim std_const(4,1);
    const2 = prim std_const(4,0);
    const3 = prim std_const(4,0);
    const4 = prim std_const(4,1);
    const5 = prim std_const(4,1);
    const6 = prim std_const(4,8);
    const7 = prim std_const(4,0);
    const8 = prim std_const(4,1);
    const9 = prim std_const(4,1);
    div_pipe0 = prim std_div_pipe(32);
    i0 = prim std_reg(4);
    j_0 = prim std_reg(4);
    k_0 = prim std_reg(4);
    k_1 = prim std_reg(4);
    le0 = prim std_le(4);
    lt0 = prim std_lt(4);
    lt1 = prim std_lt(4);
    lt2 = prim std_lt(4);
    lt3 = prim std_lt(4);
    mult_pipe0 = prim std_mult_pipe(32);
    mult_pipe1 = prim std_mult_pipe(32);
    sub0 = prim std_sub(32);
    sub1 = prim std_sub(32);
  }
  wires {
    group cond0<"static"=0> {
      cond0[done] = 1'd1;
      le0.left = i0.out;
      le0.right = const1.out;
    }
    group cond1<"static"=0> {
      cond1[done] = 1'd1;
      lt0.left = j_0.out;
      lt0.right = i0.out;
    }
    group cond2<"static"=0> {
      cond2[done] = 1'd1;
      lt1.left = k_0.out;
      lt1.right = j_0.out;
    }
    group cond3<"static"=0> {
      cond3[done] = 1'd1;
      lt2.left = j_0.out;
      lt2.right = const6.out;
    }
    group cond4<"static"=0> {
      cond4[done] = 1'd1;
      lt3.left = k_1.out;
      lt3.right = i0.out;
    }
    group let0<"static"=1> {
      i0.in = const0.out;
      i0.write_en = 1'd1;
      let0[done] = i0.done;
    }
    group let1<"static"=1> {
      j_0.in = const2.out;
      j_0.write_en = 1'd1;
      let1[done] = j_0.done;
    }
    group let2<"static"=1> {
      k_0.in = const3.out;
      k_0.write_en = 1'd1;
      let2[done] = k_0.done;
    }
    group let3<"static"=4> {
      bin_read0_0.in = mult_pipe0.out;
      bin_read0_0.write_en = mult_pipe0.done;
      let3[done] = bin_read0_0.done;
      mult_pipe0.left = A_i_k_0.out;
      mult_pipe0.right = A_k_j_0.out;
      mult_pipe0.go = !mult_pipe0.done ? 1'd1;
    }
    group let4 {
      bin_read1_0.in = div_pipe0.out;
      bin_read1_0.write_en = div_pipe0.done;
      let4[done] = bin_read1_0.done;
      div_pipe0.left = A_i_j_1.out;
      div_pipe0.right = A_j_j_0.out;
      div_pipe0.go = !div_pipe0.done ? 1'd1;
    }
    group let5<"static"=1> {
      k_1.in = const7.out;
      k_1.write_en = 1'd1;
      let5[done] = k_1.done;
    }
    group let6<"static"=4> {
      bin_read2_0.in = mult_pipe1.out;
      bin_read2_0.write_en = mult_pipe1.done;
      let6[done] = bin_read2_0.done;
      mult_pipe1.left = A_i_k_1.out;
      mult_pipe1.right = A_k_j_1.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
    }
    group upd0<"static"=1> {
      A_i_j_0.write_en = 1'd1;
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = i0.out;
      A_i_j_0.in = 1'd1 ? A_int0_0.read_data;
      upd0[done] = A_i_j_0.done ? 1'd1;
    }
    group upd1<"static"=1> {
      A_i_k_0.write_en = 1'd1;
      A_int0_0.addr1 = k_0.out;
      A_int0_0.addr0 = i0.out;
      A_i_k_0.in = 1'd1 ? A_int0_0.read_data;
      upd1[done] = A_i_k_0.done ? 1'd1;
    }
    group upd10<"static"=1> {
      A_i_j_2.write_en = 1'd1;
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = i0.out;
      A_i_j_2.in = 1'd1 ? A_int0_0.read_data;
      upd10[done] = A_i_j_2.done ? 1'd1;
    }
    group upd11<"static"=1> {
      A_i_k_1.write_en = 1'd1;
      A_int0_0.addr1 = k_1.out;
      A_int0_0.addr0 = i0.out;
      A_i_k_1.in = 1'd1 ? A_int0_0.read_data;
      upd11[done] = A_i_k_1.done ? 1'd1;
    }
    group upd12<"static"=1> {
      A_k_j_1.write_en = 1'd1;
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = k_1.out;
      A_k_j_1.in = 1'd1 ? A_int0_0.read_data;
      upd12[done] = A_k_j_1.done ? 1'd1;
    }
    group upd13<"static"=1> {
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = i0.out;
      A_int0_0.write_en = 1'd1;
      sub1.left = A_i_j_2.out;
      sub1.right = bin_read2_0.out;
      A_int0_0.write_data = 1'd1 ? sub1.out;
      upd13[done] = A_int0_0.done ? 1'd1;
    }
    group upd14<"static"=1> {
      k_1.write_en = 1'd1;
      add2.left = k_1.out;
      add2.right = const8.out;
      k_1.in = 1'd1 ? add2.out;
      upd14[done] = k_1.done ? 1'd1;
    }
    group upd15<"static"=1> {
      j_0.write_en = 1'd1;
      add3.left = j_0.out;
      add3.right = const9.out;
      j_0.in = 1'd1 ? add3.out;
      upd15[done] = j_0.done ? 1'd1;
    }
    group upd16<"static"=1> {
      i0.write_en = 1'd1;
      add4.left = i0.out;
      add4.right = const10.out;
      i0.in = 1'd1 ? add4.out;
      upd16[done] = i0.done ? 1'd1;
    }
    group upd2<"static"=1> {
      A_k_j_0.write_en = 1'd1;
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = k_0.out;
      A_k_j_0.in = 1'd1 ? A_int0_0.read_data;
      upd2[done] = A_k_j_0.done ? 1'd1;
    }
    group upd3<"static"=1> {
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = i0.out;
      A_int0_0.write_en = 1'd1;
      sub0.left = A_i_j_0.out;
      sub0.right = bin_read0_0.out;
      A_int0_0.write_data = 1'd1 ? sub0.out;
      upd3[done] = A_int0_0.done ? 1'd1;
    }
    group upd4<"static"=1> {
      k_0.write_en = 1'd1;
      add0.left = k_0.out;
      add0.right = const4.out;
      k_0.in = 1'd1 ? add0.out;
      upd4[done] = k_0.done ? 1'd1;
    }
    group upd5<"static"=1> {
      A_i_j_1.write_en = 1'd1;
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = i0.out;
      A_i_j_1.in = 1'd1 ? A_int0_0.read_data;
      upd5[done] = A_i_j_1.done ? 1'd1;
    }
    group upd6<"static"=1> {
      A_j_j_0.write_en = 1'd1;
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = j_0.out;
      A_j_j_0.in = 1'd1 ? A_int0_0.read_data;
      upd6[done] = A_j_j_0.done ? 1'd1;
    }
    group upd7<"static"=1> {
      A_int0_0.addr1 = j_0.out;
      A_int0_0.addr0 = i0.out;
      A_int0_0.write_en = 1'd1;
      A_int0_0.write_data = 1'd1 ? bin_read1_0.out;
      upd7[done] = A_int0_0.done ? 1'd1;
    }
    group upd8<"static"=1> {
      j_0.write_en = 1'd1;
      add1.left = j_0.out;
      add1.right = const5.out;
      j_0.in = 1'd1 ? add1.out;
      upd8[done] = j_0.done ? 1'd1;
    }
    group upd9<"static"=1> {
      j_0.write_en = 1'd1;
      j_0.in = 1'd1 ? i0.out;
      upd9[done] = j_0.done ? 1'd1;
    }
  }
  control {
    seq {
      let0;
      while le0.out with cond0 {
        seq {
          let1;
          while lt0.out with cond1 {
            seq {
              let2;
              while lt1.out with cond2 {
                seq {
                  upd0;
                  upd1;
                  upd2;
                  par {
                    seq {
                      let3;
                      upd3;
                    }
                    upd4;
                  }
                }
              }
              upd5;
              upd6;
              let4;
              upd7;
              upd8;
            }
          }
          upd9;
          while lt2.out with cond3 {
            seq {
              let5;
              while lt3.out with cond4 {
                seq {
                  upd10;
                  upd11;
                  upd12;
                  par {
                    seq {
                      let6;
                      upd13;
                    }
                    upd14;
                  }
                }
              }
              upd15;
            }
          }
          upd16;
        }
      }
    }
  }
}
