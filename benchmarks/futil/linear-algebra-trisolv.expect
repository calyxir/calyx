import "primitives/std.lib";
component main() -> () {
  cells {
    L_int0_0 = prim std_mem_d2_ext(32,8,8,4,4);
    L_int_read0_0 = prim std_reg(32);
    L_int_read1_0 = prim std_reg(32);
    add0 = prim std_add(4);
    add1 = prim std_add(4);
    b_int0 = prim std_mem_d1_ext(32,8,4);
    b_int_read0_0 = prim std_reg(32);
    bin_read0_0 = prim std_reg(32);
    bin_read1_0 = prim std_reg(32);
    const0 = prim std_const(4,0);
    const1 = prim std_const(4,7);
    const2 = prim std_const(4,0);
    const3 = prim std_const(4,1);
    const4 = prim std_const(4,1);
    div_pipe0 = prim std_div_pipe(32);
    i0 = prim std_reg(4);
    j_0 = prim std_reg(4);
    le0 = prim std_le(4);
    lt0 = prim std_lt(4);
    mult_pipe0 = prim std_mult_pipe(32);
    x_i_0 = prim std_reg(32);
    x_int0 = prim std_mem_d1_ext(32,8,4);
    x_j_0 = prim std_reg(32);
  }
  wires {
    group cond0<"static"=0> {
      cond0[done] = 1'd1;
      le0.left = i0.out;
      le0.right = const1.out;
    }
    group cond1<"static"=0> {
      cond1[done] = 1'd1;
      lt0.left = j_0.out;
      lt0.right = i0.out;
    }
    group let0<"static"=1> {
      i0.in = const0.out;
      i0.write_en = 1'd1;
      let0[done] = i0.done;
    }
    group let1<"static"=1> {
      j_0.in = const2.out;
      j_0.write_en = 1'd1;
      let1[done] = j_0.done;
    }
    group let2<"static"=4> {
      bin_read0_0.in = mult_pipe0.out;
      bin_read0_0.write_en = mult_pipe0.done;
      let2[done] = bin_read0_0.done;
      mult_pipe0.left = L_int_read0_0.out;
      mult_pipe0.right = x_j_0.out;
      mult_pipe0.go = !mult_pipe0.done ? 1'd1;
    }
    group let3 {
      bin_read1_0.in = div_pipe0.out;
      bin_read1_0.write_en = div_pipe0.done;
      let3[done] = bin_read1_0.done;
      div_pipe0.left = x_i_0.out;
      div_pipe0.right = L_int_read1_0.out;
      div_pipe0.go = !div_pipe0.done ? 1'd1;
    }
    group upd0<"static"=1> {
      b_int_read0_0.write_en = 1'd1;
      b_int0.addr0 = i0.out;
      b_int_read0_0.in = 1'd1 ? b_int0.read_data;
      upd0[done] = b_int_read0_0.done ? 1'd1;
    }
    group upd1<"static"=1> {
      x_int0.addr0 = i0.out;
      x_int0.write_en = 1'd1;
      x_int0.write_data = 1'd1 ? b_int_read0_0.out;
      upd1[done] = x_int0.done ? 1'd1;
    }
    group upd2<"static"=1> {
      x_j_0.write_en = 1'd1;
      x_int0.addr0 = j_0.out;
      x_j_0.in = 1'd1 ? x_int0.read_data;
      upd2[done] = x_j_0.done ? 1'd1;
    }
    group upd3<"static"=1> {
      L_int_read0_0.write_en = 1'd1;
      L_int0_0.addr1 = j_0.out;
      L_int0_0.addr0 = i0.out;
      L_int_read0_0.in = 1'd1 ? L_int0_0.read_data;
      upd3[done] = L_int_read0_0.done ? 1'd1;
    }
    group upd4<"static"=1> {
      x_int0.addr0 = i0.out;
      x_int0.write_en = 1'd1;
      x_int0.write_data = 1'd1 ? bin_read0_0.out;
      upd4[done] = x_int0.done ? 1'd1;
    }
    group upd5<"static"=1> {
      j_0.write_en = 1'd1;
      add0.left = j_0.out;
      add0.right = const3.out;
      j_0.in = 1'd1 ? add0.out;
      upd5[done] = j_0.done ? 1'd1;
    }
    group upd6<"static"=1> {
      x_i_0.write_en = 1'd1;
      x_int0.addr0 = i0.out;
      x_i_0.in = 1'd1 ? x_int0.read_data;
      upd6[done] = x_i_0.done ? 1'd1;
    }
    group upd7<"static"=1> {
      L_int_read1_0.write_en = 1'd1;
      L_int0_0.addr1 = i0.out;
      L_int0_0.addr0 = i0.out;
      L_int_read1_0.in = 1'd1 ? L_int0_0.read_data;
      upd7[done] = L_int_read1_0.done ? 1'd1;
    }
    group upd8<"static"=1> {
      x_int0.addr0 = i0.out;
      x_int0.write_en = 1'd1;
      x_int0.write_data = 1'd1 ? bin_read1_0.out;
      upd8[done] = x_int0.done ? 1'd1;
    }
    group upd9<"static"=1> {
      i0.write_en = 1'd1;
      add1.left = i0.out;
      add1.right = const4.out;
      i0.in = 1'd1 ? add1.out;
      upd9[done] = i0.done ? 1'd1;
    }
  }
  control {
    seq {
      let0;
      while le0.out with cond0 {
        seq {
          upd0;
          upd1;
          let1;
          while lt0.out with cond1 {
            seq {
              upd2;
              upd3;
              par {
                seq {
                  let2;
                  upd4;
                }
                upd5;
              }
            }
          }
          upd6;
          upd7;
          let3;
          upd8;
          upd9;
        }
      }
    }
  }
}
