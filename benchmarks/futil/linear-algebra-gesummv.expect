import "primitives/std.lib";
component main() -> () {
  cells {
    A0_0 = prim std_mem_d2(32,8,8,4,4);
    A_int0_0 = prim std_mem_d2_ext(32,8,8,4,4);
    A_int_read0_0 = prim std_reg(32);
    A_read0_0 = prim std_reg(32);
    A_sh_read0_0 = prim std_reg(32);
    B0_0 = prim std_mem_d2(32,8,8,4,4);
    B_int0_0 = prim std_mem_d2_ext(32,8,8,4,4);
    B_int_read0_0 = prim std_reg(32);
    B_read0_0 = prim std_reg(32);
    B_sh_read0_0 = prim std_reg(32);
    add0 = prim std_add(4);
    add1 = prim std_add(4);
    add2 = prim std_add(32);
    add3 = prim std_add(32);
    add4 = prim std_add(4);
    add5 = prim std_add(32);
    add6 = prim std_add(4);
    add7 = prim std_add(4);
    add8 = prim std_add(4);
    alpha__0 = prim std_reg(32);
    alpha_int0 = prim std_mem_d1_ext(32,1,1);
    beta__0 = prim std_reg(32);
    beta_int0 = prim std_mem_d1_ext(32,1,1);
    bin_read0_0 = prim std_reg(32);
    bin_read1_0 = prim std_reg(32);
    bin_read2_0 = prim std_reg(32);
    bin_read3_0 = prim std_reg(32);
    const0 = prim std_const(1,0);
    const1 = prim std_const(1,0);
    const10 = prim std_const(4,0);
    const11 = prim std_const(4,0);
    const12 = prim std_const(4,0);
    const13 = prim std_const(4,1);
    const14 = prim std_const(4,1);
    const15 = prim std_const(4,0);
    const16 = prim std_const(4,7);
    const17 = prim std_const(32,0);
    const18 = prim std_const(32,0);
    const19 = prim std_const(4,0);
    const2 = prim std_const(4,0);
    const20 = prim std_const(4,7);
    const21 = prim std_const(4,1);
    const22 = prim std_const(4,1);
    const23 = prim std_const(4,0);
    const24 = prim std_const(4,7);
    const25 = prim std_const(4,0);
    const26 = prim std_const(4,0);
    const27 = prim std_const(4,0);
    const28 = prim std_const(4,0);
    const29 = prim std_const(4,7);
    const3 = prim std_const(4,7);
    const30 = prim std_const(4,0);
    const31 = prim std_const(4,0);
    const32 = prim std_const(4,0);
    const33 = prim std_const(4,0);
    const34 = prim std_const(4,1);
    const35 = prim std_const(4,1);
    const4 = prim std_const(4,0);
    const5 = prim std_const(4,0);
    const6 = prim std_const(4,0);
    const7 = prim std_const(4,0);
    const8 = prim std_const(4,7);
    const9 = prim std_const(4,0);
    i0 = prim std_reg(4);
    i00 = prim std_reg(4);
    i01 = prim std_reg(4);
    j0 = prim std_reg(4);
    j00 = prim std_reg(4);
    j01 = prim std_reg(4);
    le0 = prim std_le(4);
    le1 = prim std_le(4);
    le2 = prim std_le(4);
    le3 = prim std_le(4);
    le4 = prim std_le(4);
    le5 = prim std_le(4);
    mult_pipe0 = prim std_mult_pipe(32);
    mult_pipe1 = prim std_mult_pipe(32);
    mult_pipe2 = prim std_mult_pipe(32);
    mult_pipe3 = prim std_mult_pipe(32);
    rsh0 = prim std_rsh(4);
    rsh1 = prim std_rsh(4);
    rsh10 = prim std_rsh(4);
    rsh11 = prim std_rsh(4);
    rsh12 = prim std_rsh(4);
    rsh13 = prim std_rsh(4);
    rsh2 = prim std_rsh(4);
    rsh3 = prim std_rsh(4);
    rsh4 = prim std_rsh(4);
    rsh5 = prim std_rsh(4);
    rsh6 = prim std_rsh(4);
    rsh7 = prim std_rsh(4);
    rsh8 = prim std_rsh(4);
    rsh9 = prim std_rsh(4);
    t1_0 = prim std_reg(32);
    t2_0 = prim std_reg(32);
    tmp0 = prim std_mem_d1(32,8,4);
    tmp_int0 = prim std_mem_d1_ext(32,8,4);
    tmp_int_read0_0 = prim std_reg(32);
    tmp_read0_0 = prim std_reg(32);
    tmp_sh_read0_0 = prim std_reg(32);
    x0 = prim std_mem_d1(32,8,4);
    x_int0 = prim std_mem_d1_ext(32,8,4);
    x_int_read0_0 = prim std_reg(32);
    x_read0_0 = prim std_reg(32);
    x_read1_0 = prim std_reg(32);
    x_sh_read0_0 = prim std_reg(32);
    y0 = prim std_mem_d1(32,8,4);
    y_i_0 = prim std_reg(32);
    y_int0 = prim std_mem_d1_ext(32,8,4);
    y_int_read0_0 = prim std_reg(32);
    y_sh_read0_0 = prim std_reg(32);
  }
  wires {
    group cond0<"static"=0> {
      cond0[done] = 1'd1;
      le0.left = i00.out;
      le0.right = const3.out;
    }
    group cond1<"static"=0> {
      cond1[done] = 1'd1;
      le1.left = j00.out;
      le1.right = const8.out;
    }
    group cond2<"static"=0> {
      cond2[done] = 1'd1;
      le2.left = i0.out;
      le2.right = const16.out;
    }
    group cond3<"static"=0> {
      cond3[done] = 1'd1;
      le3.left = j0.out;
      le3.right = const20.out;
    }
    group cond4<"static"=0> {
      cond4[done] = 1'd1;
      le4.left = i01.out;
      le4.right = const24.out;
    }
    group cond5<"static"=0> {
      cond5[done] = 1'd1;
      le5.left = j01.out;
      le5.right = const29.out;
    }
    group let0<"static"=1> {
      i00.in = const2.out;
      i00.write_en = 1'd1;
      let0[done] = i00.done;
    }
    group let1<"static"=1> {
      j00.in = const7.out;
      j00.write_en = 1'd1;
      let1[done] = j00.done;
    }
    group let10<"static"=1> {
      i01.in = const23.out;
      i01.write_en = 1'd1;
      let10[done] = i01.done;
    }
    group let11<"static"=1> {
      j01.in = const28.out;
      j01.write_en = 1'd1;
      let11[done] = j01.done;
    }
    group let2<"static"=1> {
      i0.in = const15.out;
      i0.write_en = 1'd1;
      let2[done] = i0.done;
    }
    group let3<"static"=1> {
      j0.in = const19.out;
      j0.write_en = 1'd1;
      let3[done] = j0.done;
    }
    group let4<"static"=4> {
      bin_read0_0.in = mult_pipe0.out;
      bin_read0_0.write_en = mult_pipe0.done;
      let4[done] = bin_read0_0.done;
      mult_pipe0.left = A_read0_0.out;
      mult_pipe0.right = x_read0_0.out;
      mult_pipe0.go = !mult_pipe0.done ? 1'd1;
    }
    group let5<"static"=1> {
      t1_0.in = bin_read0_0.out;
      t1_0.write_en = 1'd1;
      let5[done] = t1_0.done;
    }
    group let6<"static"=4> {
      bin_read1_0.in = mult_pipe1.out;
      bin_read1_0.write_en = mult_pipe1.done;
      let6[done] = bin_read1_0.done;
      mult_pipe1.left = B_read0_0.out;
      mult_pipe1.right = x_read1_0.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
    }
    group let7<"static"=1> {
      t2_0.in = bin_read1_0.out;
      t2_0.write_en = 1'd1;
      let7[done] = t2_0.done;
    }
    group let8<"static"=4> {
      bin_read2_0.in = mult_pipe2.out;
      bin_read2_0.write_en = mult_pipe2.done;
      let8[done] = bin_read2_0.done;
      mult_pipe2.left = alpha__0.out;
      mult_pipe2.right = tmp_read0_0.out;
      mult_pipe2.go = !mult_pipe2.done ? 1'd1;
    }
    group let9<"static"=4> {
      bin_read3_0.in = mult_pipe3.out;
      bin_read3_0.write_en = mult_pipe3.done;
      let9[done] = bin_read3_0.done;
      mult_pipe3.left = beta__0.out;
      mult_pipe3.right = y_i_0.out;
      mult_pipe3.go = !mult_pipe3.done ? 1'd1;
    }
    group upd0<"static"=1> {
      alpha__0.write_en = 1'd1;
      alpha_int0.addr0 = const0.out;
      alpha__0.in = 1'd1 ? alpha_int0.read_data;
      upd0[done] = alpha__0.done ? 1'd1;
    }
    group upd1<"static"=1> {
      beta__0.write_en = 1'd1;
      beta_int0.addr0 = const1.out;
      beta__0.in = 1'd1 ? beta_int0.read_data;
      upd1[done] = beta__0.done ? 1'd1;
    }
    group upd10<"static"=1> {
      B_int_read0_0.write_en = 1'd1;
      B_int0_0.addr1 = j00.out;
      B_int0_0.addr0 = i00.out;
      B_int_read0_0.in = 1'd1 ? B_int0_0.read_data;
      upd10[done] = B_int_read0_0.done ? 1'd1;
    }
    group upd11<"static"=1> {
      B0_0.addr1 = rsh6.out;
      rsh6.left = j00.out;
      rsh6.right = const12.out;
      B0_0.addr0 = rsh5.out;
      rsh5.left = i00.out;
      rsh5.right = const11.out;
      B0_0.write_en = 1'd1;
      B0_0.write_data = 1'd1 ? B_int_read0_0.out;
      upd11[done] = B0_0.done ? 1'd1;
    }
    group upd12<"static"=1> {
      j00.write_en = 1'd1;
      add0.left = j00.out;
      add0.right = const13.out;
      j00.in = 1'd1 ? add0.out;
      upd12[done] = j00.done ? 1'd1;
    }
    group upd13<"static"=1> {
      i00.write_en = 1'd1;
      add1.left = i00.out;
      add1.right = const14.out;
      i00.in = 1'd1 ? add1.out;
      upd13[done] = i00.done ? 1'd1;
    }
    group upd14<"static"=1> {
      tmp0.addr0 = i0.out;
      tmp0.write_en = 1'd1;
      tmp0.write_data = 1'd1 ? const17.out;
      upd14[done] = tmp0.done ? 1'd1;
    }
    group upd15<"static"=1> {
      y0.addr0 = i0.out;
      y0.write_en = 1'd1;
      y0.write_data = 1'd1 ? const18.out;
      upd15[done] = y0.done ? 1'd1;
    }
    group upd16<"static"=1> {
      A_read0_0.write_en = 1'd1;
      A0_0.addr1 = j0.out;
      A0_0.addr0 = i0.out;
      A_read0_0.in = 1'd1 ? A0_0.read_data;
      upd16[done] = A_read0_0.done ? 1'd1;
    }
    group upd17<"static"=1> {
      x_read0_0.write_en = 1'd1;
      x0.addr0 = j0.out;
      x_read0_0.in = 1'd1 ? x0.read_data;
      upd17[done] = x_read0_0.done ? 1'd1;
    }
    group upd18<"static"=1> {
      B_read0_0.write_en = 1'd1;
      B0_0.addr1 = j0.out;
      B0_0.addr0 = i0.out;
      B_read0_0.in = 1'd1 ? B0_0.read_data;
      upd18[done] = B_read0_0.done ? 1'd1;
    }
    group upd19<"static"=1> {
      x_read1_0.write_en = 1'd1;
      x0.addr0 = j0.out;
      x_read1_0.in = 1'd1 ? x0.read_data;
      upd19[done] = x_read1_0.done ? 1'd1;
    }
    group upd2<"static"=1> {
      tmp_int_read0_0.write_en = 1'd1;
      tmp_int0.addr0 = i00.out;
      tmp_int_read0_0.in = 1'd1 ? tmp_int0.read_data;
      upd2[done] = tmp_int_read0_0.done ? 1'd1;
    }
    group upd20<"static"=1> {
      tmp0.addr0 = i0.out;
      tmp0.write_en = 1'd1;
      add2.left = tmp0.read_data;
      add2.right = t1_0.out;
      tmp0.addr0 = i0.out;
      tmp0.write_data = 1'd1 ? add2.out;
      upd20[done] = tmp0.done ? 1'd1;
    }
    group upd21<"static"=1> {
      y0.addr0 = i0.out;
      y0.write_en = 1'd1;
      add3.left = y0.read_data;
      add3.right = t2_0.out;
      y0.addr0 = i0.out;
      y0.write_data = 1'd1 ? add3.out;
      upd21[done] = y0.done ? 1'd1;
    }
    group upd22<"static"=1> {
      j0.write_en = 1'd1;
      add4.left = j0.out;
      add4.right = const21.out;
      j0.in = 1'd1 ? add4.out;
      upd22[done] = j0.done ? 1'd1;
    }
    group upd23<"static"=1> {
      y_i_0.write_en = 1'd1;
      y0.addr0 = i0.out;
      y_i_0.in = 1'd1 ? y0.read_data;
      upd23[done] = y_i_0.done ? 1'd1;
    }
    group upd24<"static"=1> {
      tmp_read0_0.write_en = 1'd1;
      tmp0.addr0 = i0.out;
      tmp_read0_0.in = 1'd1 ? tmp0.read_data;
      upd24[done] = tmp_read0_0.done ? 1'd1;
    }
    group upd25<"static"=1> {
      y0.addr0 = i0.out;
      y0.write_en = 1'd1;
      add5.left = bin_read2_0.out;
      add5.right = bin_read3_0.out;
      y0.write_data = 1'd1 ? add5.out;
      upd25[done] = y0.done ? 1'd1;
    }
    group upd26<"static"=1> {
      i0.write_en = 1'd1;
      add6.left = i0.out;
      add6.right = const22.out;
      i0.in = 1'd1 ? add6.out;
      upd26[done] = i0.done ? 1'd1;
    }
    group upd27<"static"=1> {
      tmp_sh_read0_0.write_en = 1'd1;
      tmp0.addr0 = rsh7.out;
      rsh7.left = i01.out;
      rsh7.right = const25.out;
      tmp_sh_read0_0.in = 1'd1 ? tmp0.read_data;
      upd27[done] = tmp_sh_read0_0.done ? 1'd1;
    }
    group upd28<"static"=1> {
      tmp_int0.addr0 = i01.out;
      tmp_int0.write_en = 1'd1;
      tmp_int0.write_data = 1'd1 ? tmp_sh_read0_0.out;
      upd28[done] = tmp_int0.done ? 1'd1;
    }
    group upd29<"static"=1> {
      x_sh_read0_0.write_en = 1'd1;
      x0.addr0 = rsh8.out;
      rsh8.left = i01.out;
      rsh8.right = const26.out;
      x_sh_read0_0.in = 1'd1 ? x0.read_data;
      upd29[done] = x_sh_read0_0.done ? 1'd1;
    }
    group upd3<"static"=1> {
      tmp0.addr0 = rsh0.out;
      rsh0.left = i00.out;
      rsh0.right = const4.out;
      tmp0.write_en = 1'd1;
      tmp0.write_data = 1'd1 ? tmp_int_read0_0.out;
      upd3[done] = tmp0.done ? 1'd1;
    }
    group upd30<"static"=1> {
      x_int0.addr0 = i01.out;
      x_int0.write_en = 1'd1;
      x_int0.write_data = 1'd1 ? x_sh_read0_0.out;
      upd30[done] = x_int0.done ? 1'd1;
    }
    group upd31<"static"=1> {
      y_sh_read0_0.write_en = 1'd1;
      y0.addr0 = rsh9.out;
      rsh9.left = i01.out;
      rsh9.right = const27.out;
      y_sh_read0_0.in = 1'd1 ? y0.read_data;
      upd31[done] = y_sh_read0_0.done ? 1'd1;
    }
    group upd32<"static"=1> {
      y_int0.addr0 = i01.out;
      y_int0.write_en = 1'd1;
      y_int0.write_data = 1'd1 ? y_sh_read0_0.out;
      upd32[done] = y_int0.done ? 1'd1;
    }
    group upd33<"static"=1> {
      A_sh_read0_0.write_en = 1'd1;
      A0_0.addr1 = rsh11.out;
      rsh11.left = j01.out;
      rsh11.right = const31.out;
      A0_0.addr0 = rsh10.out;
      rsh10.left = i01.out;
      rsh10.right = const30.out;
      A_sh_read0_0.in = 1'd1 ? A0_0.read_data;
      upd33[done] = A_sh_read0_0.done ? 1'd1;
    }
    group upd34<"static"=1> {
      A_int0_0.addr1 = j01.out;
      A_int0_0.addr0 = i01.out;
      A_int0_0.write_en = 1'd1;
      A_int0_0.write_data = 1'd1 ? A_sh_read0_0.out;
      upd34[done] = A_int0_0.done ? 1'd1;
    }
    group upd35<"static"=1> {
      B_sh_read0_0.write_en = 1'd1;
      B0_0.addr1 = rsh13.out;
      rsh13.left = j01.out;
      rsh13.right = const33.out;
      B0_0.addr0 = rsh12.out;
      rsh12.left = i01.out;
      rsh12.right = const32.out;
      B_sh_read0_0.in = 1'd1 ? B0_0.read_data;
      upd35[done] = B_sh_read0_0.done ? 1'd1;
    }
    group upd36<"static"=1> {
      B_int0_0.addr1 = j01.out;
      B_int0_0.addr0 = i01.out;
      B_int0_0.write_en = 1'd1;
      B_int0_0.write_data = 1'd1 ? B_sh_read0_0.out;
      upd36[done] = B_int0_0.done ? 1'd1;
    }
    group upd37<"static"=1> {
      j01.write_en = 1'd1;
      add7.left = j01.out;
      add7.right = const34.out;
      j01.in = 1'd1 ? add7.out;
      upd37[done] = j01.done ? 1'd1;
    }
    group upd38<"static"=1> {
      i01.write_en = 1'd1;
      add8.left = i01.out;
      add8.right = const35.out;
      i01.in = 1'd1 ? add8.out;
      upd38[done] = i01.done ? 1'd1;
    }
    group upd4<"static"=1> {
      x_int_read0_0.write_en = 1'd1;
      x_int0.addr0 = i00.out;
      x_int_read0_0.in = 1'd1 ? x_int0.read_data;
      upd4[done] = x_int_read0_0.done ? 1'd1;
    }
    group upd5<"static"=1> {
      x0.addr0 = rsh1.out;
      rsh1.left = i00.out;
      rsh1.right = const5.out;
      x0.write_en = 1'd1;
      x0.write_data = 1'd1 ? x_int_read0_0.out;
      upd5[done] = x0.done ? 1'd1;
    }
    group upd6<"static"=1> {
      y_int_read0_0.write_en = 1'd1;
      y_int0.addr0 = i00.out;
      y_int_read0_0.in = 1'd1 ? y_int0.read_data;
      upd6[done] = y_int_read0_0.done ? 1'd1;
    }
    group upd7<"static"=1> {
      y0.addr0 = rsh2.out;
      rsh2.left = i00.out;
      rsh2.right = const6.out;
      y0.write_en = 1'd1;
      y0.write_data = 1'd1 ? y_int_read0_0.out;
      upd7[done] = y0.done ? 1'd1;
    }
    group upd8<"static"=1> {
      A_int_read0_0.write_en = 1'd1;
      A_int0_0.addr1 = j00.out;
      A_int0_0.addr0 = i00.out;
      A_int_read0_0.in = 1'd1 ? A_int0_0.read_data;
      upd8[done] = A_int_read0_0.done ? 1'd1;
    }
    group upd9<"static"=1> {
      A0_0.addr1 = rsh4.out;
      rsh4.left = j00.out;
      rsh4.right = const10.out;
      A0_0.addr0 = rsh3.out;
      rsh3.left = i00.out;
      rsh3.right = const9.out;
      A0_0.write_en = 1'd1;
      A0_0.write_data = 1'd1 ? A_int_read0_0.out;
      upd9[done] = A0_0.done ? 1'd1;
    }
  }
  control {
    seq {
      par {
        upd0;
        upd1;
        seq {
          let0;
          while le0.out with cond0 {
            seq {
              upd2;
              par {
                upd3;
                upd4;
              }
              par {
                upd5;
                upd6;
              }
              par {
                upd7;
                seq {
                  let1;
                  while le1.out with cond1 {
                    seq {
                      upd8;
                      par {
                        upd9;
                        upd10;
                      }
                      upd11;
                      upd12;
                    }
                  }
                }
              }
              upd13;
            }
          }
        }
      }
      let2;
      while le2.out with cond2 {
        seq {
          par {
            upd14;
            upd15;
          }
          let3;
          while le3.out with cond3 {
            seq {
              par {
                upd16;
                upd17;
              }
              par {
                seq {
                  let4;
                  let5;
                }
                upd18;
                upd19;
              }
              let6;
              let7;
              par {
                upd20;
                upd21;
              }
              upd22;
            }
          }
          upd23;
          upd24;
          let8;
          let9;
          upd25;
          upd26;
        }
      }
      let10;
      while le4.out with cond4 {
        seq {
          upd27;
          par {
            upd28;
            upd29;
          }
          par {
            upd30;
            upd31;
          }
          par {
            upd32;
            seq {
              let11;
              while le5.out with cond5 {
                seq {
                  upd33;
                  par {
                    upd34;
                    upd35;
                  }
                  upd36;
                  upd37;
                }
              }
            }
          }
          upd38;
        }
      }
    }
  }
}
