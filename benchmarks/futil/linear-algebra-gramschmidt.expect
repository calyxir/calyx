import "primitives/std.lib";
component main() -> () {
  cells {
    A0_0 = prim std_mem_d2_ext(32,8,12,4,4);
    A_i_j_0 = prim std_reg(32);
    A_i_k_0 = prim std_reg(32);
    A_read0_0 = prim std_reg(32);
    A_read1_0 = prim std_reg(32);
    Q0_0 = prim std_mem_d2_ext(32,8,12,4,4);
    Q_read0_0 = prim std_reg(32);
    Q_read1_0 = prim std_reg(32);
    R0_0 = prim std_mem_d2_ext(32,12,12,4,4);
    R_read0_0 = prim std_reg(32);
    R_read1_0 = prim std_reg(32);
    add0 = prim std_add(32);
    add1 = prim std_add(4);
    add2 = prim std_add(4);
    add3 = prim std_add(4);
    add4 = prim std_add(32);
    add5 = prim std_add(4);
    add6 = prim std_add(4);
    add7 = prim std_add(4);
    add8 = prim std_add(4);
    const0 = prim std_const(4,0);
    const1 = prim std_const(4,11);
    const10 = prim std_const(4,12);
    const11 = prim std_const(32,0);
    const12 = prim std_const(4,0);
    const13 = prim std_const(4,7);
    const14 = prim std_const(4,1);
    const15 = prim std_const(4,0);
    const16 = prim std_const(4,7);
    const17 = prim std_const(4,1);
    const18 = prim std_const(4,1);
    const19 = prim std_const(4,1);
    const2 = prim std_const(32,0);
    const3 = prim std_const(4,0);
    const4 = prim std_const(4,7);
    const5 = prim std_const(4,1);
    const6 = prim std_const(4,0);
    const7 = prim std_const(4,7);
    const8 = prim std_const(4,1);
    const9 = prim std_const(4,1);
    div0 = prim std_div(32);
    i0 = prim std_reg(4);
    i1 = prim std_reg(4);
    i2 = prim std_reg(4);
    i3 = prim std_reg(4);
    j_0 = prim std_reg(4);
    k0 = prim std_reg(4);
    le0 = prim std_le(4);
    le1 = prim std_le(4);
    le2 = prim std_le(4);
    le3 = prim std_le(4);
    le4 = prim std_le(4);
    lt0 = prim std_lt(4);
    mult0 = prim std_mult(32);
    mult1 = prim std_mult(32);
    mult2 = prim std_mult(32);
    nrm_0 = prim std_reg(32);
    sqrt0 = prim std_sqrt();
    sub0 = prim std_sub(32);
    v_0 = prim std_reg(32);
  }
  wires {
    group cond0<"static"=0> {
      cond0[done] = 1'd1;
      le0.left = k0.out;
      le0.right = const1.out;
    }
    group cond1<"static"=0> {
      cond1[done] = 1'd1;
      le1.left = i0.out;
      le1.right = const4.out;
    }
    group cond2<"static"=0> {
      cond2[done] = 1'd1;
      le2.left = i1.out;
      le2.right = const7.out;
    }
    group cond3<"static"=0> {
      cond3[done] = 1'd1;
      lt0.left = j_0.out;
      lt0.right = const10.out;
    }
    group cond4<"static"=0> {
      cond4[done] = 1'd1;
      le3.left = i2.out;
      le3.right = const13.out;
    }
    group cond5<"static"=0> {
      cond5[done] = 1'd1;
      le4.left = i3.out;
      le4.right = const16.out;
    }
    group let0<"static"=1> {
      k0.in = const0.out;
      k0.write_en = 1'd1;
      let0[done] = k0.done;
    }
    group let1<"static"=1> {
      nrm_0.in = const2.out;
      nrm_0.write_en = 1'd1;
      let1[done] = nrm_0.done;
    }
    group let2<"static"=1> {
      i0.in = const3.out;
      i0.write_en = 1'd1;
      let2[done] = i0.done;
    }
    group let3<"static"=1> {
      i1.in = const6.out;
      i1.write_en = 1'd1;
      let3[done] = i1.done;
    }
    group let4<"static"=1> {
      j_0.in = add3.out;
      j_0.write_en = 1'd1;
      let4[done] = j_0.done;
      add3.left = k0.out;
      add3.right = const9.out;
    }
    group let5<"static"=1> {
      i2.in = const12.out;
      i2.write_en = 1'd1;
      let5[done] = i2.done;
    }
    group let6<"static"=1> {
      v_0.in = mult1.out;
      v_0.write_en = 1'd1;
      let6[done] = v_0.done;
      mult1.left = Q_read0_0.out;
      mult1.right = A_read1_0.out;
    }
    group let7<"static"=1> {
      i3.in = const15.out;
      i3.write_en = 1'd1;
      let7[done] = i3.done;
    }
    group upd0<"static"=1> {
      A_i_k_0.write_en = 1'd1;
      A0_0.addr1 = k0.out;
      A0_0.addr0 = i0.out;
      A_i_k_0.in = 1'd1 ? A0_0.read_data;
      upd0[done] = A_i_k_0.done ? 1'd1;
    }
    group upd1<"static"=1> {
      nrm_0.write_en = 1'd1;
      add0.left = nrm_0.out;
      add0.right = mult0.out;
      mult0.left = A_i_k_0.out;
      mult0.right = A_i_k_0.out;
      nrm_0.in = 1'd1 ? add0.out;
      upd1[done] = nrm_0.done ? 1'd1;
    }
    group upd10<"static"=1> {
      A_read1_0.write_en = 1'd1;
      A0_0.addr1 = j_0.out;
      A0_0.addr0 = i2.out;
      A_read1_0.in = 1'd1 ? A0_0.read_data;
      upd10[done] = A_read1_0.done ? 1'd1;
    }
    group upd11<"static"=1> {
      R0_0.addr1 = j_0.out;
      R0_0.addr0 = k0.out;
      R0_0.write_en = 1'd1;
      add4.left = R0_0.read_data;
      add4.right = v_0.out;
      R0_0.addr1 = j_0.out;
      R0_0.addr0 = k0.out;
      R0_0.write_data = 1'd1 ? add4.out;
      upd11[done] = R0_0.done ? 1'd1;
    }
    group upd12<"static"=1> {
      i2.write_en = 1'd1;
      add5.left = i2.out;
      add5.right = const14.out;
      i2.in = 1'd1 ? add5.out;
      upd12[done] = i2.done ? 1'd1;
    }
    group upd13<"static"=1> {
      A_i_j_0.write_en = 1'd1;
      A0_0.addr1 = j_0.out;
      A0_0.addr0 = i3.out;
      A_i_j_0.in = 1'd1 ? A0_0.read_data;
      upd13[done] = A_i_j_0.done ? 1'd1;
    }
    group upd14<"static"=1> {
      Q_read1_0.write_en = 1'd1;
      Q0_0.addr1 = k0.out;
      Q0_0.addr0 = i3.out;
      Q_read1_0.in = 1'd1 ? Q0_0.read_data;
      upd14[done] = Q_read1_0.done ? 1'd1;
    }
    group upd15<"static"=1> {
      R_read1_0.write_en = 1'd1;
      R0_0.addr1 = j_0.out;
      R0_0.addr0 = k0.out;
      R_read1_0.in = 1'd1 ? R0_0.read_data;
      upd15[done] = R_read1_0.done ? 1'd1;
    }
    group upd16<"static"=1> {
      A0_0.addr1 = j_0.out;
      A0_0.addr0 = i3.out;
      A0_0.write_en = 1'd1;
      sub0.left = A_i_j_0.out;
      sub0.right = mult2.out;
      mult2.left = Q_read1_0.out;
      mult2.right = R_read1_0.out;
      A0_0.write_data = 1'd1 ? sub0.out;
      upd16[done] = A0_0.done ? 1'd1;
    }
    group upd17<"static"=1> {
      i3.write_en = 1'd1;
      add6.left = i3.out;
      add6.right = const17.out;
      i3.in = 1'd1 ? add6.out;
      upd17[done] = i3.done ? 1'd1;
    }
    group upd18<"static"=1> {
      j_0.write_en = 1'd1;
      add7.left = j_0.out;
      add7.right = const18.out;
      j_0.in = 1'd1 ? add7.out;
      upd18[done] = j_0.done ? 1'd1;
    }
    group upd19<"static"=1> {
      k0.write_en = 1'd1;
      add8.left = k0.out;
      add8.right = const19.out;
      k0.in = 1'd1 ? add8.out;
      upd19[done] = k0.done ? 1'd1;
    }
    group upd2<"static"=1> {
      i0.write_en = 1'd1;
      add1.left = i0.out;
      add1.right = const5.out;
      i0.in = 1'd1 ? add1.out;
      upd2[done] = i0.done ? 1'd1;
    }
    group upd3<"static"=2> {
      R0_0.addr1 = k0.out;
      R0_0.addr0 = k0.out;
      R0_0.write_en = sqrt0.done;
      sqrt0.in = nrm_0.out;
      sqrt0.go = 1'd1;
      R0_0.write_data = sqrt0.done ? sqrt0.out;
      upd3[done] = R0_0.done ? 1'd1;
    }
    group upd4<"static"=1> {
      A_read0_0.write_en = 1'd1;
      A0_0.addr1 = k0.out;
      A0_0.addr0 = i1.out;
      A_read0_0.in = 1'd1 ? A0_0.read_data;
      upd4[done] = A_read0_0.done ? 1'd1;
    }
    group upd5<"static"=1> {
      R_read0_0.write_en = 1'd1;
      R0_0.addr1 = k0.out;
      R0_0.addr0 = k0.out;
      R_read0_0.in = 1'd1 ? R0_0.read_data;
      upd5[done] = R_read0_0.done ? 1'd1;
    }
    group upd6<"static"=1> {
      Q0_0.addr1 = k0.out;
      Q0_0.addr0 = i1.out;
      Q0_0.write_en = 1'd1;
      div0.left = A_read0_0.out;
      div0.right = R_read0_0.out;
      Q0_0.write_data = 1'd1 ? div0.out;
      upd6[done] = Q0_0.done ? 1'd1;
    }
    group upd7<"static"=1> {
      i1.write_en = 1'd1;
      add2.left = i1.out;
      add2.right = const8.out;
      i1.in = 1'd1 ? add2.out;
      upd7[done] = i1.done ? 1'd1;
    }
    group upd8<"static"=1> {
      R0_0.addr1 = j_0.out;
      R0_0.addr0 = k0.out;
      R0_0.write_en = 1'd1;
      R0_0.write_data = 1'd1 ? const11.out;
      upd8[done] = R0_0.done ? 1'd1;
    }
    group upd9<"static"=1> {
      Q_read0_0.write_en = 1'd1;
      Q0_0.addr1 = k0.out;
      Q0_0.addr0 = i2.out;
      Q_read0_0.in = 1'd1 ? Q0_0.read_data;
      upd9[done] = Q_read0_0.done ? 1'd1;
    }
  }
  control {
    seq {
      let0;
      while le0.out with cond0 {
        seq {
          let1;
          let2;
          while le1.out with cond1 {
            seq {
              upd0;
              upd1;
              upd2;
            }
          }
          upd3;
          let3;
          while le2.out with cond2 {
            seq {
              upd4;
              upd5;
              upd6;
              upd7;
            }
          }
          let4;
          while lt0.out with cond3 {
            seq {
              upd8;
              let5;
              while le3.out with cond4 {
                seq {
                  upd9;
                  upd10;
                  let6;
                  upd11;
                  upd12;
                }
              }
              let7;
              while le4.out with cond5 {
                seq {
                  upd13;
                  upd14;
                  upd15;
                  upd16;
                  upd17;
                }
              }
              upd18;
            }
          }
          upd19;
        }
      }
    }
  }
}
