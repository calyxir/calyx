decl alpha: ubit<32>[1];
decl beta: ubit<32>[1];
decl A: ubit<32>[8][8];
decl B: ubit<32>[8][8];
decl tmp: ubit<32>[8];
decl x: ubit<32>[8];
decl y: ubit<32>[8];


for (let i: ubit<4> = 0..8) {
  tmp[i] := 0;
  y[i] := 0;
  ---
  for (let j: ubit<4> = 0..8) {
    let tmp_i: ubit<32> = tmp[i];
    let y_i: ubit<32> = y[i];
    ---
    tmp[i] := A[i][j] * x[j] + tmp_i;
    y[i] := B[i][j] * x[j] + y_i;
  }
  ---
  let y_i: ubit<32> = y[i];
  ---
  y[i] := alpha[0] * tmp[i] + beta[0] * y_i;
}
