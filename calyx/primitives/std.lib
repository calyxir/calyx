
(define/library ; std (verilog ../sim/lib/std.v)
  (define/prim std_reg (p_width)
    ((port in p_width)
     (port in_read_in 1)
     (port valid 1)
     (port clk 1))
    ((port out p_width)
     (port out_read_out 1)
     (port ready 1)))

  (define/prim std_iterator (p_width p_start p_stop p_incr)
    ((port valid 1)
     (port clk 1))
    ((port out p_width)
     (port stop 1)
     (port out_read_out 1)
     (port ready 1)))

  (define/prim std_const (p_width p_value)
    ((port valid 1))
    ((port out p_width)
     (port out_read_out 1)
     (port ready 1)))

  (define/prim std_add (p_width)
    ((port left p_width) (port left_read_in 1)
                         (port right p_width) (port right_read_in 1)
                         (port valid 1))
    ((port out p_width) (port out_read_out 1)
                        (port ready 1)))

  (define/prim std_sub (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out p_width) (port ready 1)))

  (define/prim std_mul (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out p_width) (port ready 1)))

  (define/prim std_div (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out p_width) (port ready 1)))

  (define/prim std_not (p_width)
    ((port in p_width) (port valid 1))
    ((port out p_width) (port ready 1)))

  (define/prim std_and (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out p_width) (port ready 1)))

  (define/prim std_or (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out p_width) (port ready 1)))

  (define/prim std_gt (p_width)
    ((port left  p_width) (port left_read_in  1)
     (port right p_width) (port right_read_in 1)
     (port valid 1))
    ((port out 1) (port out_read_out 1)
                  (port ready 1)))

  (define/prim std_lt (p_width)
    ((port left p_width) (port left_read_in 1)
                         (port right p_width) (port right_read_in 1)
                         (port valid 1))
    ((port out 1) (port out_read_out 1)
                  (port ready 1)))

  (define/prim std_eq (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out 1) (port ready 1)))

  (define/prim std_neq (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out 1) (port ready 1)))

  (define/prim std_ge (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out 1) (port ready 1)))

  (define/prim std_le (p_width)
    ((port left p_width) (port right p_width) (port valid 1))
    ((port out 1) (port ready 1))))
