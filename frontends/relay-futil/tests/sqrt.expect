import "primitives/std.lib";

component sqrt0(go: 1, clk: 1, x0_0_0_0_read_data: 32, x0_0_0_0_done: 1, x10_0_0_0_read_data: 32, x10_0_0_0_done: 1) -> (done: 1, x0_0_0_0_addr0: 4, x0_0_0_0_addr1: 4, x0_0_0_0_addr2: 5, x0_0_0_0_addr3: 7, x0_0_0_0_write_data: 32, x0_0_0_0_write_en: 1, x0_0_0_0_clk: 1, x10_0_0_0_addr0: 4, x10_0_0_0_addr1: 4, x10_0_0_0_addr2: 5, x10_0_0_0_addr3: 7, x10_0_0_0_write_data: 32, x10_0_0_0_write_en: 1, x10_0_0_0_clk: 1) {
  cells {
    add0 = prim std_add(7);
    add1 = prim std_add(5);
    add2 = prim std_add(4);
    add3 = prim std_add(4);
    const0 = prim std_const(4, 0);
    const1 = prim std_const(4, 7);
    const10 = prim std_const(4, 1);
    const11 = prim std_const(4, 1);
    const2 = prim std_const(4, 0);
    const3 = prim std_const(4, 7);
    const4 = prim std_const(5, 0);
    const5 = prim std_const(5, 15);
    const6 = prim std_const(7, 0);
    const7 = prim std_const(7, 63);
    const8 = prim std_const(7, 1);
    const9 = prim std_const(5, 1);
    i0 = prim std_reg(4);
    j0 = prim std_reg(4);
    k0 = prim std_reg(5);
    l0 = prim std_reg(7);
    le0 = prim std_le(4);
    le1 = prim std_le(4);
    le2 = prim std_le(5);
    le3 = prim std_le(7);
    sqrt0 = prim std_sqrt();
    x_read0_0 = prim std_reg(32);
  }
  wires {
    group cond0<"static"=0> {
      cond0[done] = 1'd1;
      le0.left = i0.out;
      le0.right = const1.out;
    }
    group cond1<"static"=0> {
      cond1[done] = 1'd1;
      le1.left = j0.out;
      le1.right = const3.out;
    }
    group cond2<"static"=0> {
      cond2[done] = 1'd1;
      le2.left = k0.out;
      le2.right = const5.out;
    }
    group cond3<"static"=0> {
      cond3[done] = 1'd1;
      le3.left = l0.out;
      le3.right = const7.out;
    }
    group let0<"static"=1> {
      i0.in = const0.out;
      i0.write_en = 1'd1;
      let0[done] = i0.done;
    }
    group let1<"static"=1> {
      j0.in = const2.out;
      j0.write_en = 1'd1;
      let1[done] = j0.done;
    }
    group let2<"static"=1> {
      k0.in = const4.out;
      k0.write_en = 1'd1;
      let2[done] = k0.done;
    }
    group let3<"static"=1> {
      l0.in = const6.out;
      l0.write_en = 1'd1;
      let3[done] = l0.done;
    }
    group upd0<"static"=1> {
      x_read0_0.write_en = 1'd1;
      x0_0_0_0_addr3 = l0.out;
      x0_0_0_0_addr2 = k0.out;
      x0_0_0_0_addr1 = j0.out;
      x0_0_0_0_addr0 = i0.out;
      x_read0_0.in = 1'd1 ? x0_0_0_0_read_data;
      upd0[done] = x_read0_0.done ? 1'd1;
    }
    group upd1<"static"=18> {
      x10_0_0_0_addr3 = l0.out;
      x10_0_0_0_addr2 = k0.out;
      x10_0_0_0_addr1 = j0.out;
      x10_0_0_0_addr0 = i0.out;
      x10_0_0_0_write_en = sqrt0.done;
      sqrt0.in = x_read0_0.out;
      sqrt0.go = !sqrt0.done ? 1'd1;
      x10_0_0_0_write_data = sqrt0.done ? sqrt0.out;
      upd1[done] = x10_0_0_0_done ? 1'd1;
    }
    group upd2<"static"=1> {
      l0.write_en = 1'd1;
      add0.left = l0.out;
      add0.right = const8.out;
      l0.in = 1'd1 ? add0.out;
      upd2[done] = l0.done ? 1'd1;
    }
    group upd3<"static"=1> {
      k0.write_en = 1'd1;
      add1.left = k0.out;
      add1.right = const9.out;
      k0.in = 1'd1 ? add1.out;
      upd3[done] = k0.done ? 1'd1;
    }
    group upd4<"static"=1> {
      j0.write_en = 1'd1;
      add2.left = j0.out;
      add2.right = const10.out;
      j0.in = 1'd1 ? add2.out;
      upd4[done] = j0.done ? 1'd1;
    }
    group upd5<"static"=1> {
      i0.write_en = 1'd1;
      add3.left = i0.out;
      add3.right = const11.out;
      i0.in = 1'd1 ? add3.out;
      upd5[done] = i0.done ? 1'd1;
    }
  }

  control {
    seq {
      let0;
      while le0.out with cond0 {
        seq {
          let1;
          while le1.out with cond1 {
            seq {
              let2;
              while le2.out with cond2 {
                seq {
                  let3;
                  while le3.out with cond3 {
                    seq {
                      upd0;
                      upd1;
                      upd2;
                    }
                  }
                  upd3;
                }
              }
              upd4;
            }
          }
          upd5;
        }
      }
    }
  }
}

component main () -> () {
  cells {
    x1 = prim std_mem_d4(32, 8, 8, 16, 64, 4, 4, 5, 7);
    x = prim std_mem_d4(32, 8, 8, 16, 64, 4, 4, 5, 7);
    comp_sqrt0 = sqrt0;
  }
  wires {
    group run_sqrt0 {
      x.addr0 = comp_sqrt0.x0_0_0_0_addr0;
      comp_sqrt0.x0_0_0_0_read_data = x.read_data;
      x.addr1 = comp_sqrt0.x0_0_0_0_addr1;
      x.addr2 = comp_sqrt0.x0_0_0_0_addr2;
      x.addr3 = comp_sqrt0.x0_0_0_0_addr3;
      x1.addr0 = comp_sqrt0.x10_0_0_0_addr0;
      x1.addr1 = comp_sqrt0.x10_0_0_0_addr1;
      x1.addr2 = comp_sqrt0.x10_0_0_0_addr2;
      x1.addr3 = comp_sqrt0.x10_0_0_0_addr3;
      x1.write_data = comp_sqrt0.x10_0_0_0_write_data;
      x1.write_en = comp_sqrt0.x10_0_0_0_write_en;
      comp_sqrt0.x10_0_0_0_done = x1.done;
      comp_sqrt0.go = 1'd1;
      run_sqrt0[done] = comp_sqrt0.done ? 1'd1;
    }
  }
  control {
    seq {
      run_sqrt0;
    }
  }
}
