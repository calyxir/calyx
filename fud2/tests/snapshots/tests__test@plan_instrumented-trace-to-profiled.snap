---
source: fud2/tests/tests.rs
assertion_line: 66
description: "emit plan: instrumented-trace-to-profiled"
---
build-tool = fud2
rule get-rsrc
  command = $build-tool get-rsrc $out

cells = cells.json
groups = groups.json
tdcc-json = fsm.json
passes = all
component_cells = $calyx-base/target/debug/component_cells
rule component-cells
  command = $component_cells -l $calyx-base $in > $out
component_groups = $calyx-base/target/debug/component_groups
rule component-groups
  command = $component_groups -l $calyx-base $in > $out
rule dummy
  command = sh -c 'cat $$0' $in > $out
parse-vcd-script = $calyx-base/tools/profiler/parse-vcd.py
rule parse-vcd
  command = python3 $parse-vcd-script $in $tdcc-json $cells $groups summary.csv $out
create-visuals-script = $calyx-base/tools/profiler/create-visuals.py
rule create-visuals
  command = python3 $create-visuals-script $in $cells timeline.json fsm-timeline.json $out fsm-flame.folded frequency.folded components.folded fsm-components.folded
build flamegraph.pl: get-rsrc
rule produce-flame-graph
  command = ./flamegraph.pl $in > $out

build elems-profiled.json: parse-vcd /input.ext
build flamegraph.folded: create-visuals elems-profiled.json
build /output.ext: produce-flame-graph flamegraph.folded | flamegraph.pl

default /output.ext
