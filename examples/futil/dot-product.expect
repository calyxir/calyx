import "primitives/core.futil";
import "primitives/binary_operators.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    @external A0 = std_mem_d1(32, 8, 4);
    A_read0_0 = std_reg(32);
    @external B0 = std_mem_d1(32, 8, 4);
    B_read0_0 = std_reg(32);
    add0 = std_add(32);
    add1 = std_add(4);
    bin_read0_0 = std_reg(32);
    const0 = std_const(4, 0);
    const1 = std_const(4, 7);
    const2 = std_const(1, 0);
    const3 = std_const(4, 1);
    dot_0 = std_reg(32);
    i0 = std_reg(4);
    le0 = std_le(4);
    mult_pipe0 = std_mult_pipe(32);
    @external v0 = std_mem_d1(32, 1, 1);
    @generated comb_reg = std_reg(1);
    @generated fsm = std_reg(4);
    @generated let0_go = std_wire(1);
    @generated let0_done = std_wire(1);
    @generated let1_go = std_wire(1);
    @generated let1_done = std_wire(1);
    @generated let2_go = std_wire(1);
    @generated let2_done = std_wire(1);
    @generated upd2_go = std_wire(1);
    @generated upd2_done = std_wire(1);
    @generated upd3_go = std_wire(1);
    @generated upd3_done = std_wire(1);
    @generated cond00_go = std_wire(1);
    @generated cond00_done = std_wire(1);
    @generated msp_go = std_wire(1);
    @generated msp_done = std_wire(1);
    @generated tdcc_go = std_wire(1);
    @generated tdcc_done = std_wire(1);
  }
  wires {
    A0.addr0 = msp_go.out ? i0.out;
    A0.clk = clk;
    A_read0_0.clk = clk;
    A_read0_0.in = msp_go.out ? A0.read_data;
    A_read0_0.reset = reset;
    A_read0_0.write_en = msp_go.out ? 1'd1;
    B0.addr0 = msp_go.out ? i0.out;
    B0.clk = clk;
    B_read0_0.clk = clk;
    B_read0_0.in = msp_go.out ? B0.read_data;
    B_read0_0.reset = reset;
    B_read0_0.write_en = msp_go.out ? 1'd1;
    done = tdcc_done.out ? 1'd1;
    add0.left = upd2_go.out ? v0.read_data;
    add0.right = upd2_go.out ? dot_0.out;
    add1.left = upd3_go.out ? i0.out;
    add1.right = upd3_go.out ? const3.out;
    bin_read0_0.clk = clk;
    bin_read0_0.in = let1_go.out ? mult_pipe0.out;
    bin_read0_0.reset = reset;
    bin_read0_0.write_en = let1_go.out ? mult_pipe0.done;
    comb_reg.clk = clk;
    comb_reg.in = cond00_go.out ? le0.out;
    comb_reg.reset = reset;
    comb_reg.write_en = cond00_go.out ? 1'd1;
    cond00_done.in = comb_reg.done ? 1'd1;
    cond00_go.in = !cond00_done.out & fsm.out == 4'd1 & tdcc_go.out | !cond00_done.out & fsm.out == 4'd7 & tdcc_go.out ? 1'd1;
    dot_0.clk = clk;
    dot_0.in = let2_go.out ? bin_read0_0.out;
    dot_0.reset = reset;
    dot_0.write_en = let2_go.out ? 1'd1;
    fsm.clk = clk;
    fsm.in = fsm.out == 4'd8 ? 4'd0;
    fsm.in = fsm.out == 4'd0 & let0_done.out & tdcc_go.out ? 4'd1;
    fsm.in = fsm.out == 4'd1 & cond00_done.out & comb_reg.out & tdcc_go.out | fsm.out == 4'd7 & cond00_done.out & comb_reg.out & tdcc_go.out ? 4'd2;
    fsm.in = fsm.out == 4'd2 & msp_done.out & tdcc_go.out ? 4'd3;
    fsm.in = fsm.out == 4'd3 & let1_done.out & tdcc_go.out ? 4'd4;
    fsm.in = fsm.out == 4'd4 & let2_done.out & tdcc_go.out ? 4'd5;
    fsm.in = fsm.out == 4'd5 & upd2_done.out & tdcc_go.out ? 4'd6;
    fsm.in = fsm.out == 4'd6 & upd3_done.out & tdcc_go.out ? 4'd7;
    fsm.in = fsm.out == 4'd1 & cond00_done.out & !comb_reg.out & tdcc_go.out | fsm.out == 4'd7 & cond00_done.out & !comb_reg.out & tdcc_go.out ? 4'd8;
    fsm.reset = reset;
    fsm.write_en = fsm.out == 4'd8 | fsm.out == 4'd0 & let0_done.out & tdcc_go.out | fsm.out == 4'd1 & cond00_done.out & comb_reg.out & tdcc_go.out | fsm.out == 4'd7 & cond00_done.out & comb_reg.out & tdcc_go.out | fsm.out == 4'd2 & msp_done.out & tdcc_go.out | fsm.out == 4'd3 & let1_done.out & tdcc_go.out | fsm.out == 4'd4 & let2_done.out & tdcc_go.out | fsm.out == 4'd5 & upd2_done.out & tdcc_go.out | fsm.out == 4'd6 & upd3_done.out & tdcc_go.out | fsm.out == 4'd1 & cond00_done.out & !comb_reg.out & tdcc_go.out | fsm.out == 4'd7 & cond00_done.out & !comb_reg.out & tdcc_go.out ? 1'd1;
    i0.clk = clk;
    i0.in = upd3_go.out ? add1.out;
    i0.in = let0_go.out ? const0.out;
    i0.reset = reset;
    i0.write_en = let0_go.out | upd3_go.out ? 1'd1;
    le0.left = cond00_go.out ? i0.out;
    le0.right = cond00_go.out ? const1.out;
    let0_done.in = i0.done;
    let0_go.in = !let0_done.out & fsm.out == 4'd0 & tdcc_go.out ? 1'd1;
    let1_done.in = bin_read0_0.done;
    let1_go.in = !let1_done.out & fsm.out == 4'd3 & tdcc_go.out ? 1'd1;
    let2_done.in = dot_0.done;
    let2_go.in = !let2_done.out & fsm.out == 4'd4 & tdcc_go.out ? 1'd1;
    msp_done.in = 1'b1 & A_read0_0.done & 1'b1 & B_read0_0.done ? 1'd1;
    msp_go.in = !msp_done.out & fsm.out == 4'd2 & tdcc_go.out ? 1'd1;
    mult_pipe0.clk = clk;
    mult_pipe0.go = !mult_pipe0.done & let1_go.out ? 1'd1;
    mult_pipe0.left = let1_go.out ? A_read0_0.out;
    mult_pipe0.reset = reset;
    mult_pipe0.right = let1_go.out ? B_read0_0.out;
    tdcc_done.in = fsm.out == 4'd8 ? 1'd1;
    tdcc_go.in = go;
    upd2_done.in = v0.done ? 1'd1;
    upd2_go.in = !upd2_done.out & fsm.out == 4'd5 & tdcc_go.out ? 1'd1;
    upd3_done.in = i0.done ? 1'd1;
    upd3_go.in = !upd3_done.out & fsm.out == 4'd6 & tdcc_go.out ? 1'd1;
    v0.addr0 = upd2_go.out ? const2.out;
    v0.clk = clk;
    v0.write_data = upd2_go.out ? add0.out;
    v0.write_en = upd2_go.out ? 1'd1;
  }

  control {}
}
