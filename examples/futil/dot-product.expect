import "primitives/core.futil";
import "primitives/binary_operators.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    @external A0 = std_mem_d1(32, 8, 4);
    A_read0_0 = std_reg(32);
    @external B0 = std_mem_d1(32, 8, 4);
    B_read0_0 = std_reg(32);
    add0 = std_add(32);
    add1 = std_add(4);
    bin_read0_0 = std_reg(32);
    const0 = std_const(4, 0);
    const1 = std_const(4, 7);
    const2 = std_const(1, 0);
    const3 = std_const(4, 1);
    i0 = std_reg(4);
    le0 = std_le(4);
    mult_pipe0 = std_mult_pipe(32);
    @external v0 = std_mem_d1(32, 1, 1);
    @generated comb_reg = std_reg(1);
    @generated pd = std_reg(1);
    @generated pd0 = std_reg(1);
    @generated fsm = std_reg(4);
  }
  wires {
    A0.addr0 = !(pd.out | A_read0_0.done) & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? i0.out;
    A0.clk = clk;
    A_read0_0.clk = clk;
    A_read0_0.in = !(pd.out | A_read0_0.done) & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? A0.read_data;
    A_read0_0.in = bin_read0_0.done & fsm.out == 4'd3 & go | !A_read0_0.done & fsm.out == 4'd4 & go ? bin_read0_0.out;
    A_read0_0.reset = reset;
    A_read0_0.write_en = bin_read0_0.done & fsm.out == 4'd3 & go | !A_read0_0.done & fsm.out == 4'd4 & go | !(pd.out | A_read0_0.done) & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? 1'd1;
    B0.addr0 = !(pd0.out | B_read0_0.done) & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? i0.out;
    B0.clk = clk;
    B_read0_0.clk = clk;
    B_read0_0.in = !(pd0.out | B_read0_0.done) & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? B0.read_data;
    B_read0_0.reset = reset;
    B_read0_0.write_en = !(pd0.out | B_read0_0.done) & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? 1'd1;
    done = fsm.out == 4'd8 ? 1'd1;
    add0.left = A_read0_0.done & fsm.out == 4'd4 & go | !v0.done & fsm.out == 4'd5 & go ? v0.read_data;
    add0.right = A_read0_0.done & fsm.out == 4'd4 & go | !v0.done & fsm.out == 4'd5 & go ? A_read0_0.out;
    add1.left = v0.done & fsm.out == 4'd5 & go | !i0.done & fsm.out == 4'd6 & go ? i0.out;
    add1.right = v0.done & fsm.out == 4'd5 & go | !i0.done & fsm.out == 4'd6 & go ? const3.out;
    bin_read0_0.clk = clk;
    bin_read0_0.in = pd.out & pd0.out & fsm.out == 4'd2 & go | !bin_read0_0.done & fsm.out == 4'd3 & go ? mult_pipe0.out;
    bin_read0_0.reset = reset;
    bin_read0_0.write_en = pd.out & pd0.out & fsm.out == 4'd2 & go | !bin_read0_0.done & fsm.out == 4'd3 & go ? mult_pipe0.done;
    comb_reg.clk = clk;
    comb_reg.in = i0.done & fsm.out == 4'd0 & go | !comb_reg.done & fsm.out == 4'd1 & go | i0.done & fsm.out == 4'd6 & go | !comb_reg.done & fsm.out == 4'd7 & go ? le0.out;
    comb_reg.reset = reset;
    comb_reg.write_en = i0.done & fsm.out == 4'd0 & go | !comb_reg.done & fsm.out == 4'd1 & go | i0.done & fsm.out == 4'd6 & go | !comb_reg.done & fsm.out == 4'd7 & go ? 1'd1;
    fsm.clk = clk;
    fsm.in = fsm.out == 4'd8 ? 4'd0;
    fsm.in = fsm.out == 4'd0 & i0.done & go ? 4'd1;
    fsm.in = fsm.out == 4'd1 & comb_reg.done & comb_reg.out & go | fsm.out == 4'd7 & comb_reg.done & comb_reg.out & go ? 4'd2;
    fsm.in = fsm.out == 4'd2 & pd.out & pd0.out & go ? 4'd3;
    fsm.in = fsm.out == 4'd3 & bin_read0_0.done & go ? 4'd4;
    fsm.in = fsm.out == 4'd4 & A_read0_0.done & go ? 4'd5;
    fsm.in = fsm.out == 4'd5 & v0.done & go ? 4'd6;
    fsm.in = fsm.out == 4'd6 & i0.done & go ? 4'd7;
    fsm.in = fsm.out == 4'd1 & comb_reg.done & !comb_reg.out & go | fsm.out == 4'd7 & comb_reg.done & !comb_reg.out & go ? 4'd8;
    fsm.reset = reset;
    fsm.write_en = fsm.out == 4'd0 & i0.done & go | fsm.out == 4'd1 & comb_reg.done & comb_reg.out & go | fsm.out == 4'd7 & comb_reg.done & comb_reg.out & go | fsm.out == 4'd2 & pd.out & pd0.out & go | fsm.out == 4'd3 & bin_read0_0.done & go | fsm.out == 4'd4 & A_read0_0.done & go | fsm.out == 4'd5 & v0.done & go | fsm.out == 4'd6 & i0.done & go | fsm.out == 4'd1 & comb_reg.done & !comb_reg.out & go | fsm.out == 4'd7 & comb_reg.done & !comb_reg.out & go | fsm.out == 4'd8 ? 1'd1;
    i0.clk = clk;
    i0.in = v0.done & fsm.out == 4'd5 & go | !i0.done & fsm.out == 4'd6 & go ? add1.out;
    i0.in = !i0.done & fsm.out == 4'd0 & go ? const0.out;
    i0.reset = reset;
    i0.write_en = !i0.done & fsm.out == 4'd0 & go | v0.done & fsm.out == 4'd5 & go | !i0.done & fsm.out == 4'd6 & go ? 1'd1;
    le0.left = i0.done & fsm.out == 4'd0 & go | !comb_reg.done & fsm.out == 4'd1 & go | i0.done & fsm.out == 4'd6 & go | !comb_reg.done & fsm.out == 4'd7 & go ? i0.out;
    le0.right = i0.done & fsm.out == 4'd0 & go | !comb_reg.done & fsm.out == 4'd1 & go | i0.done & fsm.out == 4'd6 & go | !comb_reg.done & fsm.out == 4'd7 & go ? const1.out;
    mult_pipe0.clk = clk;
    mult_pipe0.go = !mult_pipe0.done & (pd.out & pd0.out & fsm.out == 4'd2 & go | !bin_read0_0.done & fsm.out == 4'd3 & go) ? 1'd1;
    mult_pipe0.left = pd.out & pd0.out & fsm.out == 4'd2 & go | !bin_read0_0.done & fsm.out == 4'd3 & go ? A_read0_0.out;
    mult_pipe0.reset = reset;
    mult_pipe0.right = pd.out & pd0.out & fsm.out == 4'd2 & go | !bin_read0_0.done & fsm.out == 4'd3 & go ? B_read0_0.out;
    pd.clk = clk;
    pd.in = pd.out & pd0.out ? 1'd0;
    pd.in = A_read0_0.done & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? 1'd1;
    pd.reset = reset;
    pd.write_en = A_read0_0.done & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) | pd.out & pd0.out ? 1'd1;
    pd0.clk = clk;
    pd0.in = pd.out & pd0.out ? 1'd0;
    pd0.in = B_read0_0.done & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) ? 1'd1;
    pd0.reset = reset;
    pd0.write_en = B_read0_0.done & (comb_reg.done & comb_reg.out & fsm.out == 4'd1 & go | !(pd.out & pd0.out) & fsm.out == 4'd2 & go | comb_reg.done & comb_reg.out & fsm.out == 4'd7 & go) | pd.out & pd0.out ? 1'd1;
    v0.addr0 = A_read0_0.done & fsm.out == 4'd4 & go | !v0.done & fsm.out == 4'd5 & go ? const2.out;
    v0.clk = clk;
    v0.write_data = A_read0_0.done & fsm.out == 4'd4 & go | !v0.done & fsm.out == 4'd5 & go ? add0.out;
    v0.write_en = A_read0_0.done & fsm.out == 4'd4 & go | !v0.done & fsm.out == 4'd5 & go ? 1'd1;
  }

  control {}
}
