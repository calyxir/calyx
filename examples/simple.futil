import "primitives/std.lib";

// A simple example that takes the sum and product of two constants,
// and places each in its own register.
component main() -> () {
  cells {
    const0 = prim std_const(32, 4); // 32-bit width constant with value 4.
    const1 = prim std_const(32, 5); // 32-bit width constant with value 5.

    add    = prim std_add(32);      // 32-bit width adder.
    mult   = prim std_mult(32);     // 32-bit width multiplier.

    reg0   = prim std_reg(32);      // 32-bit width register.
    reg1   = prim std_reg(32);      // 32-bit width register.
  }

  wires {
    group add_constants {
      add.left = const0.out;        // 4
      add.right = const1.out;       // 5
      reg0.in = add.out;            // 4 + 5
    }
    group multiply_constants {
      mult.left = const0.out;       // 4
      mult.right = const1.out;      // 5
      reg1.in = mult.out;           // 4 * 5
    }
  }

  control {
    seq {                           // These are done sequentially.
      add_constants;                // Put 9 in reg0.
      multiply_constants;           // Put 20 in reg1.
    }
  }
}
