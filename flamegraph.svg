<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="565.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="4513"><g><title>futil`calyx::frontend::parser::CalyxParser::cell_without_semi (1 samples, 0.02%)</title><rect x="0.0000%" y="357" width="0.0222%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::args (1 samples, 0.02%)</title><rect x="0.0000%" y="341" width="0.0222%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.0000%" y="325" width="0.0222%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0000%" y="309" width="0.0222%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0000%" y="293" width="0.0222%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="0.0000%" y="277" width="0.0222%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::signature (1 samples, 0.02%)</title><rect x="0.0222%" y="341" width="0.0222%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2722%" y="351.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::inputs (1 samples, 0.02%)</title><rect x="0.0222%" y="325" width="0.0222%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.2722%" y="335.50"></text></g><g><title>futil`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.0222%" y="309" width="0.0222%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2722%" y="319.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::io_port (1 samples, 0.02%)</title><rect x="0.0222%" y="293" width="0.0222%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.2722%" y="303.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::identifier (1 samples, 0.02%)</title><rect x="0.0222%" y="277" width="0.0222%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.2722%" y="287.50"></text></g><g><title>futil`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="0.0222%" y="261" width="0.0222%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.2722%" y="271.50"></text></g><g><title>futil`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="0.0222%" y="245" width="0.0222%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.2722%" y="255.50"></text></g><g><title>futil`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="0.0222%" y="229" width="0.0222%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.2722%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.0222%" y="213" width="0.0222%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.2722%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0222%" y="197" width="0.0222%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.2722%" y="207.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::sig_with_params (2 samples, 0.04%)</title><rect x="0.0222%" y="357" width="0.0443%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="2"/><text x="0.2722%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.0443%" y="341" width="0.0222%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.2943%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0443%" y="325" width="0.0222%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.2943%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0443%" y="309" width="0.0222%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="0.2943%" y="319.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.0665%" y="325" width="0.0222%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="0.3165%" y="335.50"></text></g><g><title>futil`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="0.0665%" y="309" width="0.0222%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="0.3165%" y="319.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::wire (2 samples, 0.04%)</title><rect x="0.0665%" y="357" width="0.0443%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="2"/><text x="0.3165%" y="367.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::expr (2 samples, 0.04%)</title><rect x="0.0665%" y="341" width="0.0443%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="2"/><text x="0.3165%" y="351.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::LHS (1 samples, 0.02%)</title><rect x="0.0886%" y="325" width="0.0222%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="1"/><text x="0.3386%" y="335.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.0886%" y="309" width="0.0222%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="0.3386%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.0886%" y="293" width="0.0222%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="1"/><text x="0.3386%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0886%" y="277" width="0.0222%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="0.3386%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.0886%" y="261" width="0.0222%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="0.3386%" y="271.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::file (6 samples, 0.13%)</title><rect x="0.0000%" y="421" width="0.1329%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="6"/><text x="0.2500%" y="431.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::externs_and_comps (6 samples, 0.13%)</title><rect x="0.0000%" y="405" width="0.1329%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="6"/><text x="0.2500%" y="415.50"></text></g><g><title>futil`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="0.0000%" y="389" width="0.1329%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="6"/><text x="0.2500%" y="399.50"></text></g><g><title>futil`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="0.0000%" y="373" width="0.1329%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="6"/><text x="0.2500%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="0.1108%" y="357" width="0.0222%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="0.3608%" y="367.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::cells (1 samples, 0.02%)</title><rect x="0.1329%" y="341" width="0.0222%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="0.3829%" y="351.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::cell (1 samples, 0.02%)</title><rect x="0.1329%" y="325" width="0.0222%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="0.3829%" y="335.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::cell_without_semi (1 samples, 0.02%)</title><rect x="0.1329%" y="309" width="0.0222%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="0.3829%" y="319.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::args (1 samples, 0.02%)</title><rect x="0.1329%" y="293" width="0.0222%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="1"/><text x="0.3829%" y="303.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::identifier (1 samples, 0.02%)</title><rect x="0.1773%" y="181" width="0.0222%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="1"/><text x="0.4273%" y="191.50"></text></g><g><title>futil`calyx::frontend::parser::CalyxParser::parse_file (10 samples, 0.22%)</title><rect x="0.0000%" y="437" width="0.2216%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="10"/><text x="0.2500%" y="447.50"></text></g><g><title>futil`pest_consume::parser::Parser::parse_with_userdata (4 samples, 0.09%)</title><rect x="0.1329%" y="421" width="0.0886%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="4"/><text x="0.3829%" y="431.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::file (4 samples, 0.09%)</title><rect x="0.1329%" y="405" width="0.0886%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="4"/><text x="0.3829%" y="415.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::externs_and_comps (4 samples, 0.09%)</title><rect x="0.1329%" y="389" width="0.0886%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="4"/><text x="0.3829%" y="399.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::extern_or_component (4 samples, 0.09%)</title><rect x="0.1329%" y="373" width="0.0886%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="4"/><text x="0.3829%" y="383.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::component (4 samples, 0.09%)</title><rect x="0.1329%" y="357" width="0.0886%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="4"/><text x="0.3829%" y="367.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::connections (3 samples, 0.07%)</title><rect x="0.1551%" y="341" width="0.0665%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="3"/><text x="0.4051%" y="351.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::group (3 samples, 0.07%)</title><rect x="0.1551%" y="325" width="0.0665%" height="15" fill="rgb(218,138,4)" fg:x="7" fg:w="3"/><text x="0.4051%" y="335.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::wire (3 samples, 0.07%)</title><rect x="0.1551%" y="309" width="0.0665%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="3"/><text x="0.4051%" y="319.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::switch_stmt (3 samples, 0.07%)</title><rect x="0.1551%" y="293" width="0.0665%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="3"/><text x="0.4051%" y="303.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::guard_expr (3 samples, 0.07%)</title><rect x="0.1551%" y="277" width="0.0665%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="3"/><text x="0.4051%" y="287.50"></text></g><g><title>futil`pest::parser_state::ParserState&lt;R&gt;::rule (2 samples, 0.04%)</title><rect x="0.1773%" y="261" width="0.0443%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="2"/><text x="0.4273%" y="271.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::cmp_expr (2 samples, 0.04%)</title><rect x="0.1773%" y="245" width="0.0443%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="2"/><text x="0.4273%" y="255.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::expr (2 samples, 0.04%)</title><rect x="0.1773%" y="229" width="0.0443%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="2"/><text x="0.4273%" y="239.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::LHS (2 samples, 0.04%)</title><rect x="0.1773%" y="213" width="0.0443%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="2"/><text x="0.4273%" y="223.50"></text></g><g><title>futil`&lt;calyx::frontend::parser::CalyxParser as pest::parser::Parser&lt;calyx::frontend::parser::Rule&gt;&gt;::parse::rules::visible::hole (2 samples, 0.04%)</title><rect x="0.1773%" y="197" width="0.0443%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="2"/><text x="0.4273%" y="207.50"></text></g><g><title>futil`pest::parser_state::ParserState&lt;R&gt;::match_range (1 samples, 0.02%)</title><rect x="0.1994%" y="181" width="0.0222%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="0.4494%" y="191.50"></text></g><g><title>futil`calyx::ir::builder::Builder::add_comb_group (1 samples, 0.02%)</title><rect x="0.2216%" y="389" width="0.0222%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="0.4716%" y="399.50"></text></g><g><title>futil`calyx::ir::component::Component::generate_name (1 samples, 0.02%)</title><rect x="0.2216%" y="373" width="0.0222%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="0.4716%" y="383.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="0.2216%" y="357" width="0.0222%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="0.4716%" y="367.50"></text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="0.2216%" y="341" width="0.0222%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="0.4716%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.04%)</title><rect x="0.2437%" y="357" width="0.0443%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="2"/><text x="0.4937%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.04%)</title><rect x="0.2437%" y="341" width="0.0443%" height="15" fill="rgb(221,10,30)" fg:x="11" fg:w="2"/><text x="0.4937%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="0.2659%" y="325" width="0.0222%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="0.5159%" y="335.50"></text></g><g><title>futil`calyx::ir::builder::Builder::add_primitive (3 samples, 0.07%)</title><rect x="0.2437%" y="389" width="0.0665%" height="15" fill="rgb(222,148,37)" fg:x="11" fg:w="3"/><text x="0.4937%" y="399.50"></text></g><g><title>futil`calyx::ir::primitives::Primitive::resolve (3 samples, 0.07%)</title><rect x="0.2437%" y="373" width="0.0665%" height="15" fill="rgb(234,67,33)" fg:x="11" fg:w="3"/><text x="0.4937%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="0.2881%" y="357" width="0.0222%" height="15" fill="rgb(247,98,35)" fg:x="13" fg:w="1"/><text x="0.5381%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="0.2881%" y="341" width="0.0222%" height="15" fill="rgb(247,138,52)" fg:x="13" fg:w="1"/><text x="0.5381%" y="351.50"></text></g><g><title>futil`calyx::ir::from_ast::ast_to_ir (5 samples, 0.11%)</title><rect x="0.2216%" y="437" width="0.1108%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="5"/><text x="0.4716%" y="447.50"></text></g><g><title>futil`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="0.2216%" y="421" width="0.1108%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="5"/><text x="0.4716%" y="431.50"></text></g><g><title>futil`calyx::ir::from_ast::build_component (5 samples, 0.11%)</title><rect x="0.2216%" y="405" width="0.1108%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="5"/><text x="0.4716%" y="415.50"></text></g><g><title>futil`core::iter::adapters::try_process (1 samples, 0.02%)</title><rect x="0.3102%" y="389" width="0.0222%" height="15" fill="rgb(216,154,8)" fg:x="14" fg:w="1"/><text x="0.5602%" y="399.50"></text></g><g><title>futil`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.3102%" y="373" width="0.0222%" height="15" fill="rgb(244,35,45)" fg:x="14" fg:w="1"/><text x="0.5602%" y="383.50"></text></g><g><title>futil`calyx::ir::from_ast::atom_to_port (1 samples, 0.02%)</title><rect x="0.3102%" y="357" width="0.0222%" height="15" fill="rgb(251,115,12)" fg:x="14" fg:w="1"/><text x="0.5602%" y="367.50"></text></g><g><title>futil`calyx::ir::from_ast::get_port_ref (1 samples, 0.02%)</title><rect x="0.3102%" y="341" width="0.0222%" height="15" fill="rgb(240,54,50)" fg:x="14" fg:w="1"/><text x="0.5602%" y="351.50"></text></g><g><title>futil`calyx::ir::component::IdList&lt;T&gt;::find (1 samples, 0.02%)</title><rect x="0.3102%" y="325" width="0.0222%" height="15" fill="rgb(233,84,52)" fg:x="14" fg:w="1"/><text x="0.5602%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="0.3102%" y="309" width="0.0222%" height="15" fill="rgb(207,117,47)" fg:x="14" fg:w="1"/><text x="0.5602%" y="319.50"></text></g><g><title>futil`&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (5 samples, 0.11%)</title><rect x="0.3324%" y="421" width="0.1108%" height="15" fill="rgb(249,43,39)" fg:x="15" fg:w="5"/><text x="0.5824%" y="431.50"></text></g><g><title>futil`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (5 samples, 0.11%)</title><rect x="0.3324%" y="405" width="0.1108%" height="15" fill="rgb(209,38,44)" fg:x="15" fg:w="5"/><text x="0.5824%" y="415.50"></text></g><g><title>futil`core::fmt::write (5 samples, 0.11%)</title><rect x="0.3324%" y="389" width="0.1108%" height="15" fill="rgb(236,212,23)" fg:x="15" fg:w="5"/><text x="0.5824%" y="399.50"></text></g><g><title>futil`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.11%)</title><rect x="0.3324%" y="373" width="0.1108%" height="15" fill="rgb(242,79,21)" fg:x="15" fg:w="5"/><text x="0.5824%" y="383.50"></text></g><g><title>futil`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.11%)</title><rect x="0.3324%" y="357" width="0.1108%" height="15" fill="rgb(211,96,35)" fg:x="15" fg:w="5"/><text x="0.5824%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.11%)</title><rect x="0.3324%" y="341" width="0.1108%" height="15" fill="rgb(253,215,40)" fg:x="15" fg:w="5"/><text x="0.5824%" y="351.50"></text></g><g><title>futil`&lt;calyx::ir::guard::Guard as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="0.4432%" y="405" width="0.0443%" height="15" fill="rgb(211,81,21)" fg:x="20" fg:w="2"/><text x="0.6932%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.4653%" y="389" width="0.0222%" height="15" fill="rgb(208,190,38)" fg:x="21" fg:w="1"/><text x="0.7153%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.4653%" y="373" width="0.0222%" height="15" fill="rgb(235,213,38)" fg:x="21" fg:w="1"/><text x="0.7153%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.4653%" y="357" width="0.0222%" height="15" fill="rgb(237,122,38)" fg:x="21" fg:w="1"/><text x="0.7153%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="0.4653%" y="341" width="0.0222%" height="15" fill="rgb(244,218,35)" fg:x="21" fg:w="1"/><text x="0.7153%" y="351.50"></text></g><g><title>futil`calyx::ir::printer::Printer::guard_str (3 samples, 0.07%)</title><rect x="0.4875%" y="405" width="0.0665%" height="15" fill="rgb(240,68,47)" fg:x="22" fg:w="3"/><text x="0.7375%" y="415.50"></text></g><g><title>futil`calyx::ir::printer::Printer::guard_str (3 samples, 0.07%)</title><rect x="0.4875%" y="389" width="0.0665%" height="15" fill="rgb(210,16,53)" fg:x="22" fg:w="3"/><text x="0.7375%" y="399.50"></text></g><g><title>futil`calyx::ir::printer::Printer::guard_str (2 samples, 0.04%)</title><rect x="0.5096%" y="373" width="0.0443%" height="15" fill="rgb(235,124,12)" fg:x="23" fg:w="2"/><text x="0.7596%" y="383.50"></text></g><g><title>futil`calyx::ir::printer::Printer::port_to_str (2 samples, 0.04%)</title><rect x="0.5096%" y="357" width="0.0443%" height="15" fill="rgb(224,169,11)" fg:x="23" fg:w="2"/><text x="0.7596%" y="367.50"></text></g><g><title>futil`alloc::fmt::format (1 samples, 0.02%)</title><rect x="0.5318%" y="341" width="0.0222%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="1"/><text x="0.7818%" y="351.50"></text></g><g><title>futil`core::fmt::write (1 samples, 0.02%)</title><rect x="0.5318%" y="325" width="0.0222%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="1"/><text x="0.7818%" y="335.50"></text></g><g><title>futil`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="0.5318%" y="309" width="0.0222%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="1"/><text x="0.7818%" y="319.50"></text></g><g><title>futil`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="0.5318%" y="293" width="0.0222%" height="15" fill="rgb(228,99,48)" fg:x="24" fg:w="1"/><text x="0.7818%" y="303.50"></text></g><g><title>futil`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="0.5318%" y="277" width="0.0222%" height="15" fill="rgb(253,11,6)" fg:x="24" fg:w="1"/><text x="0.7818%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="0.5318%" y="261" width="0.0222%" height="15" fill="rgb(247,143,39)" fg:x="24" fg:w="1"/><text x="0.7818%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="0.5318%" y="245" width="0.0222%" height="15" fill="rgb(236,97,10)" fg:x="24" fg:w="1"/><text x="0.7818%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (1 samples, 0.02%)</title><rect x="0.5318%" y="229" width="0.0222%" height="15" fill="rgb(233,208,19)" fg:x="24" fg:w="1"/><text x="0.7818%" y="239.50"></text></g><g><title>futil`calyx::ir::printer::Printer::write_component (11 samples, 0.24%)</title><rect x="0.3324%" y="437" width="0.2437%" height="15" fill="rgb(216,164,2)" fg:x="15" fg:w="11"/><text x="0.5824%" y="447.50"></text></g><g><title>futil`calyx::ir::printer::Printer::write_assignment (6 samples, 0.13%)</title><rect x="0.4432%" y="421" width="0.1329%" height="15" fill="rgb(220,129,5)" fg:x="20" fg:w="6"/><text x="0.6932%" y="431.50"></text></g><g><title>futil`calyx::ir::printer::Printer::port_to_str (1 samples, 0.02%)</title><rect x="0.5540%" y="405" width="0.0222%" height="15" fill="rgb(242,17,10)" fg:x="25" fg:w="1"/><text x="0.8040%" y="415.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="357" width="0.0222%" height="15" fill="rgb(242,107,0)" fg:x="26" fg:w="1"/><text x="0.8261%" y="367.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="341" width="0.0222%" height="15" fill="rgb(251,28,31)" fg:x="26" fg:w="1"/><text x="0.8261%" y="351.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="325" width="0.0222%" height="15" fill="rgb(233,223,10)" fg:x="26" fg:w="1"/><text x="0.8261%" y="335.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="309" width="0.0222%" height="15" fill="rgb(215,21,27)" fg:x="26" fg:w="1"/><text x="0.8261%" y="319.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="293" width="0.0222%" height="15" fill="rgb(232,23,21)" fg:x="26" fg:w="1"/><text x="0.8261%" y="303.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="277" width="0.0222%" height="15" fill="rgb(244,5,23)" fg:x="26" fg:w="1"/><text x="0.8261%" y="287.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="261" width="0.0222%" height="15" fill="rgb(226,81,46)" fg:x="26" fg:w="1"/><text x="0.8261%" y="271.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="245" width="0.0222%" height="15" fill="rgb(247,70,30)" fg:x="26" fg:w="1"/><text x="0.8261%" y="255.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="229" width="0.0222%" height="15" fill="rgb(212,68,19)" fg:x="26" fg:w="1"/><text x="0.8261%" y="239.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="213" width="0.0222%" height="15" fill="rgb(240,187,13)" fg:x="26" fg:w="1"/><text x="0.8261%" y="223.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="197" width="0.0222%" height="15" fill="rgb(223,113,26)" fg:x="26" fg:w="1"/><text x="0.8261%" y="207.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="181" width="0.0222%" height="15" fill="rgb(206,192,2)" fg:x="26" fg:w="1"/><text x="0.8261%" y="191.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="165" width="0.0222%" height="15" fill="rgb(241,108,4)" fg:x="26" fg:w="1"/><text x="0.8261%" y="175.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="149" width="0.0222%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="1"/><text x="0.8261%" y="159.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="133" width="0.0222%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="1"/><text x="0.8261%" y="143.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="117" width="0.0222%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="1"/><text x="0.8261%" y="127.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="101" width="0.0222%" height="15" fill="rgb(245,172,44)" fg:x="26" fg:w="1"/><text x="0.8261%" y="111.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="85" width="0.0222%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="1"/><text x="0.8261%" y="95.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="69" width="0.0222%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="1"/><text x="0.8261%" y="79.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="53" width="0.0222%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="1"/><text x="0.8261%" y="63.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (1 samples, 0.02%)</title><rect x="0.5761%" y="37" width="0.0222%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="1"/><text x="0.8261%" y="47.50"></text></g><g><title>futil`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="0.5983%" y="165" width="0.0222%" height="15" fill="rgb(217,125,39)" fg:x="27" fg:w="1"/><text x="0.8483%" y="175.50"></text></g><g><title>futil`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="0.5983%" y="149" width="0.0222%" height="15" fill="rgb(235,36,10)" fg:x="27" fg:w="1"/><text x="0.8483%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.5983%" y="133" width="0.0222%" height="15" fill="rgb(251,123,47)" fg:x="27" fg:w="1"/><text x="0.8483%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.5983%" y="117" width="0.0222%" height="15" fill="rgb(221,13,13)" fg:x="27" fg:w="1"/><text x="0.8483%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.5983%" y="101" width="0.0222%" height="15" fill="rgb(238,131,9)" fg:x="27" fg:w="1"/><text x="0.8483%" y="111.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (3 samples, 0.07%)</title><rect x="0.5761%" y="405" width="0.0665%" height="15" fill="rgb(211,50,8)" fg:x="26" fg:w="3"/><text x="0.8261%" y="415.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (3 samples, 0.07%)</title><rect x="0.5761%" y="389" width="0.0665%" height="15" fill="rgb(245,182,24)" fg:x="26" fg:w="3"/><text x="0.8261%" y="399.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (3 samples, 0.07%)</title><rect x="0.5761%" y="373" width="0.0665%" height="15" fill="rgb(242,14,37)" fg:x="26" fg:w="3"/><text x="0.8261%" y="383.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (2 samples, 0.04%)</title><rect x="0.5983%" y="357" width="0.0443%" height="15" fill="rgb(246,228,12)" fg:x="27" fg:w="2"/><text x="0.8483%" y="367.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (2 samples, 0.04%)</title><rect x="0.5983%" y="341" width="0.0443%" height="15" fill="rgb(213,55,15)" fg:x="27" fg:w="2"/><text x="0.8483%" y="351.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (2 samples, 0.04%)</title><rect x="0.5983%" y="325" width="0.0443%" height="15" fill="rgb(209,9,3)" fg:x="27" fg:w="2"/><text x="0.8483%" y="335.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (2 samples, 0.04%)</title><rect x="0.5983%" y="309" width="0.0443%" height="15" fill="rgb(230,59,30)" fg:x="27" fg:w="2"/><text x="0.8483%" y="319.50"></text></g><g><title>futil`&lt;alloc::vec::Vec&lt;V&gt; as calyx::ir::traversal::visitor::Visitable&gt;::visit (2 samples, 0.04%)</title><rect x="0.5983%" y="293" width="0.0443%" height="15" fill="rgb(209,121,21)" fg:x="27" fg:w="2"/><text x="0.8483%" y="303.50"></text></g><g><title>futil`&lt;calyx::ir::control::Control as calyx::ir::traversal::visitor::Visitable&gt;::visit (2 samples, 0.04%)</title><rect x="0.5983%" y="277" width="0.0443%" height="15" fill="rgb(220,109,13)" fg:x="27" fg:w="2"/><text x="0.8483%" y="287.50"></text></g><g><title>futil`&lt;calyx::passes::top_down_compile_control::TopDownCompileControl as calyx::ir::traversal::visitor::Visitor&gt;::finish_par (2 samples, 0.04%)</title><rect x="0.5983%" y="261" width="0.0443%" height="15" fill="rgb(232,18,1)" fg:x="27" fg:w="2"/><text x="0.8483%" y="271.50"></text></g><g><title>futil`calyx::passes::top_down_compile_control::calculate_states (2 samples, 0.04%)</title><rect x="0.5983%" y="245" width="0.0443%" height="15" fill="rgb(215,41,42)" fg:x="27" fg:w="2"/><text x="0.8483%" y="255.50"></text></g><g><title>futil`calyx::passes::top_down_compile_control::calculate_states_recur (2 samples, 0.04%)</title><rect x="0.5983%" y="229" width="0.0443%" height="15" fill="rgb(224,123,36)" fg:x="27" fg:w="2"/><text x="0.8483%" y="239.50"></text></g><g><title>futil`calyx::passes::top_down_compile_control::calculate_states_recur (2 samples, 0.04%)</title><rect x="0.5983%" y="213" width="0.0443%" height="15" fill="rgb(240,125,3)" fg:x="27" fg:w="2"/><text x="0.8483%" y="223.50"></text></g><g><title>futil`calyx::passes::top_down_compile_control::calculate_states_recur (2 samples, 0.04%)</title><rect x="0.5983%" y="197" width="0.0443%" height="15" fill="rgb(205,98,50)" fg:x="27" fg:w="2"/><text x="0.8483%" y="207.50"></text></g><g><title>futil`calyx::passes::top_down_compile_control::calculate_states_recur (2 samples, 0.04%)</title><rect x="0.5983%" y="181" width="0.0443%" height="15" fill="rgb(205,185,37)" fg:x="27" fg:w="2"/><text x="0.8483%" y="191.50"></text></g><g><title>futil`calyx::ir::attribute::Attributes::get (1 samples, 0.02%)</title><rect x="0.6204%" y="165" width="0.0222%" height="15" fill="rgb(238,207,15)" fg:x="28" fg:w="1"/><text x="0.8704%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.6204%" y="149" width="0.0222%" height="15" fill="rgb(213,199,42)" fg:x="28" fg:w="1"/><text x="0.8704%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.6204%" y="133" width="0.0222%" height="15" fill="rgb(235,201,11)" fg:x="28" fg:w="1"/><text x="0.8704%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.6204%" y="117" width="0.0222%" height="15" fill="rgb(207,46,11)" fg:x="28" fg:w="1"/><text x="0.8704%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="0.6204%" y="101" width="0.0222%" height="15" fill="rgb(241,35,35)" fg:x="28" fg:w="1"/><text x="0.8704%" y="111.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::hash::Hash&gt;::hash (2 samples, 0.04%)</title><rect x="0.6426%" y="405" width="0.0443%" height="15" fill="rgb(243,32,47)" fg:x="29" fg:w="2"/><text x="0.8926%" y="415.50"></text></g><g><title>futil`&lt;calyx::passes::component_iniliner::ComponentInliner as calyx::ir::traversal::visitor::Visitor&gt;::start (1 samples, 0.02%)</title><rect x="0.6869%" y="405" width="0.0222%" height="15" fill="rgb(247,202,23)" fg:x="31" fg:w="1"/><text x="0.9369%" y="415.50"></text></g><g><title>futil`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="0.6869%" y="389" width="0.0222%" height="15" fill="rgb(219,102,11)" fg:x="31" fg:w="1"/><text x="0.9369%" y="399.50"></text></g><g><title>futil`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="0.6869%" y="373" width="0.0222%" height="15" fill="rgb(243,110,44)" fg:x="31" fg:w="1"/><text x="0.9369%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="0.6869%" y="357" width="0.0222%" height="15" fill="rgb(222,74,54)" fg:x="31" fg:w="1"/><text x="0.9369%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="0.6869%" y="341" width="0.0222%" height="15" fill="rgb(216,99,12)" fg:x="31" fg:w="1"/><text x="0.9369%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="0.6869%" y="325" width="0.0222%" height="15" fill="rgb(226,22,26)" fg:x="31" fg:w="1"/><text x="0.9369%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.6869%" y="309" width="0.0222%" height="15" fill="rgb(217,163,10)" fg:x="31" fg:w="1"/><text x="0.9369%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.6869%" y="293" width="0.0222%" height="15" fill="rgb(213,25,53)" fg:x="31" fg:w="1"/><text x="0.9369%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="0.6869%" y="277" width="0.0222%" height="15" fill="rgb(252,105,26)" fg:x="31" fg:w="1"/><text x="0.9369%" y="287.50"></text></g><g><title>futil`alloc::vec::Vec&lt;T,A&gt;::retain::_{{closure}} (1 samples, 0.02%)</title><rect x="0.7091%" y="389" width="0.0222%" height="15" fill="rgb(220,39,43)" fg:x="32" fg:w="1"/><text x="0.9591%" y="399.50"></text></g><g><title>futil`calyx::ir::guard::Guard::for_each (1 samples, 0.02%)</title><rect x="0.7312%" y="389" width="0.0222%" height="15" fill="rgb(229,68,48)" fg:x="33" fg:w="1"/><text x="0.9812%" y="399.50"></text></g><g><title>futil`calyx::ir::guard::Guard::for_each (1 samples, 0.02%)</title><rect x="0.7312%" y="373" width="0.0222%" height="15" fill="rgb(252,8,32)" fg:x="33" fg:w="1"/><text x="0.9812%" y="383.50"></text></g><g><title>futil`calyx::ir::structure::Assignment::for_each_port::_{{closure}} (1 samples, 0.02%)</title><rect x="0.7312%" y="357" width="0.0222%" height="15" fill="rgb(223,20,43)" fg:x="33" fg:w="1"/><text x="0.9812%" y="367.50"></text></g><g><title>futil`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="0.7312%" y="341" width="0.0222%" height="15" fill="rgb(229,81,49)" fg:x="33" fg:w="1"/><text x="0.9812%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.7312%" y="325" width="0.0222%" height="15" fill="rgb(236,28,36)" fg:x="33" fg:w="1"/><text x="0.9812%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="0.7312%" y="309" width="0.0222%" height="15" fill="rgb(249,185,26)" fg:x="33" fg:w="1"/><text x="0.9812%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="0.7312%" y="293" width="0.0222%" height="15" fill="rgb(249,174,33)" fg:x="33" fg:w="1"/><text x="0.9812%" y="303.50"></text></g><g><title>futil`&lt;calyx::passes::dead_cell_removal::DeadCellRemoval as calyx::ir::traversal::visitor::Visitor&gt;::finish (3 samples, 0.07%)</title><rect x="0.7091%" y="405" width="0.0665%" height="15" fill="rgb(233,201,37)" fg:x="32" fg:w="3"/><text x="0.9591%" y="415.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;calyx::ir::structure::Cell&gt;&gt; (1 samples, 0.02%)</title><rect x="0.7534%" y="389" width="0.0222%" height="15" fill="rgb(221,78,26)" fg:x="34" fg:w="1"/><text x="1.0034%" y="399.50"></text></g><g><title>futil`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.7534%" y="373" width="0.0222%" height="15" fill="rgb(250,127,30)" fg:x="34" fg:w="1"/><text x="1.0034%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.7534%" y="357" width="0.0222%" height="15" fill="rgb(230,49,44)" fg:x="34" fg:w="1"/><text x="1.0034%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="0.7534%" y="341" width="0.0222%" height="15" fill="rgb(229,67,23)" fg:x="34" fg:w="1"/><text x="1.0034%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="0.7534%" y="325" width="0.0222%" height="15" fill="rgb(249,83,47)" fg:x="34" fg:w="1"/><text x="1.0034%" y="335.50"></text></g><g><title>futil`&lt;calyx::passes::group_to_seq::GroupToSeq as calyx::ir::traversal::visitor::Visitor&gt;::start (1 samples, 0.02%)</title><rect x="0.7755%" y="405" width="0.0222%" height="15" fill="rgb(215,43,3)" fg:x="35" fg:w="1"/><text x="1.0255%" y="415.50"></text></g><g><title>futil`calyx::passes::group_to_seq::SplitAnalysis::get_split (1 samples, 0.02%)</title><rect x="0.7755%" y="389" width="0.0222%" height="15" fill="rgb(238,154,13)" fg:x="35" fg:w="1"/><text x="1.0255%" y="399.50"></text></g><g><title>futil`calyx::passes::group_to_seq::SplitAnalysis::make_group (1 samples, 0.02%)</title><rect x="0.7755%" y="373" width="0.0222%" height="15" fill="rgb(219,56,2)" fg:x="35" fg:w="1"/><text x="1.0255%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="0.7755%" y="357" width="0.0222%" height="15" fill="rgb(233,0,4)" fg:x="35" fg:w="1"/><text x="1.0255%" y="367.50"></text></g><g><title>futil`&lt;calyx::analysis::graph::GraphAnalysis as core::convert::From&lt;&amp;calyx::ir::structure::Group&gt;&gt;::from (1 samples, 0.02%)</title><rect x="0.7977%" y="389" width="0.0222%" height="15" fill="rgb(235,30,7)" fg:x="36" fg:w="1"/><text x="1.0477%" y="399.50"></text></g><g><title>futil`calyx::analysis::graph::GraphAnalysis::insert_assignment (1 samples, 0.02%)</title><rect x="0.7977%" y="373" width="0.0222%" height="15" fill="rgb(250,79,13)" fg:x="36" fg:w="1"/><text x="1.0477%" y="383.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.7977%" y="357" width="0.0222%" height="15" fill="rgb(211,146,34)" fg:x="36" fg:w="1"/><text x="1.0477%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.7977%" y="341" width="0.0222%" height="15" fill="rgb(228,22,38)" fg:x="36" fg:w="1"/><text x="1.0477%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.7977%" y="325" width="0.0222%" height="15" fill="rgb(235,168,5)" fg:x="36" fg:w="1"/><text x="1.0477%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.7977%" y="309" width="0.0222%" height="15" fill="rgb(221,155,16)" fg:x="36" fg:w="1"/><text x="1.0477%" y="319.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.8199%" y="389" width="0.0222%" height="15" fill="rgb(215,215,53)" fg:x="37" fg:w="1"/><text x="1.0699%" y="399.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.8199%" y="373" width="0.0222%" height="15" fill="rgb(223,4,10)" fg:x="37" fg:w="1"/><text x="1.0699%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.8199%" y="357" width="0.0222%" height="15" fill="rgb(234,103,6)" fg:x="37" fg:w="1"/><text x="1.0699%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.8199%" y="341" width="0.0222%" height="15" fill="rgb(227,97,0)" fg:x="37" fg:w="1"/><text x="1.0699%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.8199%" y="325" width="0.0222%" height="15" fill="rgb(234,150,53)" fg:x="37" fg:w="1"/><text x="1.0699%" y="335.50"></text></g><g><title>futil`&lt;itertools::unique_impl::UniqueBy&lt;I,V,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.8420%" y="389" width="0.0222%" height="15" fill="rgb(228,201,54)" fg:x="38" fg:w="1"/><text x="1.0920%" y="399.50"></text></g><g><title>futil`&lt;itertools::unique_impl::UniqueBy&lt;I,V,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.8420%" y="373" width="0.0222%" height="15" fill="rgb(222,22,37)" fg:x="38" fg:w="1"/><text x="1.0920%" y="383.50"></text></g><g><title>futil`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="0.8420%" y="357" width="0.0222%" height="15" fill="rgb(237,53,32)" fg:x="38" fg:w="1"/><text x="1.0920%" y="367.50"></text></g><g><title>futil`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="0.8420%" y="341" width="0.0222%" height="15" fill="rgb(233,25,53)" fg:x="38" fg:w="1"/><text x="1.0920%" y="351.50"></text></g><g><title>futil`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="0.8420%" y="325" width="0.0222%" height="15" fill="rgb(210,40,34)" fg:x="38" fg:w="1"/><text x="1.0920%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="0.8420%" y="309" width="0.0222%" height="15" fill="rgb(241,220,44)" fg:x="38" fg:w="1"/><text x="1.0920%" y="319.50"></text></g><g><title>futil`calyx::ir::attribute::Attributes::get (1 samples, 0.02%)</title><rect x="0.8642%" y="389" width="0.0222%" height="15" fill="rgb(235,28,35)" fg:x="39" fg:w="1"/><text x="1.1142%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="0.8642%" y="373" width="0.0222%" height="15" fill="rgb(210,56,17)" fg:x="39" fg:w="1"/><text x="1.1142%" y="383.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::analysis::graph::GraphAnalysis&gt; (1 samples, 0.02%)</title><rect x="0.8863%" y="389" width="0.0222%" height="15" fill="rgb(224,130,29)" fg:x="40" fg:w="1"/><text x="1.1363%" y="399.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::structure::Canonical&gt; (1 samples, 0.02%)</title><rect x="0.8863%" y="373" width="0.0222%" height="15" fill="rgb(235,212,8)" fg:x="40" fg:w="1"/><text x="1.1363%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.8863%" y="357" width="0.0222%" height="15" fill="rgb(223,33,50)" fg:x="40" fg:w="1"/><text x="1.1363%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="0.8863%" y="341" width="0.0222%" height="15" fill="rgb(219,149,13)" fg:x="40" fg:w="1"/><text x="1.1363%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="0.8863%" y="325" width="0.0222%" height="15" fill="rgb(250,156,29)" fg:x="40" fg:w="1"/><text x="1.1363%" y="335.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::structure::Canonical&gt; (1 samples, 0.02%)</title><rect x="0.9085%" y="389" width="0.0222%" height="15" fill="rgb(216,193,19)" fg:x="41" fg:w="1"/><text x="1.1585%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="0.9085%" y="373" width="0.0222%" height="15" fill="rgb(216,135,14)" fg:x="41" fg:w="1"/><text x="1.1585%" y="383.50"></text></g><g><title>futil`fixedbitset::FixedBitSet::with_capacity (1 samples, 0.02%)</title><rect x="0.9306%" y="389" width="0.0222%" height="15" fill="rgb(241,47,5)" fg:x="42" fg:w="1"/><text x="1.1806%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.02%)</title><rect x="0.9306%" y="373" width="0.0222%" height="15" fill="rgb(233,42,35)" fg:x="42" fg:w="1"/><text x="1.1806%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.9306%" y="357" width="0.0222%" height="15" fill="rgb(231,13,6)" fg:x="42" fg:w="1"/><text x="1.1806%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.9306%" y="341" width="0.0222%" height="15" fill="rgb(207,181,40)" fg:x="42" fg:w="1"/><text x="1.1806%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.9528%" y="389" width="0.0222%" height="15" fill="rgb(254,173,49)" fg:x="43" fg:w="1"/><text x="1.2028%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.9528%" y="373" width="0.0222%" height="15" fill="rgb(221,1,38)" fg:x="43" fg:w="1"/><text x="1.2028%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.9528%" y="357" width="0.0222%" height="15" fill="rgb(206,124,46)" fg:x="43" fg:w="1"/><text x="1.2028%" y="367.50"></text></g><g><title>futil`&lt;calyx::passes::infer_static_timing::InferStaticTiming as calyx::ir::traversal::visitor::Visitor&gt;::start (9 samples, 0.20%)</title><rect x="0.7977%" y="405" width="0.1994%" height="15" fill="rgb(249,21,11)" fg:x="36" fg:w="9"/><text x="1.0477%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="0.9750%" y="389" width="0.0222%" height="15" fill="rgb(222,201,40)" fg:x="44" fg:w="1"/><text x="1.2250%" y="399.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.0636%" y="373" width="0.0222%" height="15" fill="rgb(235,61,29)" fg:x="48" fg:w="1"/><text x="1.3136%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1.0636%" y="357" width="0.0222%" height="15" fill="rgb(219,207,3)" fg:x="48" fg:w="1"/><text x="1.3136%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.0636%" y="341" width="0.0222%" height="15" fill="rgb(222,56,46)" fg:x="48" fg:w="1"/><text x="1.3136%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.0636%" y="325" width="0.0222%" height="15" fill="rgb(239,76,54)" fg:x="48" fg:w="1"/><text x="1.3136%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="1.0636%" y="309" width="0.0222%" height="15" fill="rgb(231,124,27)" fg:x="48" fg:w="1"/><text x="1.3136%" y="319.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::structure::Canonical&gt; (1 samples, 0.02%)</title><rect x="1.0858%" y="373" width="0.0222%" height="15" fill="rgb(249,195,6)" fg:x="49" fg:w="1"/><text x="1.3358%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="1.0858%" y="357" width="0.0222%" height="15" fill="rgb(237,174,47)" fg:x="49" fg:w="1"/><text x="1.3358%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="1.0858%" y="341" width="0.0222%" height="15" fill="rgb(206,201,31)" fg:x="49" fg:w="1"/><text x="1.3358%" y="351.50"></text></g><g><title>futil`&lt;calyx::passes::merge_assign::MergeAssign as calyx::ir::traversal::visitor::Visitor&gt;::start (10 samples, 0.22%)</title><rect x="0.9971%" y="405" width="0.2216%" height="15" fill="rgb(231,57,52)" fg:x="45" fg:w="10"/><text x="1.2471%" y="415.50"></text></g><g><title>futil`calyx::passes::merge_assign::merge_assigns (10 samples, 0.22%)</title><rect x="0.9971%" y="389" width="0.2216%" height="15" fill="rgb(248,177,22)" fg:x="45" fg:w="10"/><text x="1.2471%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.11%)</title><rect x="1.1079%" y="373" width="0.1108%" height="15" fill="rgb(215,211,37)" fg:x="50" fg:w="5"/><text x="1.3579%" y="383.50"></text></g><g><title>futil`&lt;calyx::passes::reset_insertion::ResetInsertion as calyx::ir::traversal::visitor::Visitor&gt;::start (1 samples, 0.02%)</title><rect x="1.2187%" y="405" width="0.0222%" height="15" fill="rgb(241,128,51)" fg:x="55" fg:w="1"/><text x="1.4687%" y="415.50"></text></g><g><title>futil`calyx::ir::attribute::Attributes::get (1 samples, 0.02%)</title><rect x="1.2187%" y="389" width="0.0222%" height="15" fill="rgb(227,165,31)" fg:x="55" fg:w="1"/><text x="1.4687%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="1.2187%" y="373" width="0.0222%" height="15" fill="rgb(228,167,24)" fg:x="55" fg:w="1"/><text x="1.4687%" y="383.50"></text></g><g><title>futil`calyx::ir::component::IdList&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="1.2409%" y="373" width="0.0222%" height="15" fill="rgb(228,143,12)" fg:x="56" fg:w="1"/><text x="1.4909%" y="383.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.2409%" y="357" width="0.0222%" height="15" fill="rgb(249,149,8)" fg:x="56" fg:w="1"/><text x="1.4909%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1.2409%" y="341" width="0.0222%" height="15" fill="rgb(243,35,44)" fg:x="56" fg:w="1"/><text x="1.4909%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.2409%" y="325" width="0.0222%" height="15" fill="rgb(246,89,9)" fg:x="56" fg:w="1"/><text x="1.4909%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.2409%" y="309" width="0.0222%" height="15" fill="rgb(233,213,13)" fg:x="56" fg:w="1"/><text x="1.4909%" y="319.50"></text></g><g><title>futil`calyx::ir::builder::Builder::add_primitive (2 samples, 0.04%)</title><rect x="1.2409%" y="389" width="0.0443%" height="15" fill="rgb(233,141,41)" fg:x="56" fg:w="2"/><text x="1.4909%" y="399.50"></text></g><g><title>futil`calyx::utils::namegenerator::NameGenerator::gen_name (1 samples, 0.02%)</title><rect x="1.2630%" y="373" width="0.0222%" height="15" fill="rgb(239,167,4)" fg:x="57" fg:w="1"/><text x="1.5130%" y="383.50"></text></g><g><title>futil`core::fmt::write (1 samples, 0.02%)</title><rect x="1.2630%" y="357" width="0.0222%" height="15" fill="rgb(209,217,16)" fg:x="57" fg:w="1"/><text x="1.5130%" y="367.50"></text></g><g><title>futil`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.2630%" y="341" width="0.0222%" height="15" fill="rgb(219,88,35)" fg:x="57" fg:w="1"/><text x="1.5130%" y="351.50"></text></g><g><title>futil`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.2630%" y="325" width="0.0222%" height="15" fill="rgb(220,193,23)" fg:x="57" fg:w="1"/><text x="1.5130%" y="335.50"></text></g><g><title>futil`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.2630%" y="309" width="0.0222%" height="15" fill="rgb(230,90,52)" fg:x="57" fg:w="1"/><text x="1.5130%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1.2630%" y="293" width="0.0222%" height="15" fill="rgb(252,106,19)" fg:x="57" fg:w="1"/><text x="1.5130%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.2630%" y="277" width="0.0222%" height="15" fill="rgb(206,74,20)" fg:x="57" fg:w="1"/><text x="1.5130%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.2630%" y="261" width="0.0222%" height="15" fill="rgb(230,138,44)" fg:x="57" fg:w="1"/><text x="1.5130%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="1.2630%" y="245" width="0.0222%" height="15" fill="rgb(235,182,43)" fg:x="57" fg:w="1"/><text x="1.5130%" y="255.50"></text></g><g><title>futil`&lt;calyx::passes::wire_inliner::WireInliner as calyx::ir::traversal::visitor::Visitor&gt;::start (3 samples, 0.07%)</title><rect x="1.2409%" y="405" width="0.0665%" height="15" fill="rgb(242,16,51)" fg:x="56" fg:w="3"/><text x="1.4909%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="1.2852%" y="389" width="0.0222%" height="15" fill="rgb(248,9,4)" fg:x="58" fg:w="1"/><text x="1.5352%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="1.3517%" y="373" width="0.0222%" height="15" fill="rgb(210,31,22)" fg:x="61" fg:w="1"/><text x="1.6017%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="1.3517%" y="357" width="0.0222%" height="15" fill="rgb(239,54,39)" fg:x="61" fg:w="1"/><text x="1.6017%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="1.3517%" y="341" width="0.0222%" height="15" fill="rgb(230,99,41)" fg:x="61" fg:w="1"/><text x="1.6017%" y="351.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (4 samples, 0.09%)</title><rect x="1.3073%" y="389" width="0.0886%" height="15" fill="rgb(253,106,12)" fg:x="59" fg:w="4"/><text x="1.5573%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="1.3738%" y="373" width="0.0222%" height="15" fill="rgb(213,46,41)" fg:x="62" fg:w="1"/><text x="1.6238%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="1.3738%" y="357" width="0.0222%" height="15" fill="rgb(215,133,35)" fg:x="62" fg:w="1"/><text x="1.6238%" y="367.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="1.3073%" y="405" width="0.1108%" height="15" fill="rgb(213,28,5)" fg:x="59" fg:w="5"/><text x="1.5573%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="1.3960%" y="389" width="0.0222%" height="15" fill="rgb(215,77,49)" fg:x="63" fg:w="1"/><text x="1.6460%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="1.3960%" y="373" width="0.0222%" height="15" fill="rgb(248,100,22)" fg:x="63" fg:w="1"/><text x="1.6460%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="1.3960%" y="357" width="0.0222%" height="15" fill="rgb(208,67,9)" fg:x="63" fg:w="1"/><text x="1.6460%" y="367.50"></text></g><g><title>futil`calyx::ir::traversal::visitor::Visitor::do_pass (3 samples, 0.07%)</title><rect x="1.4181%" y="405" width="0.0665%" height="15" fill="rgb(219,133,21)" fg:x="64" fg:w="3"/><text x="1.6681%" y="415.50"></text></g><g><title>futil`&lt;calyx::passes::comb_prop::CombProp as calyx::ir::traversal::visitor::Visitor&gt;::start (3 samples, 0.07%)</title><rect x="1.4181%" y="389" width="0.0665%" height="15" fill="rgb(246,46,29)" fg:x="64" fg:w="3"/><text x="1.6681%" y="399.50"></text></g><g><title>futil`&lt;calyx::passes::comb_prop::CombProp as calyx::ir::traversal::visitor::Visitor&gt;::start::_{{closure}}::_{{closure}} (3 samples, 0.07%)</title><rect x="1.4181%" y="373" width="0.0665%" height="15" fill="rgb(246,185,52)" fg:x="64" fg:w="3"/><text x="1.6681%" y="383.50"></text></g><g><title>futil`calyx::ir::structure::Port::get_parent_name (1 samples, 0.02%)</title><rect x="1.4624%" y="357" width="0.0222%" height="15" fill="rgb(252,136,11)" fg:x="66" fg:w="1"/><text x="1.7124%" y="367.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.4624%" y="341" width="0.0222%" height="15" fill="rgb(219,138,53)" fg:x="66" fg:w="1"/><text x="1.7124%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1.4624%" y="325" width="0.0222%" height="15" fill="rgb(211,51,23)" fg:x="66" fg:w="1"/><text x="1.7124%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.4624%" y="309" width="0.0222%" height="15" fill="rgb(247,221,28)" fg:x="66" fg:w="1"/><text x="1.7124%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.4624%" y="293" width="0.0222%" height="15" fill="rgb(251,222,45)" fg:x="66" fg:w="1"/><text x="1.7124%" y="303.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="7.3565%" y="389" width="0.0222%" height="15" fill="rgb(217,162,53)" fg:x="332" fg:w="1"/><text x="7.6065%" y="399.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="7.3565%" y="373" width="0.0222%" height="15" fill="rgb(229,93,14)" fg:x="332" fg:w="1"/><text x="7.6065%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="7.3565%" y="357" width="0.0222%" height="15" fill="rgb(209,67,49)" fg:x="332" fg:w="1"/><text x="7.6065%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="7.3565%" y="341" width="0.0222%" height="15" fill="rgb(213,87,29)" fg:x="332" fg:w="1"/><text x="7.6065%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="7.3565%" y="325" width="0.0222%" height="15" fill="rgb(205,151,52)" fg:x="332" fg:w="1"/><text x="7.6065%" y="335.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::hash::Hash&gt;::hash (141 samples, 3.12%)</title><rect x="7.3787%" y="389" width="3.1243%" height="15" fill="rgb(253,215,39)" fg:x="333" fg:w="141"/><text x="7.6287%" y="399.50">fut..</text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (81 samples, 1.79%)</title><rect x="8.7082%" y="373" width="1.7948%" height="15" fill="rgb(221,220,41)" fg:x="393" fg:w="81"/><text x="8.9582%" y="383.50">f..</text></g><g><title>futil`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="10.5473%" y="325" width="0.0222%" height="15" fill="rgb(218,133,21)" fg:x="476" fg:w="1"/><text x="10.7973%" y="335.50"></text></g><g><title>futil`core::fmt::write (1 samples, 0.02%)</title><rect x="10.5473%" y="309" width="0.0222%" height="15" fill="rgb(221,193,43)" fg:x="476" fg:w="1"/><text x="10.7973%" y="319.50"></text></g><g><title>futil`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="10.5473%" y="293" width="0.0222%" height="15" fill="rgb(240,128,52)" fg:x="476" fg:w="1"/><text x="10.7973%" y="303.50"></text></g><g><title>futil`std::io::Write::write_all (1 samples, 0.02%)</title><rect x="10.5473%" y="277" width="0.0222%" height="15" fill="rgb(253,114,12)" fg:x="476" fg:w="1"/><text x="10.7973%" y="287.50"></text></g><g><title>futil`core::fmt::write (6 samples, 0.13%)</title><rect x="10.5030%" y="341" width="0.1329%" height="15" fill="rgb(215,223,47)" fg:x="474" fg:w="6"/><text x="10.7530%" y="351.50"></text></g><g><title>futil`&lt;core::fmt::Arguments as core::fmt::Display&gt;::fmt (3 samples, 0.07%)</title><rect x="10.5695%" y="325" width="0.0665%" height="15" fill="rgb(248,225,23)" fg:x="477" fg:w="3"/><text x="10.8195%" y="335.50"></text></g><g><title>futil`core::fmt::write (3 samples, 0.07%)</title><rect x="10.5695%" y="309" width="0.0665%" height="15" fill="rgb(250,108,0)" fg:x="477" fg:w="3"/><text x="10.8195%" y="319.50"></text></g><g><title>futil`&lt;env_logger::fmt::writer::termcolor::imp::StyledValue&lt;T&gt; as core::fmt::Display&gt;::fmt (3 samples, 0.07%)</title><rect x="10.5695%" y="293" width="0.0665%" height="15" fill="rgb(228,208,7)" fg:x="477" fg:w="3"/><text x="10.8195%" y="303.50"></text></g><g><title>futil`core::fmt::Formatter::pad (2 samples, 0.04%)</title><rect x="10.5916%" y="277" width="0.0443%" height="15" fill="rgb(244,45,10)" fg:x="478" fg:w="2"/><text x="10.8416%" y="287.50"></text></g><g><title>futil`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="10.6138%" y="261" width="0.0222%" height="15" fill="rgb(207,125,25)" fg:x="479" fg:w="1"/><text x="10.8638%" y="271.50"></text></g><g><title>futil`std::io::Write::write_all (1 samples, 0.02%)</title><rect x="10.6138%" y="245" width="0.0222%" height="15" fill="rgb(210,195,18)" fg:x="479" fg:w="1"/><text x="10.8638%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="10.6138%" y="229" width="0.0222%" height="15" fill="rgb(249,80,12)" fg:x="479" fg:w="1"/><text x="10.8638%" y="239.50"></text></g><g><title>futil`env_logger::fmt::Builder::build::_{{closure}} (9 samples, 0.20%)</title><rect x="10.5030%" y="357" width="0.1994%" height="15" fill="rgb(221,65,9)" fg:x="474" fg:w="9"/><text x="10.7530%" y="367.50"></text></g><g><title>futil`env_logger::fmt::DefaultFormat::write_header_value (3 samples, 0.07%)</title><rect x="10.6359%" y="341" width="0.0665%" height="15" fill="rgb(235,49,36)" fg:x="480" fg:w="3"/><text x="10.8859%" y="351.50"></text></g><g><title>futil`core::fmt::write (3 samples, 0.07%)</title><rect x="10.6359%" y="325" width="0.0665%" height="15" fill="rgb(225,32,20)" fg:x="480" fg:w="3"/><text x="10.8859%" y="335.50"></text></g><g><title>futil`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.07%)</title><rect x="10.6359%" y="309" width="0.0665%" height="15" fill="rgb(215,141,46)" fg:x="480" fg:w="3"/><text x="10.8859%" y="319.50"></text></g><g><title>futil`std::io::Write::write_all (3 samples, 0.07%)</title><rect x="10.6359%" y="293" width="0.0665%" height="15" fill="rgb(250,160,47)" fg:x="480" fg:w="3"/><text x="10.8859%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.07%)</title><rect x="10.6359%" y="277" width="0.0665%" height="15" fill="rgb(216,222,40)" fg:x="480" fg:w="3"/><text x="10.8859%" y="287.50"></text></g><g><title>futil`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="10.7246%" y="341" width="0.0222%" height="15" fill="rgb(234,217,39)" fg:x="484" fg:w="1"/><text x="10.9746%" y="351.50"></text></g><g><title>futil`std::io::Write::write_all (44 samples, 0.97%)</title><rect x="10.7024%" y="357" width="0.9750%" height="15" fill="rgb(207,178,40)" fg:x="483" fg:w="44"/><text x="10.9524%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`write (42 samples, 0.93%)</title><rect x="10.7467%" y="341" width="0.9306%" height="15" fill="rgb(221,136,13)" fg:x="485" fg:w="42"/><text x="10.9967%" y="351.50"></text></g><g><title>futil`&lt;env_logger::Logger as log::Log&gt;::log (56 samples, 1.24%)</title><rect x="10.5030%" y="389" width="1.2409%" height="15" fill="rgb(249,199,10)" fg:x="474" fg:w="56"/><text x="10.7530%" y="399.50"></text></g><g><title>futil`&lt;env_logger::Logger as log::Log&gt;::log::_{{closure}} (56 samples, 1.24%)</title><rect x="10.5030%" y="373" width="1.2409%" height="15" fill="rgb(249,222,13)" fg:x="474" fg:w="56"/><text x="10.7530%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.07%)</title><rect x="11.6774%" y="357" width="0.0665%" height="15" fill="rgb(244,185,38)" fg:x="527" fg:w="3"/><text x="11.9274%" y="367.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="11.7439%" y="389" width="0.0665%" height="15" fill="rgb(236,202,9)" fg:x="530" fg:w="3"/><text x="11.9939%" y="399.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;(calyx::ir::id::Id,std::collections::hash::set::HashSet&lt;calyx::ir::id::Id&gt;)&gt; (3 samples, 0.07%)</title><rect x="11.7439%" y="373" width="0.0665%" height="15" fill="rgb(250,229,37)" fg:x="530" fg:w="3"/><text x="11.9939%" y="383.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (3 samples, 0.07%)</title><rect x="11.7439%" y="357" width="0.0665%" height="15" fill="rgb(206,174,23)" fg:x="530" fg:w="3"/><text x="11.9939%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.07%)</title><rect x="11.7439%" y="341" width="0.0665%" height="15" fill="rgb(211,33,43)" fg:x="530" fg:w="3"/><text x="11.9939%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.04%)</title><rect x="11.7660%" y="325" width="0.0443%" height="15" fill="rgb(245,58,50)" fg:x="531" fg:w="2"/><text x="12.0160%" y="335.50"></text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="11.8103%" y="389" width="0.0665%" height="15" fill="rgb(244,68,36)" fg:x="533" fg:w="3"/><text x="12.0603%" y="399.50"></text></g><g><title>futil`calyx::analysis::graph_coloring::GraphColoring&lt;T&gt;::color_greedy (1 samples, 0.02%)</title><rect x="11.8768%" y="389" width="0.0222%" height="15" fill="rgb(232,229,15)" fg:x="536" fg:w="1"/><text x="12.1268%" y="399.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="11.8990%" y="373" width="0.0222%" height="15" fill="rgb(254,30,23)" fg:x="537" fg:w="1"/><text x="12.1490%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="11.8990%" y="357" width="0.0222%" height="15" fill="rgb(235,160,14)" fg:x="537" fg:w="1"/><text x="12.1490%" y="367.50"></text></g><g><title>futil`&lt;itertools::unique_impl::UniqueBy&lt;I,V,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="11.9211%" y="373" width="0.0222%" height="15" fill="rgb(212,155,44)" fg:x="538" fg:w="1"/><text x="12.1711%" y="383.50"></text></g><g><title>futil`&lt;itertools::unique_impl::UniqueBy&lt;I,V,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="11.9211%" y="357" width="0.0222%" height="15" fill="rgb(226,2,50)" fg:x="538" fg:w="1"/><text x="12.1711%" y="367.50"></text></g><g><title>futil`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="11.9211%" y="341" width="0.0222%" height="15" fill="rgb(234,177,6)" fg:x="538" fg:w="1"/><text x="12.1711%" y="351.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="11.9654%" y="325" width="0.0443%" height="15" fill="rgb(217,24,9)" fg:x="540" fg:w="2"/><text x="12.2154%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="11.9876%" y="309" width="0.0222%" height="15" fill="rgb(220,13,46)" fg:x="541" fg:w="1"/><text x="12.2376%" y="319.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.09%)</title><rect x="11.9433%" y="341" width="0.0886%" height="15" fill="rgb(239,221,27)" fg:x="539" fg:w="4"/><text x="12.1933%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="12.0097%" y="325" width="0.0222%" height="15" fill="rgb(222,198,25)" fg:x="542" fg:w="1"/><text x="12.2597%" y="335.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (5 samples, 0.11%)</title><rect x="11.9433%" y="373" width="0.1108%" height="15" fill="rgb(211,99,13)" fg:x="539" fg:w="5"/><text x="12.1933%" y="383.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="11.9433%" y="357" width="0.1108%" height="15" fill="rgb(232,111,31)" fg:x="539" fg:w="5"/><text x="12.1933%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="12.0319%" y="341" width="0.0222%" height="15" fill="rgb(245,82,37)" fg:x="543" fg:w="1"/><text x="12.2819%" y="351.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::LiveRangeAnalysis::add_shareable_ranges (8 samples, 0.18%)</title><rect x="11.8990%" y="389" width="0.1773%" height="15" fill="rgb(227,149,46)" fg:x="537" fg:w="8"/><text x="12.1490%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="12.0541%" y="373" width="0.0222%" height="15" fill="rgb(218,36,50)" fg:x="544" fg:w="1"/><text x="12.3041%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="12.0541%" y="357" width="0.0222%" height="15" fill="rgb(226,80,48)" fg:x="544" fg:w="1"/><text x="12.3041%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="12.0541%" y="341" width="0.0222%" height="15" fill="rgb(238,224,15)" fg:x="544" fg:w="1"/><text x="12.3041%" y="351.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.0762%" y="325" width="0.0222%" height="15" fill="rgb(241,136,10)" fg:x="545" fg:w="1"/><text x="12.3262%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="12.0762%" y="309" width="0.0222%" height="15" fill="rgb(208,32,45)" fg:x="545" fg:w="1"/><text x="12.3262%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="12.0762%" y="293" width="0.0222%" height="15" fill="rgb(207,135,9)" fg:x="545" fg:w="1"/><text x="12.3262%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="12.0762%" y="277" width="0.0222%" height="15" fill="rgb(206,86,44)" fg:x="545" fg:w="1"/><text x="12.3262%" y="287.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (1 samples, 0.02%)</title><rect x="12.0984%" y="325" width="0.0222%" height="15" fill="rgb(245,177,15)" fg:x="546" fg:w="1"/><text x="12.3484%" y="335.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.0984%" y="309" width="0.0222%" height="15" fill="rgb(206,64,50)" fg:x="546" fg:w="1"/><text x="12.3484%" y="319.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.0984%" y="293" width="0.0222%" height="15" fill="rgb(234,36,40)" fg:x="546" fg:w="1"/><text x="12.3484%" y="303.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.0984%" y="277" width="0.0222%" height="15" fill="rgb(213,64,8)" fg:x="546" fg:w="1"/><text x="12.3484%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="12.0984%" y="261" width="0.0222%" height="15" fill="rgb(210,75,36)" fg:x="546" fg:w="1"/><text x="12.3484%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.0984%" y="245" width="0.0222%" height="15" fill="rgb(229,88,21)" fg:x="546" fg:w="1"/><text x="12.3484%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.0984%" y="229" width="0.0222%" height="15" fill="rgb(252,204,47)" fg:x="546" fg:w="1"/><text x="12.3484%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="12.0984%" y="213" width="0.0222%" height="15" fill="rgb(208,77,27)" fg:x="546" fg:w="1"/><text x="12.3484%" y="223.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.1649%" y="261" width="0.0222%" height="15" fill="rgb(221,76,26)" fg:x="549" fg:w="1"/><text x="12.4149%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="12.1649%" y="245" width="0.0222%" height="15" fill="rgb(225,139,18)" fg:x="549" fg:w="1"/><text x="12.4149%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.1649%" y="229" width="0.0222%" height="15" fill="rgb(230,137,11)" fg:x="549" fg:w="1"/><text x="12.4149%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.1649%" y="213" width="0.0222%" height="15" fill="rgb(212,28,1)" fg:x="549" fg:w="1"/><text x="12.4149%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="12.1649%" y="197" width="0.0222%" height="15" fill="rgb(248,164,17)" fg:x="549" fg:w="1"/><text x="12.4149%" y="207.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.1870%" y="261" width="0.0222%" height="15" fill="rgb(222,171,42)" fg:x="550" fg:w="1"/><text x="12.4370%" y="271.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.1870%" y="245" width="0.0222%" height="15" fill="rgb(243,84,45)" fg:x="550" fg:w="1"/><text x="12.4370%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="12.1870%" y="229" width="0.0222%" height="15" fill="rgb(252,49,23)" fg:x="550" fg:w="1"/><text x="12.4370%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.1870%" y="213" width="0.0222%" height="15" fill="rgb(215,19,7)" fg:x="550" fg:w="1"/><text x="12.4370%" y="223.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="12.1205%" y="277" width="0.1108%" height="15" fill="rgb(238,81,41)" fg:x="547" fg:w="5"/><text x="12.3705%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="12.2092%" y="261" width="0.0222%" height="15" fill="rgb(210,199,37)" fg:x="551" fg:w="1"/><text x="12.4592%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.2092%" y="245" width="0.0222%" height="15" fill="rgb(244,192,49)" fg:x="551" fg:w="1"/><text x="12.4592%" y="255.50"></text></g><g><title>futil`&lt;&amp;calyx::analysis::live_range_analysis::Prop as core::ops::arith::Sub&lt;&amp;calyx::analysis::live_range_analysis::Prop&gt;&gt;::sub (6 samples, 0.13%)</title><rect x="12.1205%" y="293" width="0.1329%" height="15" fill="rgb(226,211,11)" fg:x="547" fg:w="6"/><text x="12.3705%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="12.2313%" y="277" width="0.0222%" height="15" fill="rgb(236,162,54)" fg:x="552" fg:w="1"/><text x="12.4813%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="12.2313%" y="261" width="0.0222%" height="15" fill="rgb(220,229,9)" fg:x="552" fg:w="1"/><text x="12.4813%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="12.2313%" y="245" width="0.0222%" height="15" fill="rgb(250,87,22)" fg:x="552" fg:w="1"/><text x="12.4813%" y="255.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.2535%" y="277" width="0.0222%" height="15" fill="rgb(239,43,17)" fg:x="553" fg:w="1"/><text x="12.5035%" y="287.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.2535%" y="261" width="0.0222%" height="15" fill="rgb(231,177,25)" fg:x="553" fg:w="1"/><text x="12.5035%" y="271.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_in_place (1 samples, 0.02%)</title><rect x="12.2756%" y="277" width="0.0222%" height="15" fill="rgb(219,179,1)" fg:x="554" fg:w="1"/><text x="12.5256%" y="287.50"></text></g><g><title>futil`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="12.2756%" y="261" width="0.0222%" height="15" fill="rgb(238,219,53)" fg:x="554" fg:w="1"/><text x="12.5256%" y="271.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="12.2756%" y="245" width="0.0222%" height="15" fill="rgb(232,167,36)" fg:x="554" fg:w="1"/><text x="12.5256%" y="255.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="12.2978%" y="245" width="0.0443%" height="15" fill="rgb(244,19,51)" fg:x="555" fg:w="2"/><text x="12.5478%" y="255.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="12.2978%" y="229" width="0.0443%" height="15" fill="rgb(224,6,22)" fg:x="555" fg:w="2"/><text x="12.5478%" y="239.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="12.2978%" y="213" width="0.0443%" height="15" fill="rgb(224,145,5)" fg:x="555" fg:w="2"/><text x="12.5478%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="12.2978%" y="197" width="0.0443%" height="15" fill="rgb(234,130,49)" fg:x="555" fg:w="2"/><text x="12.5478%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="12.2978%" y="181" width="0.0443%" height="15" fill="rgb(254,6,2)" fg:x="555" fg:w="2"/><text x="12.5478%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="12.2978%" y="165" width="0.0443%" height="15" fill="rgb(208,96,46)" fg:x="555" fg:w="2"/><text x="12.5478%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="12.3200%" y="149" width="0.0222%" height="15" fill="rgb(239,3,39)" fg:x="556" fg:w="1"/><text x="12.5700%" y="159.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::LiveRangeAnalysis::find_gen_kill_group (1 samples, 0.02%)</title><rect x="12.3421%" y="245" width="0.0222%" height="15" fill="rgb(233,210,1)" fg:x="557" fg:w="1"/><text x="12.5921%" y="255.50"></text></g><g><title>futil`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="12.3421%" y="229" width="0.0222%" height="15" fill="rgb(244,137,37)" fg:x="557" fg:w="1"/><text x="12.5921%" y="239.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (1 samples, 0.02%)</title><rect x="12.3643%" y="245" width="0.0222%" height="15" fill="rgb(240,136,2)" fg:x="558" fg:w="1"/><text x="12.6143%" y="255.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.3643%" y="229" width="0.0222%" height="15" fill="rgb(239,18,37)" fg:x="558" fg:w="1"/><text x="12.6143%" y="239.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.3864%" y="229" width="0.0222%" height="15" fill="rgb(218,185,22)" fg:x="559" fg:w="1"/><text x="12.6364%" y="239.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="12.3864%" y="213" width="0.0222%" height="15" fill="rgb(225,218,4)" fg:x="559" fg:w="1"/><text x="12.6364%" y="223.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::transfer_set (2 samples, 0.04%)</title><rect x="12.3864%" y="245" width="0.0443%" height="15" fill="rgb(230,182,32)" fg:x="559" fg:w="2"/><text x="12.6364%" y="255.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (1 samples, 0.02%)</title><rect x="12.4086%" y="229" width="0.0222%" height="15" fill="rgb(242,56,43)" fg:x="560" fg:w="1"/><text x="12.6586%" y="239.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.4086%" y="213" width="0.0222%" height="15" fill="rgb(233,99,24)" fg:x="560" fg:w="1"/><text x="12.6586%" y="223.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.4086%" y="197" width="0.0222%" height="15" fill="rgb(234,209,42)" fg:x="560" fg:w="1"/><text x="12.6586%" y="207.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.4086%" y="181" width="0.0222%" height="15" fill="rgb(227,7,12)" fg:x="560" fg:w="1"/><text x="12.6586%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="12.4086%" y="165" width="0.0222%" height="15" fill="rgb(245,203,43)" fg:x="560" fg:w="1"/><text x="12.6586%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.4086%" y="149" width="0.0222%" height="15" fill="rgb(238,205,33)" fg:x="560" fg:w="1"/><text x="12.6586%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.4086%" y="133" width="0.0222%" height="15" fill="rgb(231,56,7)" fg:x="560" fg:w="1"/><text x="12.6586%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="12.4086%" y="117" width="0.0222%" height="15" fill="rgb(244,186,29)" fg:x="560" fg:w="1"/><text x="12.6586%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="12.4086%" y="101" width="0.0222%" height="15" fill="rgb(234,111,31)" fg:x="560" fg:w="1"/><text x="12.6586%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="12.4529%" y="181" width="0.0222%" height="15" fill="rgb(241,149,10)" fg:x="562" fg:w="1"/><text x="12.7029%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="12.4529%" y="165" width="0.0222%" height="15" fill="rgb(249,206,44)" fg:x="562" fg:w="1"/><text x="12.7029%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="12.4529%" y="149" width="0.0222%" height="15" fill="rgb(251,153,30)" fg:x="562" fg:w="1"/><text x="12.7029%" y="159.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="12.4529%" y="213" width="0.1108%" height="15" fill="rgb(239,152,38)" fg:x="562" fg:w="5"/><text x="12.7029%" y="223.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (5 samples, 0.11%)</title><rect x="12.4529%" y="197" width="0.1108%" height="15" fill="rgb(249,139,47)" fg:x="562" fg:w="5"/><text x="12.7029%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.09%)</title><rect x="12.4751%" y="181" width="0.0886%" height="15" fill="rgb(244,64,35)" fg:x="563" fg:w="4"/><text x="12.7251%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.04%)</title><rect x="12.5194%" y="165" width="0.0443%" height="15" fill="rgb(216,46,15)" fg:x="565" fg:w="2"/><text x="12.7694%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.04%)</title><rect x="12.5194%" y="149" width="0.0443%" height="15" fill="rgb(250,74,19)" fg:x="565" fg:w="2"/><text x="12.7694%" y="159.50"></text></g><g><title>futil`&lt;calyx::analysis::graph::GraphAnalysis as core::convert::From&lt;&amp;calyx::ir::structure::Group&gt;&gt;::from (1 samples, 0.02%)</title><rect x="12.5637%" y="197" width="0.0222%" height="15" fill="rgb(249,42,33)" fg:x="567" fg:w="1"/><text x="12.8137%" y="207.50"></text></g><g><title>futil`calyx::analysis::graph::GraphAnalysis::insert_assignment (1 samples, 0.02%)</title><rect x="12.5637%" y="181" width="0.0222%" height="15" fill="rgb(242,149,17)" fg:x="567" fg:w="1"/><text x="12.8137%" y="191.50"></text></g><g><title>futil`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="12.5637%" y="165" width="0.0222%" height="15" fill="rgb(244,29,21)" fg:x="567" fg:w="1"/><text x="12.8137%" y="175.50"></text></g><g><title>futil`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="12.5637%" y="149" width="0.0222%" height="15" fill="rgb(220,130,37)" fg:x="567" fg:w="1"/><text x="12.8137%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="12.5637%" y="133" width="0.0222%" height="15" fill="rgb(211,67,2)" fg:x="567" fg:w="1"/><text x="12.8137%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="12.5637%" y="117" width="0.0222%" height="15" fill="rgb(235,68,52)" fg:x="567" fg:w="1"/><text x="12.8137%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="12.5637%" y="101" width="0.0222%" height="15" fill="rgb(246,142,3)" fg:x="567" fg:w="1"/><text x="12.8137%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="12.5637%" y="85" width="0.0222%" height="15" fill="rgb(241,25,7)" fg:x="567" fg:w="1"/><text x="12.8137%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="12.5637%" y="69" width="0.0222%" height="15" fill="rgb(242,119,39)" fg:x="567" fg:w="1"/><text x="12.8137%" y="79.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.5859%" y="197" width="0.0222%" height="15" fill="rgb(241,98,45)" fg:x="568" fg:w="1"/><text x="12.8359%" y="207.50"></text></g><g><title>futil`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="12.5859%" y="181" width="0.0222%" height="15" fill="rgb(254,28,30)" fg:x="568" fg:w="1"/><text x="12.8359%" y="191.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.5859%" y="165" width="0.0222%" height="15" fill="rgb(241,142,54)" fg:x="568" fg:w="1"/><text x="12.8359%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.5859%" y="149" width="0.0222%" height="15" fill="rgb(222,85,15)" fg:x="568" fg:w="1"/><text x="12.8359%" y="159.50"></text></g><g><title>futil`calyx::analysis::graph::GraphAnalysis::writes_to (1 samples, 0.02%)</title><rect x="12.6080%" y="197" width="0.0222%" height="15" fill="rgb(210,85,47)" fg:x="569" fg:w="1"/><text x="12.8580%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="12.6080%" y="181" width="0.0222%" height="15" fill="rgb(224,206,25)" fg:x="569" fg:w="1"/><text x="12.8580%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.6080%" y="165" width="0.0222%" height="15" fill="rgb(243,201,19)" fg:x="569" fg:w="1"/><text x="12.8580%" y="175.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="12.6302%" y="197" width="0.0222%" height="15" fill="rgb(236,59,4)" fg:x="570" fg:w="1"/><text x="12.8802%" y="207.50"></text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="12.6302%" y="181" width="0.0222%" height="15" fill="rgb(254,179,45)" fg:x="570" fg:w="1"/><text x="12.8802%" y="191.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::LiveRangeAnalysis::find_gen_kill_group (5 samples, 0.11%)</title><rect x="12.5637%" y="213" width="0.1108%" height="15" fill="rgb(226,14,10)" fg:x="567" fg:w="5"/><text x="12.8137%" y="223.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::analysis::graph::GraphAnalysis&gt; (1 samples, 0.02%)</title><rect x="12.6523%" y="197" width="0.0222%" height="15" fill="rgb(244,27,41)" fg:x="571" fg:w="1"/><text x="12.9023%" y="207.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::structure::Canonical&gt; (1 samples, 0.02%)</title><rect x="12.6523%" y="181" width="0.0222%" height="15" fill="rgb(235,35,32)" fg:x="571" fg:w="1"/><text x="12.9023%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="12.6523%" y="165" width="0.0222%" height="15" fill="rgb(218,68,31)" fg:x="571" fg:w="1"/><text x="12.9023%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="12.6523%" y="149" width="0.0222%" height="15" fill="rgb(207,120,37)" fg:x="571" fg:w="1"/><text x="12.9023%" y="159.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.6745%" y="197" width="0.0222%" height="15" fill="rgb(227,98,0)" fg:x="572" fg:w="1"/><text x="12.9245%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="12.6745%" y="181" width="0.0222%" height="15" fill="rgb(207,7,3)" fg:x="572" fg:w="1"/><text x="12.9245%" y="191.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (7 samples, 0.16%)</title><rect x="12.7410%" y="165" width="0.1551%" height="15" fill="rgb(206,98,19)" fg:x="575" fg:w="7"/><text x="12.9910%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.16%)</title><rect x="12.7410%" y="149" width="0.1551%" height="15" fill="rgb(217,5,26)" fg:x="575" fg:w="7"/><text x="12.9910%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.13%)</title><rect x="12.7631%" y="133" width="0.1329%" height="15" fill="rgb(235,190,38)" fg:x="576" fg:w="6"/><text x="13.0131%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.13%)</title><rect x="12.7631%" y="117" width="0.1329%" height="15" fill="rgb(247,86,24)" fg:x="576" fg:w="6"/><text x="13.0131%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.07%)</title><rect x="12.8296%" y="101" width="0.0665%" height="15" fill="rgb(205,101,16)" fg:x="579" fg:w="3"/><text x="13.0796%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.04%)</title><rect x="12.8518%" y="85" width="0.0443%" height="15" fill="rgb(246,168,33)" fg:x="580" fg:w="2"/><text x="13.1018%" y="95.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.24%)</title><rect x="12.6967%" y="197" width="0.2437%" height="15" fill="rgb(231,114,1)" fg:x="573" fg:w="11"/><text x="12.9467%" y="207.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="12.7188%" y="181" width="0.2216%" height="15" fill="rgb(207,184,53)" fg:x="574" fg:w="10"/><text x="12.9688%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="12.8961%" y="165" width="0.0443%" height="15" fill="rgb(224,95,51)" fg:x="582" fg:w="2"/><text x="13.1461%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="12.8961%" y="149" width="0.0443%" height="15" fill="rgb(212,188,45)" fg:x="582" fg:w="2"/><text x="13.1461%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="12.8961%" y="133" width="0.0443%" height="15" fill="rgb(223,154,38)" fg:x="582" fg:w="2"/><text x="13.1461%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="12.9182%" y="117" width="0.0222%" height="15" fill="rgb(251,22,52)" fg:x="583" fg:w="1"/><text x="13.1682%" y="127.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (13 samples, 0.29%)</title><rect x="12.6745%" y="213" width="0.2881%" height="15" fill="rgb(229,209,22)" fg:x="572" fg:w="13"/><text x="12.9245%" y="223.50"></text></g><g><title>futil`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="12.9404%" y="197" width="0.0222%" height="15" fill="rgb(234,138,34)" fg:x="584" fg:w="1"/><text x="13.1904%" y="207.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.09%)</title><rect x="12.9626%" y="197" width="0.0886%" height="15" fill="rgb(212,95,11)" fg:x="585" fg:w="4"/><text x="13.2126%" y="207.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.09%)</title><rect x="12.9626%" y="181" width="0.0886%" height="15" fill="rgb(240,179,47)" fg:x="585" fg:w="4"/><text x="13.2126%" y="191.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="12.9847%" y="165" width="0.0665%" height="15" fill="rgb(240,163,11)" fg:x="586" fg:w="3"/><text x="13.2347%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.07%)</title><rect x="12.9847%" y="149" width="0.0665%" height="15" fill="rgb(236,37,12)" fg:x="586" fg:w="3"/><text x="13.2347%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="13.0069%" y="133" width="0.0443%" height="15" fill="rgb(232,164,16)" fg:x="587" fg:w="2"/><text x="13.2569%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="13.0069%" y="117" width="0.0443%" height="15" fill="rgb(244,205,15)" fg:x="587" fg:w="2"/><text x="13.2569%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.0290%" y="101" width="0.0222%" height="15" fill="rgb(223,117,47)" fg:x="588" fg:w="1"/><text x="13.2790%" y="111.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::structure::CellType&gt; (1 samples, 0.02%)</title><rect x="13.0733%" y="181" width="0.0222%" height="15" fill="rgb(244,107,35)" fg:x="590" fg:w="1"/><text x="13.3233%" y="191.50"></text></g><g><title>futil`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.0733%" y="165" width="0.0222%" height="15" fill="rgb(205,140,8)" fg:x="590" fg:w="1"/><text x="13.3233%" y="175.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="13.0733%" y="149" width="0.0222%" height="15" fill="rgb(228,84,46)" fg:x="590" fg:w="1"/><text x="13.3233%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="13.0733%" y="133" width="0.0222%" height="15" fill="rgb(254,188,9)" fg:x="590" fg:w="1"/><text x="13.3233%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="13.0733%" y="117" width="0.0222%" height="15" fill="rgb(206,112,54)" fg:x="590" fg:w="1"/><text x="13.3233%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="13.0955%" y="165" width="0.0222%" height="15" fill="rgb(216,84,49)" fg:x="591" fg:w="1"/><text x="13.3455%" y="175.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (5 samples, 0.11%)</title><rect x="13.0955%" y="181" width="0.1108%" height="15" fill="rgb(214,194,35)" fg:x="591" fg:w="5"/><text x="13.3455%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.09%)</title><rect x="13.1177%" y="165" width="0.0886%" height="15" fill="rgb(249,28,3)" fg:x="592" fg:w="4"/><text x="13.3677%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="13.1398%" y="149" width="0.0665%" height="15" fill="rgb(222,56,52)" fg:x="593" fg:w="3"/><text x="13.3898%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="13.1841%" y="133" width="0.0222%" height="15" fill="rgb(245,217,50)" fg:x="595" fg:w="1"/><text x="13.4341%" y="143.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="13.0512%" y="197" width="0.1773%" height="15" fill="rgb(213,201,24)" fg:x="589" fg:w="8"/><text x="13.3012%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.02%)</title><rect x="13.2063%" y="181" width="0.0222%" height="15" fill="rgb(248,116,28)" fg:x="596" fg:w="1"/><text x="13.4563%" y="191.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="13.2285%" y="165" width="0.0443%" height="15" fill="rgb(219,72,43)" fg:x="597" fg:w="2"/><text x="13.4785%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="13.2285%" y="149" width="0.0443%" height="15" fill="rgb(209,138,14)" fg:x="597" fg:w="2"/><text x="13.4785%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.2506%" y="133" width="0.0222%" height="15" fill="rgb(222,18,33)" fg:x="598" fg:w="1"/><text x="13.5006%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.2506%" y="117" width="0.0222%" height="15" fill="rgb(213,199,7)" fg:x="598" fg:w="1"/><text x="13.5006%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.2506%" y="101" width="0.0222%" height="15" fill="rgb(250,110,10)" fg:x="598" fg:w="1"/><text x="13.5006%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="13.2506%" y="85" width="0.0222%" height="15" fill="rgb(248,123,6)" fg:x="598" fg:w="1"/><text x="13.5006%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="13.2728%" y="133" width="0.0222%" height="15" fill="rgb(206,91,31)" fg:x="599" fg:w="1"/><text x="13.5228%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.2728%" y="117" width="0.0222%" height="15" fill="rgb(211,154,13)" fg:x="599" fg:w="1"/><text x="13.5228%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.2728%" y="101" width="0.0222%" height="15" fill="rgb(225,148,7)" fg:x="599" fg:w="1"/><text x="13.5228%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.2728%" y="85" width="0.0222%" height="15" fill="rgb(220,160,43)" fg:x="599" fg:w="1"/><text x="13.5228%" y="95.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="13.2728%" y="149" width="0.0443%" height="15" fill="rgb(213,52,39)" fg:x="599" fg:w="2"/><text x="13.5228%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="13.2949%" y="133" width="0.0222%" height="15" fill="rgb(243,137,7)" fg:x="600" fg:w="1"/><text x="13.5449%" y="143.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="13.2285%" y="181" width="0.1108%" height="15" fill="rgb(230,79,13)" fg:x="597" fg:w="5"/><text x="13.4785%" y="191.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="13.2728%" y="165" width="0.0665%" height="15" fill="rgb(247,105,23)" fg:x="599" fg:w="3"/><text x="13.5228%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="13.3171%" y="149" width="0.0222%" height="15" fill="rgb(223,179,41)" fg:x="601" fg:w="1"/><text x="13.5671%" y="159.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (42 samples, 0.93%)</title><rect x="12.4308%" y="245" width="0.9306%" height="15" fill="rgb(218,9,34)" fg:x="561" fg:w="42"/><text x="12.6808%" y="255.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (41 samples, 0.91%)</title><rect x="12.4529%" y="229" width="0.9085%" height="15" fill="rgb(222,106,8)" fg:x="562" fg:w="41"/><text x="12.7029%" y="239.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::transfer_set (18 samples, 0.40%)</title><rect x="12.9626%" y="213" width="0.3988%" height="15" fill="rgb(211,220,0)" fg:x="585" fg:w="18"/><text x="13.2126%" y="223.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (6 samples, 0.13%)</title><rect x="13.2285%" y="197" width="0.1329%" height="15" fill="rgb(229,52,16)" fg:x="597" fg:w="6"/><text x="13.4785%" y="207.50"></text></g><g><title>futil`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="13.3392%" y="181" width="0.0222%" height="15" fill="rgb(212,155,18)" fg:x="602" fg:w="1"/><text x="13.5892%" y="191.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="13.3392%" y="165" width="0.0222%" height="15" fill="rgb(242,21,14)" fg:x="602" fg:w="1"/><text x="13.5892%" y="175.50"></text></g><g><title>futil`&lt;calyx::ir::structure::CellType as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="13.3392%" y="149" width="0.0222%" height="15" fill="rgb(222,19,48)" fg:x="602" fg:w="1"/><text x="13.5892%" y="159.50"></text></g><g><title>futil`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 1.13%)</title><rect x="12.2535%" y="293" width="1.1301%" height="15" fill="rgb(232,45,27)" fg:x="553" fg:w="51"/><text x="12.5035%" y="303.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (49 samples, 1.09%)</title><rect x="12.2978%" y="277" width="1.0858%" height="15" fill="rgb(249,103,42)" fg:x="555" fg:w="49"/><text x="12.5478%" y="287.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (49 samples, 1.09%)</title><rect x="12.2978%" y="261" width="1.0858%" height="15" fill="rgb(246,81,33)" fg:x="555" fg:w="49"/><text x="12.5478%" y="271.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;(calyx::ir::structure::CellType,calyx::ir::id::Id)&gt; (1 samples, 0.02%)</title><rect x="13.3614%" y="245" width="0.0222%" height="15" fill="rgb(252,33,42)" fg:x="603" fg:w="1"/><text x="13.6114%" y="255.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::structure::CellType&gt; (1 samples, 0.02%)</title><rect x="13.3614%" y="229" width="0.0222%" height="15" fill="rgb(209,212,41)" fg:x="603" fg:w="1"/><text x="13.6114%" y="239.50"></text></g><g><title>futil`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.3614%" y="213" width="0.0222%" height="15" fill="rgb(207,154,6)" fg:x="603" fg:w="1"/><text x="13.6114%" y="223.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="13.3614%" y="197" width="0.0222%" height="15" fill="rgb(223,64,47)" fg:x="603" fg:w="1"/><text x="13.6114%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="13.3614%" y="181" width="0.0222%" height="15" fill="rgb(211,161,38)" fg:x="603" fg:w="1"/><text x="13.6114%" y="191.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.3836%" y="293" width="0.0222%" height="15" fill="rgb(219,138,40)" fg:x="604" fg:w="1"/><text x="13.6336%" y="303.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="13.3836%" y="277" width="0.0222%" height="15" fill="rgb(241,228,46)" fg:x="604" fg:w="1"/><text x="13.6336%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="13.3836%" y="261" width="0.0222%" height="15" fill="rgb(223,209,38)" fg:x="604" fg:w="1"/><text x="13.6336%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="13.3836%" y="245" width="0.0222%" height="15" fill="rgb(236,164,45)" fg:x="604" fg:w="1"/><text x="13.6336%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="13.3836%" y="229" width="0.0222%" height="15" fill="rgb(231,15,5)" fg:x="604" fg:w="1"/><text x="13.6336%" y="239.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (1 samples, 0.02%)</title><rect x="13.4057%" y="293" width="0.0222%" height="15" fill="rgb(252,35,15)" fg:x="605" fg:w="1"/><text x="13.6557%" y="303.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.4057%" y="277" width="0.0222%" height="15" fill="rgb(248,181,18)" fg:x="605" fg:w="1"/><text x="13.6557%" y="287.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.4057%" y="261" width="0.0222%" height="15" fill="rgb(233,39,42)" fg:x="605" fg:w="1"/><text x="13.6557%" y="271.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.4057%" y="245" width="0.0222%" height="15" fill="rgb(238,110,33)" fg:x="605" fg:w="1"/><text x="13.6557%" y="255.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::transfer_set (1 samples, 0.02%)</title><rect x="13.4279%" y="293" width="0.0222%" height="15" fill="rgb(233,195,10)" fg:x="606" fg:w="1"/><text x="13.6779%" y="303.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (1 samples, 0.02%)</title><rect x="13.4279%" y="277" width="0.0222%" height="15" fill="rgb(254,105,3)" fg:x="606" fg:w="1"/><text x="13.6779%" y="287.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.4279%" y="261" width="0.0222%" height="15" fill="rgb(221,225,9)" fg:x="606" fg:w="1"/><text x="13.6779%" y="271.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.4279%" y="245" width="0.0222%" height="15" fill="rgb(224,227,45)" fg:x="606" fg:w="1"/><text x="13.6779%" y="255.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.4279%" y="229" width="0.0222%" height="15" fill="rgb(229,198,43)" fg:x="606" fg:w="1"/><text x="13.6779%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="13.4279%" y="213" width="0.0222%" height="15" fill="rgb(206,209,35)" fg:x="606" fg:w="1"/><text x="13.6779%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.4279%" y="197" width="0.0222%" height="15" fill="rgb(245,195,53)" fg:x="606" fg:w="1"/><text x="13.6779%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.4279%" y="181" width="0.0222%" height="15" fill="rgb(240,92,26)" fg:x="606" fg:w="1"/><text x="13.6779%" y="191.50"></text></g><g><title>futil`&lt;&amp;calyx::analysis::live_range_analysis::Prop as core::ops::arith::Sub&lt;&amp;calyx::analysis::live_range_analysis::Prop&gt;&gt;::sub (1 samples, 0.02%)</title><rect x="13.4500%" y="261" width="0.0222%" height="15" fill="rgb(207,40,23)" fg:x="607" fg:w="1"/><text x="13.7000%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="13.4500%" y="245" width="0.0222%" height="15" fill="rgb(223,111,35)" fg:x="607" fg:w="1"/><text x="13.7000%" y="255.50"></text></g><g><title>futil`&lt;&amp;calyx::analysis::live_range_analysis::Prop as core::ops::bit::BitOr&lt;&amp;calyx::analysis::live_range_analysis::Prop&gt;&gt;::bitor (1 samples, 0.02%)</title><rect x="13.4722%" y="261" width="0.0222%" height="15" fill="rgb(229,147,28)" fg:x="608" fg:w="1"/><text x="13.7222%" y="271.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.4722%" y="245" width="0.0222%" height="15" fill="rgb(211,29,28)" fg:x="608" fg:w="1"/><text x="13.7222%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="13.4722%" y="229" width="0.0222%" height="15" fill="rgb(228,72,33)" fg:x="608" fg:w="1"/><text x="13.7222%" y="239.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="13.4943%" y="245" width="0.0443%" height="15" fill="rgb(205,214,31)" fg:x="609" fg:w="2"/><text x="13.7443%" y="255.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="13.4943%" y="229" width="0.0443%" height="15" fill="rgb(224,111,15)" fg:x="609" fg:w="2"/><text x="13.7443%" y="239.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="13.4943%" y="213" width="0.0443%" height="15" fill="rgb(253,21,26)" fg:x="609" fg:w="2"/><text x="13.7443%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="13.4943%" y="197" width="0.0443%" height="15" fill="rgb(245,139,43)" fg:x="609" fg:w="2"/><text x="13.7443%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.5165%" y="181" width="0.0222%" height="15" fill="rgb(252,170,7)" fg:x="610" fg:w="1"/><text x="13.7665%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.5165%" y="165" width="0.0222%" height="15" fill="rgb(231,118,14)" fg:x="610" fg:w="1"/><text x="13.7665%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.5165%" y="149" width="0.0222%" height="15" fill="rgb(238,83,0)" fg:x="610" fg:w="1"/><text x="13.7665%" y="159.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_in_place (1 samples, 0.02%)</title><rect x="13.5387%" y="245" width="0.0222%" height="15" fill="rgb(221,39,39)" fg:x="611" fg:w="1"/><text x="13.7887%" y="255.50"></text></g><g><title>futil`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="13.5387%" y="229" width="0.0222%" height="15" fill="rgb(222,119,46)" fg:x="611" fg:w="1"/><text x="13.7887%" y="239.50"></text></g><g><title>futil`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="13.5387%" y="213" width="0.0222%" height="15" fill="rgb(222,165,49)" fg:x="611" fg:w="1"/><text x="13.7887%" y="223.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="13.5387%" y="197" width="0.0222%" height="15" fill="rgb(219,113,52)" fg:x="611" fg:w="1"/><text x="13.7887%" y="207.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.5608%" y="229" width="0.0222%" height="15" fill="rgb(214,7,15)" fg:x="612" fg:w="1"/><text x="13.8108%" y="239.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="13.5608%" y="213" width="0.0222%" height="15" fill="rgb(235,32,4)" fg:x="612" fg:w="1"/><text x="13.8108%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="13.5608%" y="197" width="0.0222%" height="15" fill="rgb(238,90,54)" fg:x="612" fg:w="1"/><text x="13.8108%" y="207.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (1 samples, 0.02%)</title><rect x="13.5830%" y="229" width="0.0222%" height="15" fill="rgb(213,208,19)" fg:x="613" fg:w="1"/><text x="13.8330%" y="239.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.5830%" y="213" width="0.0222%" height="15" fill="rgb(233,156,4)" fg:x="613" fg:w="1"/><text x="13.8330%" y="223.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.5830%" y="197" width="0.0222%" height="15" fill="rgb(207,194,5)" fg:x="613" fg:w="1"/><text x="13.8330%" y="207.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.5830%" y="181" width="0.0222%" height="15" fill="rgb(206,111,30)" fg:x="613" fg:w="1"/><text x="13.8330%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="13.5830%" y="165" width="0.0222%" height="15" fill="rgb(243,70,54)" fg:x="613" fg:w="1"/><text x="13.8330%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.5830%" y="149" width="0.0222%" height="15" fill="rgb(242,28,8)" fg:x="613" fg:w="1"/><text x="13.8330%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.5830%" y="133" width="0.0222%" height="15" fill="rgb(219,106,18)" fg:x="613" fg:w="1"/><text x="13.8330%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.5830%" y="117" width="0.0222%" height="15" fill="rgb(244,222,10)" fg:x="613" fg:w="1"/><text x="13.8330%" y="127.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.6051%" y="213" width="0.0222%" height="15" fill="rgb(236,179,52)" fg:x="614" fg:w="1"/><text x="13.8551%" y="223.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.6051%" y="197" width="0.0222%" height="15" fill="rgb(213,23,39)" fg:x="614" fg:w="1"/><text x="13.8551%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="13.6051%" y="181" width="0.0222%" height="15" fill="rgb(238,48,10)" fg:x="614" fg:w="1"/><text x="13.8551%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.6051%" y="165" width="0.0222%" height="15" fill="rgb(251,196,23)" fg:x="614" fg:w="1"/><text x="13.8551%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.6051%" y="149" width="0.0222%" height="15" fill="rgb(250,152,24)" fg:x="614" fg:w="1"/><text x="13.8551%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.6051%" y="133" width="0.0222%" height="15" fill="rgb(209,150,17)" fg:x="614" fg:w="1"/><text x="13.8551%" y="143.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.6273%" y="213" width="0.0222%" height="15" fill="rgb(234,202,34)" fg:x="615" fg:w="1"/><text x="13.8773%" y="223.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="13.6273%" y="197" width="0.0222%" height="15" fill="rgb(253,148,53)" fg:x="615" fg:w="1"/><text x="13.8773%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="13.6273%" y="181" width="0.0222%" height="15" fill="rgb(218,129,16)" fg:x="615" fg:w="1"/><text x="13.8773%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="13.6273%" y="165" width="0.0222%" height="15" fill="rgb(216,85,19)" fg:x="615" fg:w="1"/><text x="13.8773%" y="175.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::transfer_set (3 samples, 0.07%)</title><rect x="13.6051%" y="229" width="0.0665%" height="15" fill="rgb(235,228,7)" fg:x="614" fg:w="3"/><text x="13.8551%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="13.6495%" y="213" width="0.0222%" height="15" fill="rgb(245,175,0)" fg:x="616" fg:w="1"/><text x="13.8995%" y="223.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="13.6716%" y="213" width="0.0886%" height="15" fill="rgb(208,168,36)" fg:x="617" fg:w="4"/><text x="13.9216%" y="223.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (4 samples, 0.09%)</title><rect x="13.6716%" y="197" width="0.0886%" height="15" fill="rgb(246,171,24)" fg:x="617" fg:w="4"/><text x="13.9216%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.07%)</title><rect x="13.6938%" y="181" width="0.0665%" height="15" fill="rgb(215,142,24)" fg:x="618" fg:w="3"/><text x="13.9438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="13.7381%" y="165" width="0.0222%" height="15" fill="rgb(250,187,7)" fg:x="620" fg:w="1"/><text x="13.9881%" y="175.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.7602%" y="197" width="0.0222%" height="15" fill="rgb(228,66,33)" fg:x="621" fg:w="1"/><text x="14.0102%" y="207.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.7602%" y="181" width="0.0222%" height="15" fill="rgb(234,215,21)" fg:x="621" fg:w="1"/><text x="14.0102%" y="191.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.7602%" y="165" width="0.0222%" height="15" fill="rgb(222,191,20)" fg:x="621" fg:w="1"/><text x="14.0102%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="13.7602%" y="149" width="0.0222%" height="15" fill="rgb(245,79,54)" fg:x="621" fg:w="1"/><text x="14.0102%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.7602%" y="133" width="0.0222%" height="15" fill="rgb(240,10,37)" fg:x="621" fg:w="1"/><text x="14.0102%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.7602%" y="117" width="0.0222%" height="15" fill="rgb(214,192,32)" fg:x="621" fg:w="1"/><text x="14.0102%" y="127.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="13.7824%" y="197" width="0.0886%" height="15" fill="rgb(209,36,54)" fg:x="622" fg:w="4"/><text x="14.0324%" y="207.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (4 samples, 0.09%)</title><rect x="13.7824%" y="181" width="0.0886%" height="15" fill="rgb(220,10,11)" fg:x="622" fg:w="4"/><text x="14.0324%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.09%)</title><rect x="13.7824%" y="165" width="0.0886%" height="15" fill="rgb(221,106,17)" fg:x="622" fg:w="4"/><text x="14.0324%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="13.8046%" y="149" width="0.0665%" height="15" fill="rgb(251,142,44)" fg:x="623" fg:w="3"/><text x="14.0546%" y="159.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.8710%" y="165" width="0.0222%" height="15" fill="rgb(238,13,15)" fg:x="626" fg:w="1"/><text x="14.1210%" y="175.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.8710%" y="149" width="0.0222%" height="15" fill="rgb(208,107,27)" fg:x="626" fg:w="1"/><text x="14.1210%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="13.8710%" y="133" width="0.0222%" height="15" fill="rgb(205,136,37)" fg:x="626" fg:w="1"/><text x="14.1210%" y="143.50"></text></g><g><title>futil`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.42%)</title><rect x="13.4943%" y="261" width="0.4210%" height="15" fill="rgb(250,205,27)" fg:x="609" fg:w="19"/><text x="13.7443%" y="271.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (16 samples, 0.35%)</title><rect x="13.5608%" y="245" width="0.3545%" height="15" fill="rgb(210,80,43)" fg:x="612" fg:w="16"/><text x="13.8108%" y="255.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (11 samples, 0.24%)</title><rect x="13.6716%" y="229" width="0.2437%" height="15" fill="rgb(247,160,36)" fg:x="617" fg:w="11"/><text x="13.9216%" y="239.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::transfer_set (7 samples, 0.16%)</title><rect x="13.7602%" y="213" width="0.1551%" height="15" fill="rgb(234,13,49)" fg:x="621" fg:w="7"/><text x="14.0102%" y="223.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (2 samples, 0.04%)</title><rect x="13.8710%" y="197" width="0.0443%" height="15" fill="rgb(234,122,0)" fg:x="626" fg:w="2"/><text x="14.1210%" y="207.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="13.8710%" y="181" width="0.0443%" height="15" fill="rgb(207,146,38)" fg:x="626" fg:w="2"/><text x="14.1210%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="13.8932%" y="165" width="0.0222%" height="15" fill="rgb(207,177,25)" fg:x="627" fg:w="1"/><text x="14.1432%" y="175.50"></text></g><g><title>futil`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.9154%" y="261" width="0.0222%" height="15" fill="rgb(211,178,42)" fg:x="628" fg:w="1"/><text x="14.1654%" y="271.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::passes::component_iniliner::ComponentInliner::inline_component::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="13.9154%" y="245" width="0.0222%" height="15" fill="rgb(230,69,54)" fg:x="628" fg:w="1"/><text x="14.1654%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="13.9154%" y="229" width="0.0222%" height="15" fill="rgb(214,135,41)" fg:x="628" fg:w="1"/><text x="14.1654%" y="239.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::LiveRangeAnalysis::find_gen_kill_group (1 samples, 0.02%)</title><rect x="13.9375%" y="261" width="0.0222%" height="15" fill="rgb(237,67,25)" fg:x="629" fg:w="1"/><text x="14.1875%" y="271.50"></text></g><g><title>futil`&lt;itertools::unique_impl::UniqueBy&lt;I,V,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="13.9375%" y="245" width="0.0222%" height="15" fill="rgb(222,189,50)" fg:x="629" fg:w="1"/><text x="14.1875%" y="255.50"></text></g><g><title>futil`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="13.9375%" y="229" width="0.0222%" height="15" fill="rgb(245,148,34)" fg:x="629" fg:w="1"/><text x="14.1875%" y="239.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::or_set (1 samples, 0.02%)</title><rect x="13.9597%" y="261" width="0.0222%" height="15" fill="rgb(222,29,6)" fg:x="630" fg:w="1"/><text x="14.2097%" y="271.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.9597%" y="245" width="0.0222%" height="15" fill="rgb(221,189,43)" fg:x="630" fg:w="1"/><text x="14.2097%" y="255.50"></text></g><g><title>futil`&lt;calyx::ir::id::Id as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.9597%" y="229" width="0.0222%" height="15" fill="rgb(207,36,27)" fg:x="630" fg:w="1"/><text x="14.2097%" y="239.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (87 samples, 1.93%)</title><rect x="12.0762%" y="389" width="1.9278%" height="15" fill="rgb(217,90,24)" fg:x="545" fg:w="87"/><text x="12.3262%" y="399.50">f..</text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (87 samples, 1.93%)</title><rect x="12.0762%" y="373" width="1.9278%" height="15" fill="rgb(224,66,35)" fg:x="545" fg:w="87"/><text x="12.3262%" y="383.50">f..</text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (87 samples, 1.93%)</title><rect x="12.0762%" y="357" width="1.9278%" height="15" fill="rgb(221,13,50)" fg:x="545" fg:w="87"/><text x="12.3262%" y="367.50">f..</text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (87 samples, 1.93%)</title><rect x="12.0762%" y="341" width="1.9278%" height="15" fill="rgb(236,68,49)" fg:x="545" fg:w="87"/><text x="12.3262%" y="351.50">f..</text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (85 samples, 1.88%)</title><rect x="12.1205%" y="325" width="1.8834%" height="15" fill="rgb(229,146,28)" fg:x="547" fg:w="85"/><text x="12.3705%" y="335.50">f..</text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (85 samples, 1.88%)</title><rect x="12.1205%" y="309" width="1.8834%" height="15" fill="rgb(225,31,38)" fg:x="547" fg:w="85"/><text x="12.3705%" y="319.50">f..</text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (25 samples, 0.55%)</title><rect x="13.4500%" y="293" width="0.5540%" height="15" fill="rgb(250,208,3)" fg:x="607" fg:w="25"/><text x="13.7000%" y="303.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::build_live_ranges (25 samples, 0.55%)</title><rect x="13.4500%" y="277" width="0.5540%" height="15" fill="rgb(246,54,23)" fg:x="607" fg:w="25"/><text x="13.7000%" y="287.50"></text></g><g><title>futil`calyx::analysis::live_range_analysis::Prop::transfer_set (1 samples, 0.02%)</title><rect x="13.9818%" y="261" width="0.0222%" height="15" fill="rgb(243,76,11)" fg:x="631" fg:w="1"/><text x="14.2318%" y="271.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.9818%" y="245" width="0.0222%" height="15" fill="rgb(245,21,50)" fg:x="631" fg:w="1"/><text x="14.2318%" y="255.50"></text></g><g><title>futil`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="13.9818%" y="229" width="0.0222%" height="15" fill="rgb(228,9,43)" fg:x="631" fg:w="1"/><text x="14.2318%" y="239.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (18 samples, 0.40%)</title><rect x="14.0040%" y="389" width="0.3988%" height="15" fill="rgb(208,100,47)" fg:x="632" fg:w="18"/><text x="14.2540%" y="399.50"></text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.44%)</title><rect x="27.7199%" y="373" width="0.4432%" height="15" fill="rgb(232,26,8)" fg:x="1251" fg:w="20"/><text x="27.9699%" y="383.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (1,036 samples, 22.96%)</title><rect x="28.1631%" y="373" width="22.9559%" height="15" fill="rgb(216,166,38)" fg:x="1271" fg:w="1036"/><text x="28.4131%" y="383.50">futil`core::hash::BuildHasher::hash_..</text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (420 samples, 9.31%)</title><rect x="41.8125%" y="357" width="9.3064%" height="15" fill="rgb(251,202,51)" fg:x="1887" fg:w="420"/><text x="42.0625%" y="367.50">futil`&lt;std::c..</text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.69%)</title><rect x="59.1624%" y="357" width="0.6869%" height="15" fill="rgb(254,216,34)" fg:x="2670" fg:w="31"/><text x="59.4124%" y="367.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (738 samples, 16.35%)</title><rect x="59.8493%" y="357" width="16.3528%" height="15" fill="rgb(251,32,27)" fg:x="2701" fg:w="738"/><text x="60.0993%" y="367.50">futil`core::hash::BuildHa..</text></g><g><title>futil`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (347 samples, 7.69%)</title><rect x="68.5132%" y="341" width="7.6889%" height="15" fill="rgb(208,127,28)" fg:x="3092" fg:w="347"/><text x="68.7632%" y="351.50">futil`&lt;std:..</text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (8 samples, 0.18%)</title><rect x="77.9969%" y="309" width="0.1773%" height="15" fill="rgb(224,137,22)" fg:x="3520" fg:w="8"/><text x="78.2469%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.04%)</title><rect x="78.1742%" y="309" width="0.0443%" height="15" fill="rgb(254,70,32)" fg:x="3528" fg:w="2"/><text x="78.4242%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (27 samples, 0.60%)</title><rect x="82.2513%" y="293" width="0.5983%" height="15" fill="rgb(229,75,37)" fg:x="3712" fg:w="27"/><text x="82.5013%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.04%)</title><rect x="82.8495%" y="293" width="0.0443%" height="15" fill="rgb(252,64,23)" fg:x="3739" fg:w="2"/><text x="83.0995%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (374 samples, 8.29%)</title><rect x="77.2657%" y="341" width="8.2872%" height="15" fill="rgb(232,162,48)" fg:x="3487" fg:w="374"/><text x="77.5157%" y="351.50">libsystem_ma..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (355 samples, 7.87%)</title><rect x="77.6867%" y="325" width="7.8662%" height="15" fill="rgb(246,160,12)" fg:x="3506" fg:w="355"/><text x="77.9367%" y="335.50">libsystem_m..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (331 samples, 7.33%)</title><rect x="78.2185%" y="309" width="7.3344%" height="15" fill="rgb(247,166,0)" fg:x="3530" fg:w="331"/><text x="78.4685%" y="319.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (120 samples, 2.66%)</title><rect x="82.8939%" y="293" width="2.6590%" height="15" fill="rgb(249,219,21)" fg:x="3741" fg:w="120"/><text x="83.1439%" y="303.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (41 samples, 0.91%)</title><rect x="84.6444%" y="277" width="0.9085%" height="15" fill="rgb(205,209,3)" fg:x="3820" fg:w="41"/><text x="84.8944%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.11%)</title><rect x="85.5528%" y="341" width="0.1108%" height="15" fill="rgb(243,44,1)" fg:x="3861" fg:w="5"/><text x="85.8028%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.07%)</title><rect x="85.6636%" y="341" width="0.0665%" height="15" fill="rgb(206,159,16)" fg:x="3866" fg:w="3"/><text x="85.9136%" y="351.50"></text></g><g><title>futil`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (475 samples, 10.53%)</title><rect x="76.2021%" y="357" width="10.5251%" height="15" fill="rgb(244,77,30)" fg:x="3439" fg:w="475"/><text x="76.4521%" y="367.50">futil`hashbrown..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (45 samples, 1.00%)</title><rect x="85.7301%" y="341" width="0.9971%" height="15" fill="rgb(218,69,12)" fg:x="3869" fg:w="45"/><text x="85.9801%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.11%)</title><rect x="86.7272%" y="357" width="0.1108%" height="15" fill="rgb(212,87,7)" fg:x="3914" fg:w="5"/><text x="86.9772%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="86.8380%" y="357" width="0.0443%" height="15" fill="rgb(245,114,25)" fg:x="3919" fg:w="2"/><text x="87.0880%" y="367.50"></text></g><g><title>futil`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,616 samples, 35.81%)</title><rect x="51.1190%" y="373" width="35.8077%" height="15" fill="rgb(210,61,42)" fg:x="2307" fg:w="1616"/><text x="51.3690%" y="383.50">futil`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash</text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="86.8823%" y="357" width="0.0443%" height="15" fill="rgb(211,52,33)" fg:x="3921" fg:w="2"/><text x="87.1323%" y="367.50"></text></g><g><title>futil`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.04%)</title><rect x="86.9267%" y="373" width="0.0443%" height="15" fill="rgb(234,58,33)" fg:x="3923" fg:w="2"/><text x="87.1767%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (39 samples, 0.86%)</title><rect x="87.5692%" y="357" width="0.8642%" height="15" fill="rgb(220,115,36)" fg:x="3952" fg:w="39"/><text x="87.8192%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (35 samples, 0.78%)</title><rect x="87.6579%" y="341" width="0.7755%" height="15" fill="rgb(243,153,54)" fg:x="3956" fg:w="35"/><text x="87.9079%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (67 samples, 1.48%)</title><rect x="86.9710%" y="373" width="1.4846%" height="15" fill="rgb(251,47,18)" fg:x="3925" fg:w="67"/><text x="87.2210%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="88.4334%" y="357" width="0.0222%" height="15" fill="rgb(242,102,42)" fg:x="3991" fg:w="1"/><text x="88.6834%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="90.2725%" y="357" width="0.0222%" height="15" fill="rgb(234,31,38)" fg:x="4074" fg:w="1"/><text x="90.5225%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="90.2947%" y="357" width="0.0222%" height="15" fill="rgb(221,117,51)" fg:x="4075" fg:w="1"/><text x="90.5447%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (64 samples, 1.42%)</title><rect x="92.0230%" y="341" width="1.4181%" height="15" fill="rgb(212,20,18)" fg:x="4153" fg:w="64"/><text x="92.2730%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (245 samples, 5.43%)</title><rect x="88.4556%" y="373" width="5.4288%" height="15" fill="rgb(245,133,36)" fg:x="3992" fg:w="245"/><text x="88.7056%" y="383.50">libsyst..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (161 samples, 3.57%)</title><rect x="90.3169%" y="357" width="3.5675%" height="15" fill="rgb(212,6,19)" fg:x="4076" fg:w="161"/><text x="90.5669%" y="367.50">libs..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.44%)</title><rect x="93.4412%" y="341" width="0.4432%" height="15" fill="rgb(218,1,36)" fg:x="4217" fg:w="20"/><text x="93.6912%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.09%)</title><rect x="93.8843%" y="373" width="0.0886%" height="15" fill="rgb(246,84,54)" fg:x="4237" fg:w="4"/><text x="94.1343%" y="383.50"></text></g><g><title>futil`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,610 samples, 79.99%)</title><rect x="14.4028%" y="389" width="79.9911%" height="15" fill="rgb(242,110,6)" fg:x="650" fg:w="3610"/><text x="14.6528%" y="399.50">futil`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.42%)</title><rect x="93.9730%" y="373" width="0.4210%" height="15" fill="rgb(214,47,5)" fg:x="4241" fg:w="19"/><text x="94.2230%" y="383.50"></text></g><g><title>futil`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="94.4826%" y="373" width="0.0222%" height="15" fill="rgb(218,159,25)" fg:x="4264" fg:w="1"/><text x="94.7326%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.04%)</title><rect x="94.7042%" y="309" width="0.0443%" height="15" fill="rgb(215,211,28)" fg:x="4274" fg:w="2"/><text x="94.9542%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.38%)</title><rect x="94.5269%" y="357" width="0.3767%" height="15" fill="rgb(238,59,32)" fg:x="4266" fg:w="17"/><text x="94.7769%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.38%)</title><rect x="94.5269%" y="341" width="0.3767%" height="15" fill="rgb(226,82,3)" fg:x="4266" fg:w="17"/><text x="94.7769%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.38%)</title><rect x="94.5269%" y="325" width="0.3767%" height="15" fill="rgb(240,164,32)" fg:x="4266" fg:w="17"/><text x="94.7769%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.16%)</title><rect x="94.7485%" y="309" width="0.1551%" height="15" fill="rgb(232,46,7)" fg:x="4276" fg:w="7"/><text x="94.9985%" y="319.50"></text></g><g><title>futil`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (20 samples, 0.44%)</title><rect x="94.5048%" y="373" width="0.4432%" height="15" fill="rgb(229,129,53)" fg:x="4265" fg:w="20"/><text x="94.7548%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="94.9036%" y="357" width="0.0443%" height="15" fill="rgb(234,188,29)" fg:x="4283" fg:w="2"/><text x="95.1536%" y="367.50"></text></g><g><title>futil`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.58%)</title><rect x="94.3940%" y="389" width="0.5761%" height="15" fill="rgb(246,141,4)" fg:x="4260" fg:w="26"/><text x="94.6440%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="94.9479%" y="373" width="0.0222%" height="15" fill="rgb(229,23,39)" fg:x="4285" fg:w="1"/><text x="95.1979%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="94.9701%" y="389" width="0.0222%" height="15" fill="rgb(206,12,3)" fg:x="4286" fg:w="1"/><text x="95.2201%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="94.9922%" y="389" width="0.0222%" height="15" fill="rgb(252,226,20)" fg:x="4287" fg:w="1"/><text x="95.2422%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="94.9922%" y="373" width="0.0222%" height="15" fill="rgb(216,123,35)" fg:x="4287" fg:w="1"/><text x="95.2422%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="94.9922%" y="357" width="0.0222%" height="15" fill="rgb(212,68,40)" fg:x="4287" fg:w="1"/><text x="95.2422%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="94.9922%" y="341" width="0.0222%" height="15" fill="rgb(254,125,32)" fg:x="4287" fg:w="1"/><text x="95.2422%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.13%)</title><rect x="95.0144%" y="389" width="0.1329%" height="15" fill="rgb(253,97,22)" fg:x="4288" fg:w="6"/><text x="95.2644%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_size (2 samples, 0.04%)</title><rect x="95.4576%" y="373" width="0.0443%" height="15" fill="rgb(241,101,14)" fg:x="4308" fg:w="2"/><text x="95.7076%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.47%)</title><rect x="95.5019%" y="373" width="0.4653%" height="15" fill="rgb(238,103,29)" fg:x="4310" fg:w="21"/><text x="95.7519%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.44%)</title><rect x="95.5240%" y="357" width="0.4432%" height="15" fill="rgb(233,195,47)" fg:x="4311" fg:w="20"/><text x="95.7740%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.86%)</title><rect x="95.1474%" y="389" width="0.8642%" height="15" fill="rgb(246,218,30)" fg:x="4294" fg:w="39"/><text x="95.3974%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.04%)</title><rect x="95.9672%" y="373" width="0.0443%" height="15" fill="rgb(219,145,47)" fg:x="4331" fg:w="2"/><text x="96.2172%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.09%)</title><rect x="96.0115%" y="389" width="0.0886%" height="15" fill="rgb(243,12,26)" fg:x="4333" fg:w="4"/><text x="96.2615%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.44%)</title><rect x="97.8728%" y="357" width="0.4432%" height="15" fill="rgb(214,87,16)" fg:x="4417" fg:w="20"/><text x="98.1228%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (119 samples, 2.64%)</title><rect x="96.1002%" y="389" width="2.6368%" height="15" fill="rgb(208,99,42)" fg:x="4337" fg:w="119"/><text x="96.3502%" y="399.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (87 samples, 1.93%)</title><rect x="96.8092%" y="373" width="1.9278%" height="15" fill="rgb(253,99,2)" fg:x="4369" fg:w="87"/><text x="97.0592%" y="383.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (19 samples, 0.42%)</title><rect x="98.3160%" y="357" width="0.4210%" height="15" fill="rgb(220,168,23)" fg:x="4437" fg:w="19"/><text x="98.5660%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.11%)</title><rect x="98.7370%" y="389" width="0.1108%" height="15" fill="rgb(242,38,24)" fg:x="4456" fg:w="5"/><text x="98.9870%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.04%)</title><rect x="98.8478%" y="389" width="0.0443%" height="15" fill="rgb(225,182,9)" fg:x="4461" fg:w="2"/><text x="99.0978%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.31%)</title><rect x="98.8921%" y="389" width="0.3102%" height="15" fill="rgb(243,178,37)" fg:x="4463" fg:w="14"/><text x="99.1421%" y="399.50"></text></g><g><title>futil`calyx::passes::sharing_components::_&lt;impl calyx::ir::traversal::visitor::Visitor for calyx::passes::cell_share::CellShare&gt;::start (4,411 samples, 97.74%)</title><rect x="1.4846%" y="405" width="97.7399%" height="15" fill="rgb(232,139,19)" fg:x="67" fg:w="4411"/><text x="1.7346%" y="415.50">futil`calyx::passes::sharing_components::_&lt;impl calyx::ir::traversal::visitor::Visitor for calyx::passes::cell_share::CellShare&gt;::start</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="99.2023%" y="389" width="0.0222%" height="15" fill="rgb(225,201,24)" fg:x="4477" fg:w="1"/><text x="99.4523%" y="399.50"></text></g><g><title>futil`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.35%)</title><rect x="99.2245%" y="405" width="0.3545%" height="15" fill="rgb(221,47,46)" fg:x="4478" fg:w="16"/><text x="99.4745%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.04%)</title><rect x="99.5790%" y="405" width="0.0443%" height="15" fill="rgb(249,23,13)" fg:x="4494" fg:w="2"/><text x="99.8290%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.04%)</title><rect x="99.6233%" y="405" width="0.0443%" height="15" fill="rgb(219,9,5)" fg:x="4496" fg:w="2"/><text x="99.8733%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="99.6676%" y="405" width="0.0222%" height="15" fill="rgb(254,171,16)" fg:x="4498" fg:w="1"/><text x="99.9176%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.07%)</title><rect x="99.6898%" y="405" width="0.0665%" height="15" fill="rgb(230,171,20)" fg:x="4499" fg:w="3"/><text x="99.9398%" y="415.50"></text></g><g><title>futil`calyx::pass_manager::PassManager::execute_plan (4,479 samples, 99.25%)</title><rect x="0.5761%" y="437" width="99.2466%" height="15" fill="rgb(210,71,41)" fg:x="26" fg:w="4479"/><text x="0.8261%" y="447.50">futil`calyx::pass_manager::PassManager::execute_plan</text></g><g><title>futil`calyx::pass_manager::PassManager::register_pass::_{{closure}} (4,479 samples, 99.25%)</title><rect x="0.5761%" y="421" width="99.2466%" height="15" fill="rgb(206,173,20)" fg:x="26" fg:w="4479"/><text x="0.8261%" y="431.50">futil`calyx::pass_manager::PassManager::register_pass::_{{closure}}</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.07%)</title><rect x="99.7563%" y="405" width="0.0665%" height="15" fill="rgb(233,88,34)" fg:x="4502" fg:w="3"/><text x="100.0063%" y="415.50"></text></g><g><title>futil`&lt;linked_hash_map::LinkedHashMap&lt;K,V,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.8227%" y="405" width="0.0222%" height="15" fill="rgb(223,209,46)" fg:x="4505" fg:w="1"/><text x="100.0727%" y="415.50"></text></g><g><title>futil`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.8227%" y="389" width="0.0222%" height="15" fill="rgb(250,43,18)" fg:x="4505" fg:w="1"/><text x="100.0727%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="99.8227%" y="373" width="0.0222%" height="15" fill="rgb(208,13,10)" fg:x="4505" fg:w="1"/><text x="100.0727%" y="383.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;calyx::ir::guard::Guard&gt;&gt; (1 samples, 0.02%)</title><rect x="99.8449%" y="357" width="0.0222%" height="15" fill="rgb(212,200,36)" fg:x="4506" fg:w="1"/><text x="100.0949%" y="367.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;calyx::ir::guard::Guard&gt;&gt; (1 samples, 0.02%)</title><rect x="99.8449%" y="341" width="0.0222%" height="15" fill="rgb(225,90,30)" fg:x="4506" fg:w="1"/><text x="100.0949%" y="351.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;calyx::ir::guard::Guard&gt;&gt; (2 samples, 0.04%)</title><rect x="99.8449%" y="373" width="0.0443%" height="15" fill="rgb(236,182,39)" fg:x="4506" fg:w="2"/><text x="100.0949%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="99.8671%" y="357" width="0.0222%" height="15" fill="rgb(212,144,35)" fg:x="4507" fg:w="1"/><text x="100.1171%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="99.8671%" y="341" width="0.0222%" height="15" fill="rgb(228,63,44)" fg:x="4507" fg:w="1"/><text x="100.1171%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="99.8671%" y="325" width="0.0222%" height="15" fill="rgb(228,109,6)" fg:x="4507" fg:w="1"/><text x="100.1171%" y="335.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::structure::Assignment&gt; (3 samples, 0.07%)</title><rect x="99.8449%" y="405" width="0.0665%" height="15" fill="rgb(238,117,24)" fg:x="4506" fg:w="3"/><text x="100.0949%" y="415.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;calyx::ir::guard::Guard&gt;&gt; (3 samples, 0.07%)</title><rect x="99.8449%" y="389" width="0.0665%" height="15" fill="rgb(242,26,26)" fg:x="4506" fg:w="3"/><text x="100.0949%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="99.8892%" y="373" width="0.0222%" height="15" fill="rgb(221,92,48)" fg:x="4508" fg:w="1"/><text x="100.1392%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="99.8892%" y="357" width="0.0222%" height="15" fill="rgb(209,209,32)" fg:x="4508" fg:w="1"/><text x="100.1392%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (1 samples, 0.02%)</title><rect x="99.8892%" y="341" width="0.0222%" height="15" fill="rgb(221,70,22)" fg:x="4508" fg:w="1"/><text x="100.1392%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.8892%" y="325" width="0.0222%" height="15" fill="rgb(248,145,5)" fg:x="4508" fg:w="1"/><text x="100.1392%" y="335.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;calyx::ir::component::Component&gt;&gt; (5 samples, 0.11%)</title><rect x="99.8227%" y="437" width="0.1108%" height="15" fill="rgb(226,116,26)" fg:x="4505" fg:w="5"/><text x="100.0727%" y="447.50"></text></g><g><title>futil`core::ptr::drop_in_place&lt;calyx::ir::component::Component&gt; (5 samples, 0.11%)</title><rect x="99.8227%" y="421" width="0.1108%" height="15" fill="rgb(244,5,17)" fg:x="4505" fg:w="5"/><text x="100.0727%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="99.9114%" y="405" width="0.0222%" height="15" fill="rgb(252,159,33)" fg:x="4509" fg:w="1"/><text x="100.1614%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="99.9114%" y="389" width="0.0222%" height="15" fill="rgb(206,71,0)" fg:x="4509" fg:w="1"/><text x="100.1614%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="99.9114%" y="373" width="0.0222%" height="15" fill="rgb(233,118,54)" fg:x="4509" fg:w="1"/><text x="100.1614%" y="383.50"></text></g><g><title>futil`main (4,511 samples, 99.96%)</title><rect x="0.0000%" y="485" width="99.9557%" height="15" fill="rgb(234,83,48)" fg:x="0" fg:w="4511"/><text x="0.2500%" y="495.50">futil`main</text></g><g><title>futil`std::sys_common::backtrace::__rust_begin_short_backtrace (4,511 samples, 99.96%)</title><rect x="0.0000%" y="469" width="99.9557%" height="15" fill="rgb(228,3,54)" fg:x="0" fg:w="4511"/><text x="0.2500%" y="479.50">futil`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>futil`futil::main (4,511 samples, 99.96%)</title><rect x="0.0000%" y="453" width="99.9557%" height="15" fill="rgb(226,155,13)" fg:x="0" fg:w="4511"/><text x="0.2500%" y="463.50">futil`futil::main</text></g><g><title>futil`std::fs::canonicalize (1 samples, 0.02%)</title><rect x="99.9335%" y="437" width="0.0222%" height="15" fill="rgb(241,28,37)" fg:x="4510" fg:w="1"/><text x="100.1835%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (1 samples, 0.02%)</title><rect x="99.9335%" y="421" width="0.0222%" height="15" fill="rgb(233,93,10)" fg:x="4510" fg:w="1"/><text x="100.1835%" y="431.50"></text></g><g><title>all (4,513 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(225,113,19)" fg:x="0" fg:w="4513"/><text x="0.2500%" y="543.50"></text></g><g><title>0x6 (4,513 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(241,2,18)" fg:x="0" fg:w="4513"/><text x="0.2500%" y="527.50">0x6</text></g><g><title>libdyld.dylib`start (4,513 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(228,207,21)" fg:x="0" fg:w="4513"/><text x="0.2500%" y="511.50">libdyld.dylib`start</text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.04%)</title><rect x="99.9557%" y="485" width="0.0443%" height="15" fill="rgb(213,211,35)" fg:x="4511" fg:w="2"/><text x="100.2057%" y="495.50"></text></g></svg></svg>