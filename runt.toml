ver = "0.2.7"

##### Compilation Tests ######
## Test each pass in isolation. Gets the pass flags from a comment on the first line of the file
[[tests]]
name = "passes"
paths = [ "tests/passes/*.futil", "tests/passes/resource-sharing/*.futil" ]
# gets the pass flags a comment on the first line of the test file
cmd = """
flags=$(head -n 1 {} | cut -c 3-)
./target/debug/futil {} $flags
"""

## Tests the error messages generated by the compiler. Runs passes for error
## checking.
[[tests]]
name = "errors"
paths = [ "tests/errors/*.futil" ]
cmd = """
./target/debug/futil {} -p well-formed -p papercut
"""

## Test to make sure that particular cases are covered. Runs all passes.
## These should be tests that test the composition of passes, not just a single pass.
[[tests]]
name = "unit"
paths = [ "tests/unit/*.futil" ]
cmd = """
./target/debug/futil {} -d static-timing -d well-formed -d papercut -d resource-sharing
"""

## Same as unit except runs with static-timing
[[tests]]
name = "unit static"
paths = [ "tests/unit/*.futil" ]
cmd = """
./target/debug/futil {} -d well-formed -d papercut -d resource-sharing
"""

##### Correctness Tests #####
## Tests that ensure that individual control constructs have correct
## behavior when compiled.
[[tests]]
name = "correctness dynamic"
paths = [ "tests/correctness/*.futil" ]
cmd = """
fud exec -s verilog.data {}.data \
         -s futil.flags '-d static-timing' \
         -s futil.exec './target/debug/futil' \
         -s verilog.cycle_limit 500 \
         {} --to dat \
         -q
"""

## Same as correctness dynamic but runes with static-timing
[[tests]]
name = "correctness static timing"
paths = [ "tests/correctness/*.futil" ]
cmd = """
fud exec -s verilog.cycle_limit 500 \
         -s verilog.data {}.data \
         -s futil.exec './target/debug/futil' \
         {} --to dat \
         -q
"""

[[tests]]
name = "systolic array correctness"
paths = [ "tests/correctness/systolic/*.txt" ]
cmd = """
fud e --from systolic --to vcd_json \
      -s systolic.flags "$(cat {})" \
      -s verilog.data {}.data \
      -s futil.exec './target/debug/futil' \
      -q \
      | jq -f {}.jq

"""

##### Backend Tests #####
[[tests]]
name = "verilog backend"
paths = [ "tests/backend/verilog/*.futil" ]
cmd = """
fud exec {} --to verilog -q \
            -s futil.exec './target/debug/futil'
"""


##### Frontend Tests #####
[[tests]]
name = "dahlia frontend"
paths = [ "tests/frontend/dahlia/*.fuse" ]
cmd = """
fud e {} --to futil -q \
          -s futil.exec './target/debug/futil' \
        | tail -n+2
"""

[[tests]]
name = "systolic array frontend"
paths = [ "tests/frontend/systolic/array-*.txt" ]
cmd = """
./frontends/systolic-lang/gen-systolic.py $(cat {})
"""

