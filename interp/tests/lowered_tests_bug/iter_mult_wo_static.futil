import "primitives/core.futil";
component main(go: 1, clk: 1) -> (done: 1) {
  cells {
    m = std_reg(4);
    c = std_reg(1);
    a = std_reg(4);
    q = std_reg(4);
    pad_5bit = std_pad(4, 5);
    pad_5bit1 = std_pad(4, 5);
    add_5bits = std_add(5);
    ge_5bits = std_ge(5);
    add_3bits = std_add(3);
    rshift_4bits = std_rsh(4);
    add_4bits = std_add(4);
    slicer = std_slice(4, 1);
    lt = std_lt(3);
    i = std_reg(3);
    cs_wh = std_reg(1);
    cs_if = std_reg(1);
    fsm = std_reg(4);
  }
  wires {
    done = fsm.out == 4'd11 ? 1'd1;
    a.clk = clk;
    a.in = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go ? 4'd0;
    a.in = !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & !cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd6 & go ? add_4bits.out;
    a.write_en = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & !cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd6 & go ? 1'd1;
    add_3bits.left = !i.done & cs_wh.out & fsm.out == 4'd9 & go ? i.out;
    add_3bits.right = !i.done & cs_wh.out & fsm.out == 4'd9 & go ? 3'd1;
    add_4bits.left = !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd4 & go ? a.out;
    add_4bits.left = !q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go | !a.done & !cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd6 & go ? rshift_4bits.out;
    add_4bits.right = !slicer.out & (!q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go) | !c.out & (!a.done & !cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd6 & go) ? 4'd0;
    add_4bits.right = slicer.out & (!q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go) | c.out & (!a.done & !cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd6 & go) ? 4'd8;
    add_4bits.right = !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd4 & go ? m.out;
    add_5bits.left = !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go ? pad_5bit.out;
    add_5bits.right = !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go ? pad_5bit1.out;
    c.clk = clk;
    c.in = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go | !c.done & !cs_if.out & cs_wh.out & fsm.out == 4'd5 & go | !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd7 & go ? 1'd0;
    c.in = !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go ? ge_5bits.out;
    c.write_en = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go | !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !c.done & !cs_if.out & cs_wh.out & fsm.out == 4'd5 & go | !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd7 & go ? 1'd1;
    cs_if.clk = clk;
    cs_if.in = cs_wh.out & fsm.out == 4'd9 & go ? 1'd0;
    cs_if.in = cs_wh.out & fsm.out == 4'd2 & go ? slicer.out;
    cs_if.write_en = cs_wh.out & fsm.out == 4'd2 & go | cs_wh.out & fsm.out == 4'd9 & go ? 1'd1;
    cs_wh.clk = clk;
    cs_wh.in = fsm.out == 4'd11 & go ? 1'd0;
    cs_wh.in = fsm.out == 4'd1 & go ? lt.out;
    cs_wh.write_en = fsm.out == 4'd1 & go | fsm.out == 4'd11 & go ? 1'd1;
    fsm.clk = clk;
    fsm.in = fsm.out == 4'd11 ? 4'd0;
    fsm.in = fsm.out == 4'd9 & i.done & cs_wh.out & go ? 4'd10;
    fsm.in = fsm.out == 4'd2 & !cs_wh.out & go ? 4'd11;
    fsm.in = fsm.out == 4'd0 & m.done & q.done & i.done & a.done & c.done & go | fsm.out == 4'd10 & cs_wh.out & go ? 4'd1;
    fsm.in = fsm.out == 4'd1 & 1'b1 & go ? 4'd2;
    fsm.in = fsm.out == 4'd2 & 1'b1 & go ? 4'd3;
    fsm.in = fsm.out == 4'd3 & c.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd3 & q.done & !cs_if.out & cs_wh.out & go ? 4'd4;
    fsm.in = fsm.out == 4'd4 & a.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd4 & a.done & !cs_if.out & cs_wh.out & go ? 4'd5;
    fsm.in = fsm.out == 4'd5 & q.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd5 & c.done & !cs_if.out & cs_wh.out & go ? 4'd6;
    fsm.in = fsm.out == 4'd6 & a.done & cs_if.out & cs_wh.out & go ? 4'd7;
    fsm.in = fsm.out == 4'd7 & c.done & cs_if.out & cs_wh.out & go ? 4'd8;
    fsm.in = fsm.out == 4'd8 & cs_if.out & cs_wh.out & go | fsm.out == 4'd6 & !cs_if.out & cs_wh.out & go ? 4'd9;
    fsm.write_en = fsm.out == 4'd0 & m.done & q.done & i.done & a.done & c.done & go | fsm.out == 4'd1 & 1'b1 & go | fsm.out == 4'd2 & 1'b1 & go | fsm.out == 4'd3 & c.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd4 & a.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd5 & q.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd6 & a.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd7 & c.done & cs_if.out & cs_wh.out & go | fsm.out == 4'd3 & q.done & !cs_if.out & cs_wh.out & go | fsm.out == 4'd4 & a.done & !cs_if.out & cs_wh.out & go | fsm.out == 4'd5 & c.done & !cs_if.out & cs_wh.out & go | fsm.out == 4'd8 & cs_if.out & cs_wh.out & go | fsm.out == 4'd6 & !cs_if.out & cs_wh.out & go | fsm.out == 4'd9 & i.done & cs_wh.out & go | fsm.out == 4'd10 & cs_wh.out & go | fsm.out == 4'd2 & !cs_wh.out & go | fsm.out == 4'd11 ? 1'd1;
    ge_5bits.left = !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go ? add_5bits.out;
    ge_5bits.right = !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go ? 5'd16;
    i.clk = clk;
    i.in = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go ? 3'd0;
    i.in = !i.done & cs_wh.out & fsm.out == 4'd9 & go ? add_3bits.out;
    i.write_en = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go | !i.done & cs_wh.out & fsm.out == 4'd9 & go ? 1'd1;
    lt.left = fsm.out == 4'd1 & go ? i.out;
    lt.right = fsm.out == 4'd1 & go ? 3'd4;
    m.clk = clk;
    m.in = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go ? 4'd11;
    m.write_en = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go ? 1'd1;
    pad_5bit.in = !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go ? m.out;
    pad_5bit1.in = !c.done & cs_if.out & cs_wh.out & fsm.out == 4'd3 & go ? a.out;
    q.clk = clk;
    q.in = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go ? 4'd13;
    q.in = !q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go ? add_4bits.out;
    q.write_en = !(m.done & q.done & i.done & a.done & c.done) & fsm.out == 4'd0 & go | !q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go ? 1'd1;
    rshift_4bits.left = !a.done & !cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd6 & go ? a.out;
    rshift_4bits.left = !q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go ? q.out;
    rshift_4bits.right = !q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go | !a.done & !cs_if.out & cs_wh.out & fsm.out == 4'd4 & go | !a.done & cs_if.out & cs_wh.out & fsm.out == 4'd6 & go ? 4'd1;
    slicer.in = !q.done & !cs_if.out & cs_wh.out & fsm.out == 4'd3 & go | !q.done & cs_if.out & cs_wh.out & fsm.out == 4'd5 & go ? a.out;
    slicer.in = cs_wh.out & fsm.out == 4'd2 & go ? q.out;
  }

  control {}
}

