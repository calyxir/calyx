import "primitives/core.futil";

component main() -> () {
    cells {
        const9 = std_const(32, 9);
        const8 = std_const(32, 8);
        reg0 = std_reg(32);
        reg1 = std_reg(32);
        reg2 = std_reg(32);
        add0 = std_add(32);
        add1 = std_add(32);
    }
    
    wires {
        group wr{
            reg0.write_en = !reg2.write_en ? 1'b1;
            reg1.write_en = !reg2.write_en ? 1'b1;
            reg2.write_en = reg1.done ? 1'b1; //else will be zero 

            //reg2 should get 18, reg 1 gets 17
            add0.left = const9.out;
            add0.right = reg2.write_en ? const9.out;
            add0.right = !reg2.write_en ? const8.out;

            //reg0 should get 16, NOT 17!
            add1.left = const8.out;
            add1.right = reg1.done ? const9.out;
            add1.right = !reg1.done ? const8.out;

            reg0.in = add1.out;
            reg1.in = add0.out;
            reg2.in = add0.out;

            wr[done] = reg2.done;
        }
    }

    control {
        seq {
            wr;
        }
    }
}