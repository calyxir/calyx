import "primitives/core.futil";

component main() -> () {
    cells {
        const0 = std_const(32, 9);
        const1 = std_const(32, 400);
        reg0 = std_reg(32);
        reg1 = std_reg(32);
    }
    
    wires {
        group wr_reg0 {
            reg0.in = const0.out;
            wr_reg0[done] = reg0.done;
            reg0.write_en = 1'd1;
        }
        group wr_reg1 {
            reg1.in = const1.out;
            wr_reg1[done] = reg1.done;
            reg1.write_en = 1'd1
        }
    }

    //the point of this test case is to make sure that
    //reg0's done port is zero at the end of execution
    //b/c reg1 and reg0 can't have done asserted t same time
    //if they are executed sequentially
    control {
        seq {
            wr_reg0;
            wr_reg1;
        }
    }
}