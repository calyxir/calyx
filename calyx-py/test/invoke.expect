import "primitives/core.futil";
import "primitives/binary_operators.futil";
component foo<"pos"={3}>(a: 32) -> (out: 32) {
  cells {
    @pos{0} temp = std_reg(32);
  }
  wires {
    group let<"pos"={1}, "promotable"=1> {
      temp.in = a;
      temp.write_en = 1'd1;
      let[done] = temp.done;
    }
    out = temp.out;
  }
  control {
    @pos{2} seq {
      @pos{2} let;
    }
  }
}
component main<"pos"={14}>() -> () {
  cells {
    @pos{4} b = std_reg(32);
    @pos{5} c = std_reg(32);
    @pos{6} cst = std_const(32, 1);
    @pos{7} foo0 = foo();
  }
  wires {
    group write_constant<"pos"={8}, "promotable"=1> {
      b.in = cst.out;
      b.write_en = 1'd1;
      write_constant[done] = b.done;
    }
    group save_foo<"pos"={9}> {
      c.in = foo0.out;
      c.write_en = 1'd1;
      save_foo[done] = c.done;
    }
  }
  control {
    @pos{13} seq {
      @pos{10} write_constant;
      @pos{11} invoke foo0(a=b.out)();
      @pos{12} save_foo;
    }
  }
}

sourceinfo #{
FILES 
  0: invoke.py
POSITIONS 
  0: 0 28
  1: 0 31
  2: 0 49
  3: 0 43
  4: 0 58
  5: 0 59
  6: 0 60
  7: 0 61
  8: 0 65
  9: 0 74
  10: 0 85
  11: 0 86
  12: 0 87
  13: 0 96
  14: 0 90
}#
