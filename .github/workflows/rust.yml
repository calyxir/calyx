name: Test

on: [push]

jobs:
  interpreter:
    name: Test Interpreter
    runs-on: ubuntu-latest
    container: ghcr.io/cucapra/calyx:latest
    steps:
    - name: Copy fud configuration
      run: |
        mkdir -p $HOME/.config
        cp -r /root/.config/* $HOME/.config

    - name: Update Dahlia
      working-directory: /home/dahlia
      run: |
        git pull
        sbt "; assembly"

    - name: Checkout commit that triggered run
      working-directory: /home/calyx
      run: |
        git fetch --all
        git checkout $GITHUB_SHA

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all --manifest-path /home/calyx/interp/Cargo.toml

    - name: Runt tests
      working-directory: /home/calyx
      run: |
        # Run the remaining tests
        runt interp -x 'relay|mrxl' -d -o fail

    - name: Source code tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path /home/calyx/interp/Cargo.toml

    - name: Source code doc tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path /home/calyx/interp/Cargo.toml --doc

  compiler:
    name: Test Compiler
    runs-on: ubuntu-latest
    container: ghcr.io/cucapra/calyx:latest
    steps:
    - name: Copy fud configuration
      run: |
        mkdir -p $HOME/.config
        cp -r /root/.config/* $HOME/.config

    - name: Update Dahlia
      working-directory: /home/dahlia
      run: |
        git pull
        sbt "; assembly"

    - name: Checkout commit that triggered run
      working-directory: /home/calyx
      run: |
        git fetch --all
        git checkout $GITHUB_SHA

    - name: Install MrXL
      working-directory: /home/calyx
      run: |
        cd frontends/mrxl
        FLIT_ROOT_INSTALL=1 flit install --symlink

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --manifest-path /home/calyx/Cargo.toml

    - name: Source code doc tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path /home/calyx/calyx/Cargo.toml --doc lib

    - name: Core tests
      working-directory: /home/calyx
      run: |
        runt -i 'core|examples|errors' -d -o fail

    - name: NTT
      working-directory: /home/calyx
      run: |
        runt -i 'ntt' -x 'core|examples|errors' -d -o fail

    - name: Systolic
      working-directory: /home/calyx
      run: |
        runt -i 'systolic' -x 'core|examples|errors|NTT' -d -o fail

    - name: Dahlia
      working-directory: /home/calyx
      run: |
        runt -i 'dahlia' -x 'core|examples|errors|NTT|systolic' -d -o fail

    - name: Relay
      working-directory: /home/calyx
      run: |
        runt -i 'relay' -x 'core|examples|errors|dahlia|NTT|systolic' -d -o fail

    - name: Misc tests
      working-directory: /home/calyx
      run: |
        unset JAVA_TOOL_OPTIONS
        runt -x 'core|examples|errors|mrxl|relay|dahlia|NTT|systolic' -d -o fail

    - name: Run Python Tests
      working-directory: /home/calyx
      run: pytest fud/fud/stages/verilator/tests/numeric_types.py

  evaluation:
    name: Polybench Integration
    needs: compiler
    runs-on: ubuntu-latest
    container: ghcr.io/cucapra/calyx:latest
    steps:
    - name: Copy fud configuration
      run: |
        mkdir -p $HOME/.config
        cp -r /root/.config/* $HOME/.config

    - name: Update Dahlia
      working-directory: /home/dahlia
      run: |
        git pull
        sbt "; assembly"

    - name: Checkout commit that triggered run
      working-directory: /home/calyx
      run: |
        git fetch --all
        git checkout $GITHUB_SHA

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --manifest-path /home/calyx/Cargo.toml

    - name: Checkout calyx-evaluation
      working-directory: /home
      run: |
        git clone https://github.com/cucapra/calyx-evaluation.git calyx-evaluation

    - name: Run benchmarks
      working-directory: /home/calyx-evaluation/benchmarks
      run: |
        unset JAVA_TOOL_OPTIONS
        # Run the main benchmarks
        runt -i Correctness -d
        # Run the unrolled benchmarks
        runt -i Unrolled -d
        # Run the interpreter benchmarks
        # runt -i Interpreter -d
