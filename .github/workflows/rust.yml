name: Test

on: [push]

jobs:
  interpreter:
    name: Test Interpreter
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cucapra/calyx:latest
      options: --user 0:0
    steps:
    - name: Copy fud configuration
      run: |
        mkdir -p $HOME/.config
        cp -r /root/.config/* $HOME/.config

    - name: Update Dahlia
      working-directory: /home/dahlia
      run: |
        git pull
        sbt "; assembly"

    - name: Checkout commit that triggered run
      working-directory: /home/calyx
      run: |
        git fetch --all
        git checkout $GITHUB_SHA

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all --manifest-path /home/calyx/interp/Cargo.toml

    - name: Runt tests
      working-directory: /home/calyx
      run: |
        # Run the remaining tests
        runt interp -x 'relay|mrxl' -d -o fail

    - name: Source code tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path /home/calyx/interp/Cargo.toml

    - name: Source code doc tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path /home/calyx/interp/Cargo.toml --doc

  compiler:
    name: Test Compiler
    runs-on: ubuntu-latest
    container: ghcr.io/cucapra/calyx:latest
    steps:
    - name: Update Dahlia
      working-directory: /home/dahlia
      run: |
        git pull
        sbt "; assembly"

    - name: Checkout commit that triggered run
      working-directory: /home/calyx
      run: |
        git fetch --all
        git checkout $GITHUB_SHA

    - name: Install MrXL
      working-directory: /home/calyx
      run: |
        cd frontends/mrxl
        FLIT_ROOT_INSTALL=1 flit install --symlink

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --manifest-path /home/calyx/Cargo.toml

    - name: Source code doc tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path /home/calyx/calyx/Cargo.toml --doc lib

    - name: Core tests
      working-directory: /home/calyx
      run: |
        runt -i 'core|examples|errors' -d -o fail

    - name: Frontend tests
      working-directory: /home/calyx
      run: |
        unset JAVA_TOOL_OPTIONS
        runt -x 'core|examples|errors' -d -o fail

    - name: Run Python Tests
      working-directory: /home/calyx
      run: pytest fud/fud/stages/verilator/tests/numeric_types.py

  format:
    name: Check Formatting
    needs: compiler
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: 1.60.0
          override: true
          components: rustfmt, clippy
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Clippy version
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --version
    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all --all-targets -- --deny warnings

  lint:
    name: Python Linting
    needs: compiler
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fud Formatting check
        uses: psf/black@stable
        with:
          options: "--line-length 88"
          src: 'fud'
      - name: Systolic Array Formatting check
        uses: psf/black@stable
        with:
          options: "--line-length 88"
          src: 'frontends/systolic-lang'
      - name: Fud Linting check
        uses: TrueBrain/actions-flake8@master
        with:
          max_line_length: 88
          path: 'fud'
      - name: Systolic Array Linting check
        uses: TrueBrain/actions-flake8@master
        with:
          max_line_length: 88
          path: 'frontends/systolic-lang'
